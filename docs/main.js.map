{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./ts/models/abilityScore.ts","webpack:///./ts/models/character.ts","webpack:///./ts/models/class.ts","webpack:///./ts/models/skills.ts","webpack:///./ts/models/race.ts","webpack:///./ts/models/background.ts","webpack:///./ts/components/spellsList.tsx","webpack:///./ts/components/characterPicker.tsx","webpack:///./ts/components/newCharacter.tsx","webpack:///./ts/services/randomizer.ts","webpack:///./ts/services/data.ts","webpack:///./ts/models/range.ts","webpack:///./ts/models/tools.ts","webpack:///./ts/models/classDetails.ts","webpack:///./ts/services/seeder.ts","webpack:///./ts/models/note.ts","webpack:///./ts/models/spells.ts","webpack:///./ts/components/icons.tsx","webpack:///./ts/app.tsx","webpack:///./ts/components/characterSheet.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","AbilityScores","[object Object]","scores","this","AbilityScore","AbilityKind","Strength","Dexterity","Constitution","Intelligence","Wisdom","Charisma","cb","map","acc","reduce","kind","find","k","modifier","fromJson","idx","findIndex","a","other","json","Math","floor","abilityScore_1","data_1","race_1","class_1","background_1","skills_1","range_1","Character","nextName","abilityScores","race","Race","characterClass","Class","ClassKind","Fighter","background","Background","BackgroundKind","Criminal","alignment","Alignment","ChaoticGood","experience","height","Height","weight","eyeColor","inspiration","armor","shield","skills","Skills","weapons","Weapon","wealth","Wealth","languages","NormalLanguage","Common","notes","damage","tempHp","magicItems","expendables","set","proficiencyBonus","proficiency","ret","armorProfs","weaponProfs","StdWeaponName","replace","miscProfs","toolProficiencies","forEach","Array","isArray","filter","counter","saves","fullScores","score","raceMod","abilityModifiers","classMod","bonusAbilityScores","prefs","savingThrows","pref","indexOf","Save","rawSkills","bonuses","modifiedAbilityScores","ability","skill","mod","bonus","enabled","selectedSkills","Bard","level","Rogue","classDetails","expertise","updated","racialMod","passiveWisdom","initiative","dex","dexLimit","Barbarian","Data","levelForExp","points","expToNextLevel","con","base","hitDie","avg","averageHpFor","hitPoints","speed","Armor","MagicItem","ExpendableItem","id","AlignmentMajor","AlignmentMinor","WeaponType","WeaponKind","WeaponDamageKind","WeaponWeight","WeaponHandedness","ClassLanguage","CharacterSize","major","minor","Neutral","Lawful","Good","Evil","Chaotic","feet","inches","LightArmor","MediumArmor","HeavyArmor","ArmorWeight","weaponType","Melee","Simple","damageKind","Piercing","Light","handedness","One","range","Range","carryWeight","thrown","isRanged","isFinesse","substr","toLocaleLowerCase","metaString","copper","silver","electrum","gold","platinum","balance","roundUp","roundDown","mul","buf","quantity","desc","character_1","classDetails_1","DEFAULT_BONUS_ABILITY_SCORES","_level","numberOfPrimaryAbilities","canUseShield","features","numberOfSkills","availableSkills","barbarianCtor","bardCtor","Cleric","clericCtor","Druid","druidCtor","fighterCtor","Monk","monkCtor","Paladin","paladinCtor","Ranger","rangerCtor","rogueCtor","Sorcerer","sorcererCtor","Warlock","warlockCtor","Wizard","wizardCtor","proficiencyBonusFor","details","BarbarianDetails","primaryAbility","Martial","Medium","Heavy","SkillKind","AnimalHandling","Athletics","Intimidation","Nature","Perception","Survival","BardDetails","HandCrossbow","LongSword","Rapier","ShortSword","getOwnPropertyNames","bardCollege","BardCollege","Valor","ClericDetails","History","Insight","Medicine","Persuasion","Religion","DruidDetails","Club","Dagger","Dart","Javelin","Mace","QuarterStaff","Scimitar","Sickle","Spear","Arcana","FighterDetails","Acrobatics","MonkDetails","Stealth","PaladinDetails","RangerDetails","Investigation","RogueDetails","Deception","Performance","SleightOfHand","SorcererDetails","Sling","LightCrossbow","WarlockDetails","WizardDetails","Skill","skillKind","skillIdx","from","tools_1","RaceKind","Human","subRace","size","toolProfs","miscBenefits","bonusLanguages","naturalWeapons","Bludgeoning","Dragonborn","Dragon","Black","checkSubRace","Dwarf","dwarfCtor","Elf","elfCtor","Halfling","halflingCtor","humanCtor","dragonbornCtor","Gnome","gnomeCtor","HalfElf","halfElfCtor","HalfOrc","halfOrcCtor","Tiefling","tieflingCtor","Hill","Mountain","ageRange","preferredAlignment","heightRange","avgWeight","darkVision","Battleaxe","HandAxe","ThrowingHammer","WarHammer","Dwarvish","High","Wood","Drow","Elvish","LongBow","ShortBow","LawfulGood","Small","Lightfoot","Stout","TrueNeutral","breathDmgKind","breathRange","NeutralGood","Copper","damageResistance","Acid","Blue","Bronze","Lightening","Brass","Gold","Red","Fire","Green","Poison","Silver","White","Cold","Natural","Draconic","Gnomish","Forest","Rock","ArtisanTools","Tinker","Orc","ChaoticEvil","Infernal","Error","GAMING_SETS","GamingSet","INSTRUMENTS","Instrument","ARTISAN_TOOLS","VEHICLES","Mount","concat","Vehicle","Boat","toolOptions","Acolyte","Charlatan","MiscTools","Disguise","Forgery","Thieves","Entertainer","FolkHero","GuildArtisan","Hermit","Herbalism","Noble","Outlander","Sage","Sailor","Navigator","Soldier","Urchin","ACOLYTE_TRAITS","ACOLYTE_IDEALS","ACOLYTE_BONDS","ACOLYTE_FLAWS","CHARLATAN_TRAITS","CHARLATAN_IDEALS","CHARLATAN_BONDS","CHARLATAN_FLAWS","ALL_BACKGROUNDS","React","react_desktop_1","SpellsList","Component","props","super","spellLists","spells","spell","state","selectedSpell","selectedSpellLevel","setState","createElement","Box","style","gridArea","marginLeft","marginTop","borderRadius","padding","renderInner","ListView","ListViewHeader","title","list","ListViewSection","ListViewSectionHeader","Text","ListViewRow","borderBottom","onClick","components","verbalRequirement","somaticRequirement","materialRequirement","join","TitleBar","Button","marginRight","textAlign","width","fontFamily","fontSize","lineHeight","SpellDescPart","multiLineValue","castingTime","duration","split","line","macOs_1","icons_1","CharacterPicker","className","characters","CharacterPickerEntry","characterSelected","newCharacterClicked","hover","addEventListener","chClass","characterClassString","CharacterClassIcon","classKind","fill","color","NewCharacter","randomizer_1","RACE_ICON","CircledLetter","letter","BASIC_ICON","CLASS_ICON","BACK_ICON","CharacterCreator","character","Randomizer","randomCharacter","selectedTab","allClasses","getAllClasses","allBackgrounds","getAllBackground","Toolbar","ToolbarNav","ToolbarNavItem","icon","selected","onSave","renderBody","RaceInfo","raceChanged","valueChanged","CharacterInfo","backgroundSkills","ClassInfo","classes","onClassChange","BackgroundInfo","backgrounds","onBackgroundChange","b","characterBackground","prev","console","log","newProps","randomHeight","randomWeight","newCharacter","assign","resetSkills","RaceSelector","onRaceChange","raceKind","subRaceChanged","RaceDetails","borderRight","getList","toString","first","RaceDetail","text","skillsSelected","remainingSkills","display","flexFlow","marginBottom","Label","htmlFor","TextInput","focusRing","defaultValue","onChange","ev","currentTarget","type","parseInt","flex","margin","enabledFromBackground","isClassSkill","checkboxDisabled","SkillRadio","checked","disabled","label","backgroundColor","ClassSelector","v","classChanged","onLevelChange","levelChanged","selectedClassKind","ClassDetailsComponent","classDesc","lvl","newClass","toLowerCase","longDesc","allRaces","getAllRaces","selectedRace","subRaces","subRaceFor","hidden","la","lastNull","opts","randomRace","randomSubRace","cls","randomClassKind","bkgnd","randomBackground","randomArmor","random","ct","abi","each","sampleEnum","sample","min","max","ft","rng","values","Uint8Array","crypto","getRandomValues","percent","RingMail","Leather","Hide","array","enumeration","keys","spells_1","dexie_1","db","Database","ready","init","allCharacters","ch","addCharacter","saveCharacters","spellsForClass","exp","numD4","gp","default","version","stores","seeds","bardSpells","clericSpells","druidSpells","paladinSpells","rangerSpells","rogueSpells","sorcererSpells","warlockSpells","wizardSpells","count","seed","Promise","resolve","then","e","error","toArray","add","chs","bulkPut","Spell","second","note_1","primalPath","totem","Note","dailyRages","rageDamage","pathDesc","pathNotes","brutalCriticalDice","PrimalPath","Berserker","TotemWarrior","totemNotes","Totem","Bear","bearNotes","Eagle","eagleNotes","Wolf","wolfNotes","spirit","Infinity","ClericDomain","RoguishArchType","bardicInspirationDie","songOfRestDice","collegeDesc","collegeNotes","magicalSecrets","Lore","barbCollege","domain","domainDesc","longDomainDesc","channels","availableChannels","domainChannels","destroyUndeadCR","Knowledge","Life","Tempest","Trickery","War","circle","maxWildShapeCR","maxWildShapeHours","wildShapeRestrictions","DruidCircle","fightingStyle","FighterStyle","oath","PaladinStyle","PaladinOath","favoredEnemy","RangerEnemy","archType","expertiseNumber","sneakAttackDice","archTypeDesc","archTypeDetails","Thief","Assassin","ArcaneTrickster","ceil","metaMagic","origins","MetaMagic","SorcererOrigins","patron","OtherworldlyPatron","arcaneTradition","ArcaneTradition","spellBooks","fetch","location","href","res","JSON","parse","Dragonchess","Two","seedCharacters","bard","cleric","druid","paladin","ranger","rogue","sorcerer","warlock","wizard","put","when","Date","toISOString","shortDesc","Spells","SpellName","save","SpellSave","toBeat","ifBeaten","ifLost","xmlns","viewBox","transform","touchAction","cx","cy","x","y","textAnchor","mask","ReactDom","characterSheet_1","characterPicker_1","newCharacter_1","App","currentView","View","selectedCharacter","spellList","getCharacters","alignItems","goBack","renderView","switchView","CharacterSheet","adjustDamage","newDmg","adjustSelectedCharacterDamage","adjustTempHP","newHp","adjustSelectedCharacterTempHP","adjustExp","newExp","adjustCharacterExperience","adjustMoney","adjustCharacterWealth","adjustScores","adjustCharacterScores","adjustExpendables","expends","adjustCharacterExpends","adjustMagics","magics","adjustCharacterMagicItems","adjustWeapons","newWeapons","adjustCharacterWeapons","adjustInspiration","newValue","__awaiter","adjustCharacterInspiration","Loading","ProgressCircle","newView","meta","getSpellsForClass","saveCharacter","newHP","app","document","getElementById","render","spellsList_1","CharacterName","inspirationChanged","CharacterDescription","needsLevelUp","adjustExperience","AbilitiesColumn","updateScores","Proficiency","Saves","SkillsList","Defences","armorClass","currentHealth","tempHitPoints","hitDice","damageChanged","dmg","tempHPChanged","hp","Weapons","Money","Notes","ItemsList","newExpendables","newMagics","bold","adjustingExperience","paddingTop","ExperienceAdjuster","onComplete","experienceAdjustmentComplete","currentExp","cachedHandler","keyHandler","Dialog","horizontalAlignment","zIndex","position","removeEventListener","editingScores","AbilityScoreContainer","editScores","AbilityScoreAdjustor","scoresSaved","completeEditingScores","Empty","updateAbilities","valueAsNumber","toUpperCase","SkillContainer","Radio","defaultChecked","PassiveWisdom","DefenceContainer","newTemp","HitDieDefenceContainer","formatClass","addingWeapon","w","WeaponContainer","weapon","onDeleteClicked","removeWeapon","NewWeapon","newWeapon","addWeapon","miscString","updateState","Slashing","Versatile","Checkbox","updatingMoney","updateMoney","MoneyAdjuster","currentWealth","finishUpdatingMoney","updatedWealth","updatedWealthMul","updateCurrentWealth","unit","header","addingItem","item","fontWeight","removeItem","NewItem","newItemComplete","newItem","magic","addNewItem","newQty","newExps","pendingDesc","pendingName","pendingQty","placeholder"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0,\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([84,0,3]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export class AbilityScores {\n    private scores:  AbilityScore[]\n    constructor(\n        scores?: AbilityScore[]\n    ) { \n        if (!scores) {\n            this.scores = [\n                new AbilityScore(8, AbilityKind.Strength),\n                new AbilityScore(8, AbilityKind.Dexterity),\n                new AbilityScore(8, AbilityKind.Constitution),\n                new AbilityScore(8, AbilityKind.Intelligence),\n                new AbilityScore(8, AbilityKind.Wisdom),\n                new AbilityScore(8, AbilityKind.Charisma),\n            ];\n        } else {\n            this.scores = scores;\n        }\n    }\n\n    public static Empty(): AbilityScores {\n        return new AbilityScores([\n            new AbilityScore(0, AbilityKind.Strength),\n            new AbilityScore(0, AbilityKind.Dexterity),\n            new AbilityScore(0, AbilityKind.Constitution),\n            new AbilityScore(0, AbilityKind.Intelligence),\n            new AbilityScore(0, AbilityKind.Wisdom),\n            new AbilityScore(0, AbilityKind.Charisma),\n        ])\n    }\n\n    public map<U>(cb: (score: AbilityScore) => U): U[] {\n        return this.scores.map(cb)\n    }\n\n    public reduce<U>(cb: (previousValue: U, currentValue: AbilityScore) => U, acc: U): U {\n        return this.scores.reduce(cb, acc)\n    }\n\n    public modifier(kind: AbilityKind): number {\n        return this.scores.find(k => k.kind == kind).modifier;\n    }\n    public clone(): AbilityScores {\n        return AbilityScores.fromJson(this);\n    }\n\n    public set(kind: AbilityKind, value: number) {\n        let idx = this.scores.findIndex(a => a.kind == kind);\n        if (idx < 0) return;\n        this.scores[idx].value = value;\n    }\n\n    public add(other: AbilityScores): AbilityScores {\n        return new AbilityScores([\n            new AbilityScore(this.scores[0].value + other.scores[0].value, this.scores[0].kind),\n            new AbilityScore(this.scores[1].value + other.scores[1].value, this.scores[1].kind),\n            new AbilityScore(this.scores[2].value + other.scores[2].value, this.scores[2].kind),\n            new AbilityScore(this.scores[3].value + other.scores[3].value, this.scores[3].kind),\n            new AbilityScore(this.scores[4].value + other.scores[4].value, this.scores[4].kind),\n            new AbilityScore(this.scores[5].value + other.scores[5].value, this.scores[5].kind),\n        ]);\n    }\n\n    public static fromJson(json: any): AbilityScores {\n        return new AbilityScores(\n            json.scores.map(AbilityScore.fromJson),\n        )\n    }\n}\n\nexport class AbilityScore {\n    constructor(\n        public value: number,\n        public kind: AbilityKind\n    ) { }\n\n    get modifier() {\n        return Math.floor((this.value - 10) / 2);\n    }\n    public static fromJson(json: any): AbilityScore {\n        return new AbilityScore(\n            json.value,\n            json.kind,\n        )\n    }\n}\n\nexport enum AbilityKind {\n    Strength = 'Strength',\n    Dexterity = 'Dexterity',\n    Constitution = 'Constitution',\n    Intelligence = 'Intelligence',\n    Wisdom = 'Wisdom',\n    Charisma = 'Charisma',\n}","import { AbilityScores, AbilityKind, AbilityScore } from \"./abilityScore\";\nimport { Data } from \"../services/data\";\nimport { Race } from './race';\nimport { Class, ClassKind } from './class';\nimport { RogueDetails } from './classDetails';\nimport { Background, BackgroundKind } from \"./background\";\nimport { Skills, SkillKind } from './skills';\nimport { Range } from './range';\nexport class Character {\n    private static counter = 0;\n    public shield?: Armor;\n    public armor?: Armor;\n    public id?: number;\n    constructor(\n        public name: string = Character.nextName(),\n        public abilityScores: AbilityScores = new AbilityScores(),\n        public race: Race = new Race(),\n        public characterClass: Class = new Class(ClassKind.Fighter, 1),\n        public background: Background = new Background(BackgroundKind.Criminal),\n        public alignment: Alignment = Alignment.ChaoticGood(),\n        public experience: number = 0,\n        public height: Height = new Height(),\n        public weight: number = 160,\n        public eyeColor: string = 'grey',\n        public inspiration: number = 0,\n        armor: Armor = null,\n        shield: Armor = null,\n        public skills: Skills = new Skills(),\n        public weapons: Weapon[] = [new Weapon()],\n        public wealth: Wealth = new Wealth(),\n        public languages: Language[] = [NormalLanguage.Common],\n        public notes: string[] = [],\n        public damage: number = 0,\n        public tempHp: number = 0,\n        public magicItems: MagicItem[] = [],\n        public expendables: ExpendableItem[] = [],\n    ) { \n        this.shield = shield;\n        this.armor = armor;\n        this.background.skills.map(s => {\n            this.skills.set(s, true);\n        });\n    }\n\n    public resetSkills() {\n        this.skills = new Skills();\n        this.background.skills.map(s => {\n            this.skills.set(s, true);\n        });\n    }\n\n    public get proficiencyBonus(): number {\n        return this.characterClass.proficiencyBonus()\n    }\n\n    public get proficiency(): string[] {\n        let ret = this.characterClass.armorProfs.map(p => `${p} Armor`);\n        ret.push(...this.characterClass.weaponProfs.map(p => {\n            if (StdWeaponName[p.replace(/\\s/g, '')]) {\n                return p;\n            }\n            return `${p} Weapons`;\n        }));\n        ret.push(...this.characterClass.miscProfs);\n        this.background.toolProficiencies.forEach(p => {\n            if (Array.isArray(p)) {\n                return;\n            }\n            ret.push(p);\n        });\n        if (this.background.languages.length > 0) {\n            if (this.background.languages.filter(l => l != null).length == 0) {\n                ret.push(`${this.background.languages.length} languages of your choice`);\n            } else {\n                ret.push(...this.background.languages);\n            }\n        }\n        return ret;\n    }\n\n    public static nextName() {\n        let ret = 'Carl';\n        if (Character.counter > 0) {\n            ret += ` ${Character.counter}`;\n        }\n        Character.counter++;\n        return ret;\n    }\n\n    public get saves(): Save[] {\n        let fullScores = this.abilityScores.map(score => {\n            let s = new AbilityScore(score.value, score.kind);\n            let raceMod = this.race.abilityModifiers.find(m => m[0] == s.kind);\n            if (raceMod) {\n                s.value += raceMod[1];\n            }\n            let classMod = this.characterClass.bonusAbilityScores.find(m => m[0] == s.kind);\n            if (classMod) {\n                s.value += classMod[1];\n            }\n            return s;\n        });\n        let prefs = this.characterClass.savingThrows;\n        return fullScores.map(score => {\n            let pref = prefs.indexOf(score.kind) > -1;\n            let value = pref ? score.modifier + this.proficiencyBonus : score.modifier\n            return new Save(score.kind, pref, value);\n        });\n    }\n\n    public get rawSkills(): [SkillKind, number, boolean][] {\n        let bonuses = this.modifiedAbilityScores().reduce((acc, ability) => {\n            acc[ability.kind] = ability.modifier;\n            return acc;\n        }, {});\n        return this.skills.map(skill => {\n            let mod = bonuses[skill.modifier];\n            let bonus = 0;\n            let enabled = skill.enabled \n                        || this.characterClass.selectedSkills.indexOf(skill.kind) > -1;\n            if (enabled) {\n                bonus = this.proficiencyBonus;\n            } else if (this.characterClass.name === ClassKind.Bard && this.level > 1) {\n                bonus = Math.floor(this.proficiencyBonus / 2);\n            }\n            if (this.characterClass.name == ClassKind.Rogue\n                || this.characterClass.name === ClassKind.Bard) {\n                let det = this.characterClass.classDetails as RogueDetails;\n                if (det.expertise.indexOf(skill.kind) > -1) {\n                    bonus *= 2;\n                }\n            }\n            let value = mod + bonus;\n            return [skill.kind, value, enabled] as [SkillKind, number, boolean];\n        });\n    }\n\n    public modifiedAbilityScores(): AbilityScores {\n        let updated = this.abilityScores.map(score => {\n            let {kind, value} = score;\n            let racialMod = this.race.abilityModifiers.find(m => m[0] == kind);\n            if (racialMod) {\n                value += racialMod[1];\n            }\n            let classMod = this.characterClass.bonusAbilityScores.find(m => m[0] == kind);\n            if (classMod) {\n                value += classMod[1];\n            }\n            return new AbilityScore(value, kind);\n        });\n        return new AbilityScores(updated);\n    }\n\n    public get passiveWisdom(): number {\n        return this.abilityScores.modifier(AbilityKind.Wisdom) + this.proficiencyBonus;\n    }\n\n    public get initiative(): number {\n        return this.abilityScores.modifier(AbilityKind.Dexterity);\n    }\n\n    public armorClass(): number {\n        let dex = this.abilityScores.modifier(AbilityKind.Dexterity);\n        let bonus = 0;\n        if (this.armor) {\n            bonus = this.armor.bonus;\n            if (this.armor.dexLimit && this.armor.dexLimit < dex) {\n                dex = this.armor.dexLimit;\n            }\n        } else if (this.characterClass.name == ClassKind.Barbarian) {\n            bonus = this.abilityScores.modifier(AbilityKind.Constitution);\n        }\n        if (this.shield) {\n            bonus += this.shield.bonus;\n        }\n        return 10 + bonus + dex;\n    }\n\n    public get level(): number {\n        let ret = Data.levelForExp(this.experience);\n        if (this.characterClass.level != ret) {\n            this.characterClass.level = ret;\n        }\n        return ret;\n    }\n\n    addExperience(points: number) {\n        this.experience += points;\n    }\n\n    get expToNextLevel(): number {\n        switch (this.level) {\n            case 1:\n                return 300 - this.experience;\n            case 2:\n                return 900 - this.experience;\n            case 3:\n                return 2700 - this.experience;\n            case 4:\n                return 6500 - this.experience;\n            case 5:\n                return 14000 - this.experience;\n            case 6:\n                return 23000 - this.experience;\n            case 7:\n                return 34000 - this.experience;\n            case 8:\n                return 48000 - this.experience;\n            case 9:\n                return 64000 - this.experience;\n            case 10:\n                return 85000 - this.experience;\n            case 11:\n                return 100000 - this.experience;\n            case 12:\n                return 120000 - this.experience;\n            case 13:\n                return 140000 - this.experience;\n            case 14:\n                return 165000 - this.experience;\n            case 15:\n                return 195000 - this.experience;\n            case 16:\n                return 225000 - this.experience;\n            case 17:\n                return 265000 - this.experience;\n            case 18:\n                return 305000 - this.experience;\n            case 19:\n                return 355000 - this.experience;\n        }\n    }\n    \n    needsLevelUp(): boolean {\n        return (this.level ===  1 && this.experience >    300)\n            || (this.level ===  2 && this.experience >    900)\n            || (this.level ===  3 && this.experience >   2700)\n            || (this.level ===  4 && this.experience >   6500)\n            || (this.level ===  5 && this.experience >  14000)\n            || (this.level ===  6 && this.experience >  23000)\n            || (this.level ===  7 && this.experience >  34000)\n            || (this.level ===  8 && this.experience >  48000)\n            || (this.level ===  9 && this.experience >  64000)\n            || (this.level === 10 && this.experience >  85000)\n            || (this.level === 10 && this.experience > 100000)\n            || (this.level === 11 && this.experience > 120000)\n            || (this.level === 12 && this.experience > 140000)\n            || (this.level === 13 && this.experience > 165000)\n            || (this.level === 15 && this.experience > 195000)\n            || (this.level === 16 && this.experience > 225000)\n            || (this.level === 17 && this.experience > 265000)\n            || (this.level === 18 && this.experience > 305000)\n            || (this.level === 19 && this.experience > 355000)\n    }\n\n    hitPoints(): number {\n        let con = this.abilityScores.modifier(AbilityKind.Constitution);\n        let base = this.characterClass.hitDie + con;\n        let avg = Data.averageHpFor(this.characterClass.name)\n        for (let i = 0; i < this.level;i++) {\n            base += avg + con;\n        }\n        return base;\n    }\n\n    currentHealth(): number {\n        return this.hitPoints() + this.tempHp - this.damage;\n    }\n\n    get speed(): number {\n        if (this.characterClass.name == ClassKind.Barbarian && this.level > 4) {\n            return this.race.speed + 10;\n        }\n        return this.race.speed;\n    }\n\n    public static fromJson(json: any): Character {\n        let ret = new Character(\n            json.name,\n            AbilityScores.fromJson(json.abilityScores),\n            Race.fromJson(json.race),\n            Class.fromJson(json.characterClass),\n            Background.fromJson(json.background),\n            Alignment.fromJson(json.alignment),\n            json.experience,\n            Height.fromJson(json.height),\n            json.weight,\n            json.eyeColor,\n            json.inspiration,\n            Armor.fromJson(json.armor),\n            Armor.fromJson(json.shield),\n            Skills.fromJson(json.skills),\n            json.weapons.map(Weapon.fromJson),\n            Wealth.fromJson(json.wealth),\n            json.languages,\n            json.notes,\n            json.damage,\n            json.tempHp,\n            json.magicItems.map(MagicItem.fromJson),\n            json.expendables.map(ExpendableItem.fromJson),\n        );\n        if (json.id) {\n            ret.id = json.id;\n        }\n        return ret;\n    }\n}\n\nexport type Language = NormalLanguage\n                    | ClassLanguage;\n\nexport enum NormalLanguage {\n    Common = 'Common',\n    Dwarvish = 'Dwarvish',\n    Elvish = 'Elvish',\n    Halfling = 'Halfling',\n    Draconic = 'Draconic',\n    Gnomish = 'Gnomish',\n    Orc = 'Orc',\n    Infernal = 'Infernal',\n}\n\nexport enum ClassLanguage {\n    ThievesCant = \"Thieves' Cant\",\n    Druidic = 'Druidic',\n}\n\nexport enum CharacterSize {\n    Small = 'Small',\n    Medium = 'Medium',\n    Large = 'Large',\n}\n\nexport class Alignment {\n    constructor(\n        public major: AlignmentMajor, \n        public minor: AlignmentMinor,\n    ) { }\n\n    toString() {\n        if (this.major == AlignmentMajor.Neutral \n            && this.minor == AlignmentMinor.Neutral) \n        {\n            return 'True Neutral';\n        }\n        return `${this.major} ${this.minor}`;\n    }\n    static LawfulGood(): Alignment {\n        return new Alignment(AlignmentMajor.Lawful, AlignmentMinor.Good);\n    }\n    static LawfulNeutral(): Alignment {\n        return new Alignment(AlignmentMajor.Lawful, AlignmentMinor.Neutral);\n    }\n    static LawfulEvil(): Alignment {\n        return new Alignment(AlignmentMajor.Lawful, AlignmentMinor.Evil);\n    }\n    static NeutralGood(): Alignment {\n        return new Alignment(AlignmentMajor.Neutral, AlignmentMinor.Good);\n    }\n    static TrueNeutral(): Alignment {\n        return new Alignment(AlignmentMajor.Neutral, AlignmentMinor.Neutral);\n    }\n    static NeutralEvil(): Alignment {\n        return new Alignment(AlignmentMajor.Neutral, AlignmentMinor.Evil);\n    }\n    static ChaoticGood(): Alignment {\n        return new Alignment(AlignmentMajor.Chaotic, AlignmentMinor.Good);\n    }\n    static ChaoticNeutral(): Alignment {\n        return new Alignment(AlignmentMajor.Chaotic, AlignmentMinor.Neutral);\n    }\n    static ChaoticEvil(): Alignment {\n        return new Alignment(AlignmentMajor.Chaotic, AlignmentMinor.Evil);\n    }\n    static fromJson(json: any): Alignment {\n        return new Alignment(\n            json.major,\n            json.minor,\n        );\n    }\n\n}\n\nexport enum AlignmentMajor {\n    Lawful = 'Lawful',\n    Neutral = 'Neutral',\n    Chaotic = 'Chaotic',\n}\n\nexport enum AlignmentMinor {\n    Good = 'Good',\n    Neutral = 'Neutral',\n    Evil = 'Evil',\n}\n\nexport class Height {\n    constructor(\n        public feet: number = 5,\n        public inches: number = 9,\n    ) { }\n\n    toString(): string {\n        return `${this.feet}' ${this.inches}\"`;\n    }\n    public static fromJson(json: any): Height {\n        return new Height(\n            json.feet,\n            json.inches,\n        )\n    }\n}\n\nexport class Save {\n    constructor(\n        public kind: AbilityKind,\n        public enabled: boolean,\n        public value: number,\n    ) { }\n    public static fromJson(json: any): Save {\n        return new Save(\n            json.kind,\n            json.enabled,\n            json.value,\n        )\n    }\n}\n\nexport class Armor {\n    public dexLimit?: number;\n    constructor(\n        public name: ArmorName,\n        public kind: ArmorWeight,\n        public bonus: number,\n        dexLimit: number = null,\n    ) {\n        this.dexLimit = dexLimit;\n    }\n    public static fromJson(json: any): Armor {\n        if (!json) return null;\n        return new Armor(\n            json.kind,\n            json.bonus,\n            json.dexLimit,\n        )\n    }\n}\n\nexport type ArmorName = LightArmor | MediumArmor | HeavyArmor | 'Shield';\n\nexport enum LightArmor {\n    Padded = 'Padded',\n    Leather = 'Leather',\n    StuddedLeather = 'StuddedLeather',\n}\n\nexport enum MediumArmor {\n    Hide = 'Hide',\n    ChainShirt = 'ChainShirt',\n    ScaleMail = 'ScaleMail',\n    BreastPlate = 'BreastPlate',\n    HalfPlate = 'HalfPlate',\n}\n\nexport enum HeavyArmor {\n    RingMail = 'RingMail',\n    ChainMail = 'ChainMail',\n    Splint = 'Splint',\n    Plate = 'Plate',\n}\n\nexport enum ArmorWeight {\n    Light = 'Light',\n    Medium = 'Medium',\n    Heavy = 'Heavy',\n    Shield = 'Shield',\n}\n\nexport class Weapon {\n    constructor(\n        public name: WeaponName = 'Daggar',\n        public weaponType: WeaponType = WeaponType.Melee,\n        public kind: WeaponKind = WeaponKind.Simple,\n        public damageKind: WeaponDamageKind = WeaponDamageKind.Piercing,\n        public weight: WeaponWeight = WeaponWeight.Light,\n        public handedness: WeaponHandedness = WeaponHandedness.One,\n        public hitDie: [number, number] = [1, 4],\n        public range: Range = new Range(5),\n        public carryWeight: number = 1,\n        public thrown: Range = new Range(20, 60),\n        public isRanged: boolean = false,\n        public isFinesse: boolean = true,\n        public notes: string = '',\n    ) { }\n\n    miscString(): string {\n        let ret = `${this.damageKind.substr(0, 1)}`;\n        if (this.handedness) {\n            ret += `/${this.handedness.substr(0, 1)}`;\n        }\n        if (this.weight) {\n            ret += `/${this.weight.substr(0, 1).toLocaleLowerCase()}`;\n        }\n        if (this.isRanged) {\n            ret += '/R';\n        }\n        if (this.thrown) {\n            ret += '/T';\n        }\n        if (this.isFinesse) {\n            ret += '/F'\n        }\n        ret += '/' + this.range.metaString();\n        return ret;\n    }\n    public static fromJson(json: any): Weapon {\n        return new Weapon(\n            json.name,\n            json.weaponType,\n            json.kind,\n            json.damageKind,\n            json.weight,\n            json.handedness,\n            json.hitDie,\n            Range.fromJson(json.range),\n            json.carryWeight,\n            Range.fromJson(json.thrown),\n            json.isRanged,\n            json.isFinesse,\n            json.notes,\n        );\n    }\n}\n\nexport type WeaponName = StdWeaponName | string;\nexport enum StdWeaponName {\n    Battleaxe = 'Battleaxe', \n    HandAxe = 'Hand Axe', \n    ThrowingHammer = 'Throwing Hammer',\n    WarHammer = 'War Hammer',\n    LongSword = 'Long Sword', \n    ShortSword = 'Short Sword', \n    ShortBow = 'Short Bow',\n    LongBow = 'Long Bow',\n    Rapier = 'Rapier',\n    HandCrossbow = 'Hand Crossbow',\n    Club = 'Club',\n    Dagger = 'Dagger',\n    Dart = 'Dart',\n    Javelin = 'Javelin',\n    Mace = 'Mace',\n    QuarterStaff = 'Quarter Staff',\n    Scimitar = 'Scimitar',\n    Sickle = 'Sickle',\n    Sling = 'Sling',\n    LightCrossbow = 'LightCrossbow',\n    Spear = 'Spear',\n}\n\nexport enum WeaponType {\n    Melee = 'Melee',\n    Range = 'Range',\n}\n\nexport enum WeaponKind {\n    Simple = 'Simple',\n    Martial = 'Martial',\n    Natural = 'Natural',\n}\n\nexport enum WeaponDamageKind {\n    Piercing = 'Piercing',\n    Slashing = 'Slashing',\n    Bludgeoning = 'Bludgeoning',\n    Acid = 'Acid',\n    Fire = 'Fire',\n    Lightening = 'Lightening',\n    Cold = 'Cold',\n    Poison = 'Poison',\n}\n\nexport enum WeaponWeight {\n    Light = 'Light',\n    Heavy = 'Heavy',\n}\n\nexport enum WeaponHandedness {\n    One = 'One',\n    Two = 'Two',\n    Versatile = 'Versatile',\n}\n\nexport class Wealth {\n    constructor(\n        public copper: number = 0,\n        public silver: number = 0,\n        public electrum: number = 0,\n        public gold: number = 0,\n        public platinum: number = 0\n    ) {\n        this.balance()\n    }\n    public balance() {\n        this.roundUp();\n        this.roundDown();        \n    }\n    public clone(): Wealth {\n        return Wealth.fromJson(this)\n    }\n    public add(other: Wealth): Wealth {\n        return new Wealth(\n            this.copper + other.copper,\n            this.silver + other.silver,\n            this.electrum + other.electrum,\n            this.gold + other.gold,\n            this.platinum + other.platinum,\n        );\n    }\n    public mul(mul: number): Wealth {\n        return new Wealth(\n            this.copper * mul,\n            this.silver * mul,\n            this.electrum * mul,\n            this.gold * mul,\n            this.platinum * mul\n        );\n    }\n\n    private roundUp() {\n        while (this.copper > 99) {\n            this.copper -= 100;\n            this.silver++;\n        }\n        while (this.silver > 99) {\n            this.silver -= 100;\n            this.electrum++;\n        }\n        while (this.electrum > 99) {\n            this.electrum -= 100;\n            this.gold++;\n        }\n        while (this.gold > 99) {\n            this.gold -= 100;\n            this.platinum += 1;\n        }\n    }\n\n    private roundDown() {\n        while (this.copper < -100) {\n            this.silver--;\n            this.copper += 100;\n        }\n        while (this.silver < -100) {\n            this.electrum--;\n            this.silver += 100;\n        }\n        while (this.electrum < -100) {\n            this.gold--;\n            this.electrum += 100;\n        }\n        while(this.gold < -100) {\n            this.platinum--;\n            this.gold += 100;\n        }\n    }\n    public static fromJson(json: any): Wealth {\n        return new Wealth(\n            json.copper || 0,\n            json.silver || 0,\n            json.electrum || 0,\n            json.gold || 0,\n            json.platinum || 0,\n        )\n    }\n}\n\nexport class MagicItem {\n    constructor (\n        public name: string,\n        public buf: string, \n    ) {\n\n    }\n    public static fromJson(json: any) {\n        return new MagicItem(\n            json.name,\n            json.buf,\n        );\n    }\n}\n\nexport class ExpendableItem {\n    constructor(\n        public quantity: number,\n        public name: string,\n        public desc: string,\n    ) { }\n\n    public static fromJson(json: any): ExpendableItem {\n        return new ExpendableItem(\n            json.quantity,\n            json.name,\n            json.desc\n        );\n    }\n}","import { AbilityKind } from './abilityScore';\nimport {\n    WeaponKind, StdWeaponName,\n    ArmorWeight\n} from './character';\nimport { SkillKind, Skill } from './skills';\nimport {\n    ClassDetails, BarbarianDetails,\n    BardDetails, BardCollege,\n    ClericDetails, RogueDetails, DruidDetails, FighterDetails, MonkDetails, PaladinDetails, RangerDetails, SorcererDetails, WarlockDetails, WizardDetails,\n} from './classDetails';\nimport { Data } from '../services/data';\n\nexport const DEFAULT_BONUS_ABILITY_SCORES: [AbilityKind, number][] =  [\n    [AbilityKind.Strength, 0],\n    [AbilityKind.Dexterity, 0],\n    [AbilityKind.Constitution, 0],\n    [AbilityKind.Intelligence, 0],\n    [AbilityKind.Wisdom, 0],\n    [AbilityKind.Charisma, 0],\n];\n\nexport class Class {\n    public desc: string;\n    public hitDie: number;\n    public primaryAbility: AbilityKind[];\n    public numberOfPrimaryAbilities = 1;\n    public savingThrows: AbilityKind[] = [];\n    public weaponProfs: Array<WeaponKind | StdWeaponName> = [];\n    public armorProfs: ArmorWeight[] = [];\n    public canUseShield: boolean = false;\n    public features = [];\n    public numberOfSkills = 0;\n    public availableSkills: SkillKind[] = [];\n    public classDetails: ClassDetails;\n    public miscProfs: string[] = [];\n    constructor(\n        public name: ClassKind,\n        public _level: number,\n        public bonusAbilityScores: [AbilityKind, number][] = DEFAULT_BONUS_ABILITY_SCORES,\n        public selectedSkills: SkillKind[] = [],\n    ) {\n        switch (name) {\n            case ClassKind.Barbarian:\n                this.barbarianCtor();\n            break;\n            case ClassKind.Bard:\n                this.bardCtor();\n            break;\n            case ClassKind.Cleric:\n                this.clericCtor();\n            break;\n            case ClassKind.Druid:\n                this.druidCtor();\n            case ClassKind.Fighter:\n                this.fighterCtor();\n            break;\n            case ClassKind.Monk:\n                this.monkCtor();\n            break;\n            case ClassKind.Paladin:\n                this.paladinCtor();\n            break;\n            case ClassKind.Ranger:\n                this.rangerCtor();\n            break;\n            case ClassKind.Rogue:\n                this.rogueCtor();\n            break;\n            case ClassKind.Sorcerer:\n                this.sorcererCtor();\n            break;\n            case ClassKind.Warlock:\n                this.warlockCtor();\n            break;\n            case ClassKind.Wizard:\n                this.wizardCtor();\n            break;\n        }\n    }\n\n    get level(): number {\n        return this._level;\n    }\n\n    set level(value: number) {\n        this._level = value;\n        if (this.classDetails.level) {\n            this.classDetails.level = value;\n        }\n    }\n\n    proficiencyBonus(): number {\n        return Data.proficiencyBonusFor(this.level);\n    }\n\n    barbarianCtor(details: BarbarianDetails = new BarbarianDetails(this._level, null, null)) {\n        this.desc = 'A fierce warrior of primitive background who can enter a battle rage';\n        this.classDetails = details;\n        this.hitDie = 12;\n        this.primaryAbility = [AbilityKind.Strength, AbilityKind.Constitution];\n        this.savingThrows = [\n            AbilityKind.Strength,\n            AbilityKind.Constitution\n        ];\n        \n        this.weaponProfs = [\n            WeaponKind.Martial,\n            WeaponKind.Simple\n        ];\n        this.armorProfs = [\n            ArmorWeight.Light,\n            ArmorWeight.Medium,\n            ArmorWeight.Heavy\n        ];\n        this.canUseShield = true;\n        this.numberOfSkills = 2;\n        this.availableSkills = [\n            SkillKind.AnimalHandling,\n            SkillKind.Athletics,\n            SkillKind.Intimidation,\n            SkillKind.Nature,\n            SkillKind.Perception,\n            SkillKind.Survival,\n        ];\n    }\n    bardCtor(details: BardDetails = new BardDetails(this._level, null, [])) {\n        this.desc = 'An inspiring magician whose power echoes the music of creation';\n        this.classDetails = details;\n        this.hitDie = 8;\n        this.primaryAbility = [AbilityKind.Charisma];\n        this.savingThrows = [\n            AbilityKind.Charisma,\n            AbilityKind.Dexterity,\n        ];\n        this.weaponProfs = [\n            WeaponKind.Simple,\n            StdWeaponName.HandCrossbow,\n            StdWeaponName.LongSword,\n            StdWeaponName.Rapier,\n            StdWeaponName.ShortSword,\n        ];\n        this.armorProfs = [\n            ArmorWeight.Light,\n        ];\n        this.numberOfSkills = 3;\n        this.availableSkills = Object.getOwnPropertyNames(SkillKind).map(n => SkillKind[n]);\n        if ((this.classDetails as BardDetails).bardCollege === BardCollege.Valor && this._level > 2) {\n            this.weaponProfs.push(WeaponKind.Martial);\n            this.armorProfs.push(ArmorWeight.Medium);\n            this.canUseShield = true;\n        }\n        this.miscProfs = ['Musical Instrument'];\n    }\n    clericCtor(details: ClericDetails = new ClericDetails(this._level, null)) {\n        this.desc = 'A priestly champion who wields divine magic in service of a higher power';\n        this.classDetails = details;\n        this.hitDie = 8;\n        this.primaryAbility = [AbilityKind.Wisdom];\n        this.savingThrows = [\n            AbilityKind.Wisdom,\n            AbilityKind.Charisma,\n        ];\n        this.weaponProfs = [\n            WeaponKind.Simple,\n        ];\n        this.armorProfs = [\n            ArmorWeight.Light,\n            ArmorWeight.Medium,\n        ];\n        this.numberOfSkills = 2;\n        this.availableSkills = [\n            SkillKind.History, \n            SkillKind.Insight, \n            SkillKind.Medicine,\n            SkillKind.Persuasion, \n            SkillKind.Religion,\n        ];\n        this.canUseShield = true;\n    }\n    druidCtor(details: DruidDetails = new DruidDetails(this._level, null)) {\n        this.desc = 'A priest of the Old Faith, wielding lhe powers of nature-moonlight and plant growth, fire and lightning-and adopting animal forms';\n        this.classDetails = details;\n        this.hitDie = 8;\n        this.primaryAbility = [AbilityKind.Wisdom];\n        this.savingThrows = [\n            AbilityKind.Wisdom,\n            AbilityKind.Intelligence  \n        ];\n        this.weaponProfs = [\n            StdWeaponName.Club,\n            StdWeaponName.Dagger,\n            StdWeaponName.Dart,\n            StdWeaponName.Javelin,\n            StdWeaponName.Mace,\n            StdWeaponName.QuarterStaff,\n            StdWeaponName.Scimitar,\n            StdWeaponName.Sickle,\n            StdWeaponName.Spear,\n        ];\n        this.armorProfs = [\n            ArmorWeight.Light,\n            ArmorWeight.Medium,\n        ];\n        this.numberOfSkills = 2;\n        this.availableSkills = [\n            SkillKind.Arcana, \n            SkillKind.AnimalHandling, \n            SkillKind.Insight, \n            SkillKind.Medicine, \n            SkillKind.Nature, \n            SkillKind.Perception, \n            SkillKind.Religion,\n            SkillKind.Survival,\n        ];\n        this.canUseShield = true;\n    }\n    fighterCtor(details: FighterDetails = new FighterDetails(this._level, null)) {\n        this.desc = 'A master of martial combat, skilled with a variety of weapons and armor';\n        this.classDetails = details;\n        this.hitDie = 10;\n        this.primaryAbility = [\n            AbilityKind.Strength, \n            AbilityKind.Dexterity,\n        ];\n        this.savingThrows = [\n            AbilityKind.Strength,\n            AbilityKind.Dexterity,\n        ];\n        this.armorProfs = [\n            ArmorWeight.Light,\n            ArmorWeight.Medium,\n            ArmorWeight.Heavy,\n        ];\n        this.weaponProfs = [\n            WeaponKind.Simple,\n            WeaponKind.Martial,\n        ];\n        this.numberOfSkills = 2;\n        this.availableSkills = [\n            SkillKind.Acrobatics, \n            SkillKind.AnimalHandling,\n            SkillKind.Athletics,\n            SkillKind.History,\n            SkillKind.Insight,\n            SkillKind.Intimidation,\n            SkillKind.Perception,\n            SkillKind.Survival,\n        ];\n        this.canUseShield = true;\n    }\n    monkCtor(details: MonkDetails = new MonkDetails(this._level)) {\n        this.desc = 'An master of martial arts, harnessing the power of lhe body in pursuit of physical and spiritual perfection';\n        this.classDetails = details;\n        this.hitDie = 8;\n        this.primaryAbility = [\n            AbilityKind.Dexterity,\n            AbilityKind.Wisdom,\n        ];\n        this.numberOfPrimaryAbilities = 2;\n        this.savingThrows = [\n            AbilityKind.Strength,\n            AbilityKind.Dexterity,\n        ];\n        this.armorProfs = [];\n        this.weaponProfs = [\n            WeaponKind.Simple,\n            StdWeaponName.ShortSword,\n        ];\n        this.numberOfSkills = 2;\n        this.availableSkills = [\n            SkillKind.Acrobatics, \n            SkillKind.Athletics, \n            SkillKind.History,\n            SkillKind.Insight, \n            SkillKind.Religion,\n            SkillKind.Stealth,\n        ];\n    }\n    paladinCtor(details: PaladinDetails = new PaladinDetails(this._level, null, null)) {\n        this.desc = 'A holy warrior bound to a sacred oath';\n        this.classDetails = details;\n        this.hitDie = 10;\n        this.primaryAbility = [\n            AbilityKind.Strength,\n            AbilityKind.Charisma,\n        ];\n        this.numberOfPrimaryAbilities = 2;\n        this.savingThrows = [\n            AbilityKind.Wisdom,\n            AbilityKind.Charisma,\n        ];\n        this.canUseShield = true;\n        this.armorProfs = [\n            ArmorWeight.Light,\n            ArmorWeight.Medium,\n            ArmorWeight.Heavy,\n        ];\n        this.weaponProfs = [\n            WeaponKind.Martial,\n            WeaponKind.Simple,\n        ];\n        this.numberOfSkills = 2;\n        this.availableSkills = [\n            SkillKind.Athletics, \n            SkillKind.Insight, \n            SkillKind.Intimidation,\n            SkillKind.Medicine, \n            SkillKind.Persuasion,\n            SkillKind.Religion,\n        ];\n    }\n    rangerCtor(details: RangerDetails = new RangerDetails(this._level, null)) {\n        this.desc = 'A warrior who uses martial prowess and nature magic lo combat threats on lhe edges of civilization';\n        this.classDetails = details;\n        this.hitDie = 10;\n        this.primaryAbility = [\n            AbilityKind.Dexterity,\n            AbilityKind.Wisdom,\n        ];\n        this.numberOfPrimaryAbilities = 2;\n        this.savingThrows = [\n            AbilityKind.Strength,\n            AbilityKind.Dexterity,\n        ];\n        this.armorProfs = [\n            ArmorWeight.Light,\n            ArmorWeight.Medium,\n        ];\n        this.canUseShield = true;\n        this.weaponProfs = [\n            WeaponKind.Simple,\n            WeaponKind.Martial,\n        ];\n        this.numberOfSkills = 3;\n        this.availableSkills = [\n            SkillKind.AnimalHandling,\n            SkillKind.Athletics, \n            SkillKind.Insight, \n            SkillKind.Investigation, \n            SkillKind.Nature, \n            SkillKind.Perception, \n            SkillKind.Stealth, \n            SkillKind.Survival,\n        ];\n    }\n    rogueCtor(details: RogueDetails = new RogueDetails(this.level, null, [])) {\n        this.desc = 'A scoundrel who uses stealth and trickery to overcome obstacles and enemies';\n        this.classDetails = details;\n        this.hitDie = 8;\n        this.primaryAbility = [AbilityKind.Dexterity];\n        this.savingThrows = [\n            AbilityKind.Strength,\n            AbilityKind.Dexterity,\n        ];\n        this.armorProfs = [\n            ArmorWeight.Light,\n            ArmorWeight.Medium,\n        ];\n        this.canUseShield = true;\n\n        this.weaponProfs = [\n            WeaponKind.Simple,\n            StdWeaponName.HandCrossbow,\n            StdWeaponName.LongSword,\n            StdWeaponName.Rapier,\n            StdWeaponName.ShortSword,\n        ];\n        this.numberOfSkills = 4;\n        this.availableSkills = [\n            SkillKind.Acrobatics, \n            SkillKind.Athletics,\n            SkillKind.Deception, \n            SkillKind.Insight, \n            SkillKind.Intimidation, \n            SkillKind.Investigation, \n            SkillKind.Perception, \n            SkillKind.Performance, \n            SkillKind.Persuasion,\n            SkillKind.SleightOfHand, \n            SkillKind.Stealth,\n        ];\n    }\n    sorcererCtor(details: SorcererDetails = new SorcererDetails(this._level, null, null)) {\n        this.desc = 'A spell caster who draws on inherent magic from a gift or bloodline';\n        this.classDetails = details;\n        this.hitDie = 6;\n        this.primaryAbility = [AbilityKind.Charisma];\n        this.savingThrows =[\n            AbilityKind.Constitution,\n            AbilityKind.Charisma,\n        ];\n        this.weaponProfs = [\n            StdWeaponName.Dagger,\n            StdWeaponName.Sling,\n            StdWeaponName.Dart,\n            StdWeaponName.QuarterStaff,\n            StdWeaponName.LightCrossbow,\n        ];\n        this.numberOfSkills = 2;\n        this.availableSkills = [\n            SkillKind.Arcana, \n            SkillKind.Deception, \n            SkillKind.Insight,\n            SkillKind.Intimidation, \n            SkillKind.Persuasion, \n            SkillKind.Religion,\n        ];\n    }\n    warlockCtor(details: WarlockDetails = new WarlockDetails(this._level, null)) {\n        this.desc = 'A wielder of magic that is derived from a bargain with an extra-planar entity';\n        this.classDetails = details;\n        this.hitDie = 8;\n        this.primaryAbility = [AbilityKind.Charisma];\n        this.savingThrows = [\n            AbilityKind.Wisdom,\n            AbilityKind.Charisma,\n        ];\n        this.armorProfs = [\n            ArmorWeight.Light,\n        ];\n        this.weaponProfs = [\n            WeaponKind.Simple,\n        ];\n        this.numberOfSkills = 2;\n        this.availableSkills = [\n            SkillKind.Arcana,\n            SkillKind.Deception, \n            SkillKind.History, \n            SkillKind.Intimidation, \n            SkillKind.Investigation, \n            SkillKind.Nature,\n            SkillKind.Religion,\n        ];\n    }\n    wizardCtor(details: WizardDetails = new WizardDetails(this._level, null)) {\n        this.desc = 'A scholarly magic-user capable of manipulating lhe structures of reality';\n        this.classDetails = details;\n        this.hitDie = 6;\n        this.primaryAbility = [AbilityKind.Intelligence];\n        this.savingThrows = [\n            AbilityKind.Intelligence,\n            AbilityKind.Wisdom,\n        ];\n        this.weaponProfs = [\n            StdWeaponName.Dagger,\n            StdWeaponName.Dart,\n            StdWeaponName.Sling,\n            StdWeaponName.QuarterStaff,\n            StdWeaponName.LightCrossbow,\n        ];\n        this.armorProfs = [];\n        this.numberOfSkills = 2;\n        this.availableSkills = [\n            SkillKind.Arcana, \n            SkillKind.History, \n            SkillKind.Insight,\n            SkillKind.Investigation, \n            SkillKind.Medicine, \n            SkillKind.Religion,\n        ];\n    }\n    addLevel() {\n        this.level += 1;\n    }\n    public static fromJson(json: any): Class {\n        let ret = new Class(\n            null,\n            json._level,\n            json.bonusAbilityScores,\n            json.availableSkills,\n        );\n        ret.name = json.name;\n        switch (json.name) {\n            case ClassKind.Barbarian:\n                ret.barbarianCtor(BarbarianDetails.fromJson(json.classDetails));\n            break;\n            case ClassKind.Bard:\n                ret.bardCtor(BardDetails.fromJson(json.classDetails));\n            break;\n            case ClassKind.Cleric:\n                ret.clericCtor(ClericDetails.fromJson(json.classDetails));\n            break;\n            case ClassKind.Druid:\n                ret.druidCtor(DruidDetails.fromJson(json.classDetails));\n            break;\n            case ClassKind.Fighter:\n                ret.fighterCtor(FighterDetails.fromJson(json.classDetails));\n            break;\n            case ClassKind.Monk:\n                ret.monkCtor(MonkDetails.fromJson(json.classDetails));\n            break;\n            case ClassKind.Paladin:\n                ret.paladinCtor(PaladinDetails.fromJson(json.classDetails));\n            break;\n            case ClassKind.Ranger:\n                ret.rangerCtor(RangerDetails.fromJson(json.classDetails));\n            break;\n            case ClassKind.Rogue:\n                ret.rogueCtor(RogueDetails.fromJson(json.classDetails));\n            break;\n            case ClassKind.Sorcerer:\n                ret.sorcererCtor(SorcererDetails.fromJson(json.classDetails));\n            break;\n            case ClassKind.Warlock:\n                ret.warlockCtor(WarlockDetails.fromJson(json.classDetails));\n            break;\n            case ClassKind.Wizard:\n                ret.wizardCtor(WizardDetails.fromJson(json.classDetails));\n            break;\n        }\n        return ret;\n    }\n}\n\n\n\nexport enum ClassKind {\n    Barbarian = 'Barbarian',\n    Bard = 'Bard',\n    Cleric = 'Cleric',\n    Druid = 'Druid',\n    Fighter = 'Fighter',\n    Monk = 'Monk',\n    Paladin = 'Paladin',\n    Ranger = 'Ranger',\n    Rogue = 'Rogue',\n    Sorcerer = 'Sorcerer',\n    Warlock = 'Warlock',\n    Wizard = 'Wizard',\n}","import { AbilityKind } from './abilityScore';\nexport class Skills {\n    constructor(\n        private skills: Skill[] = [\n            new Skill(SkillKind.Acrobatics, false, AbilityKind.Dexterity),\n            new Skill(SkillKind.AnimalHandling, false, AbilityKind.Wisdom),\n            new Skill(SkillKind.Athletics, false, AbilityKind.Strength),\n            new Skill(SkillKind.Arcana, false, AbilityKind.Intelligence),\n            new Skill(SkillKind.Deception, false, AbilityKind.Charisma),\n            new Skill(SkillKind.History, false, AbilityKind.Intelligence),\n            new Skill(SkillKind.Insight, false, AbilityKind.Wisdom),\n            new Skill(SkillKind.Intimidation, false, AbilityKind.Charisma),\n            new Skill(SkillKind.Investigation, false, AbilityKind.Intelligence),\n            new Skill(SkillKind.Medicine, false, AbilityKind.Wisdom),\n            new Skill(SkillKind.Nature, false, AbilityKind.Intelligence),\n            new Skill(SkillKind.Perception, false, AbilityKind.Wisdom),\n            new Skill(SkillKind.Performance, false, AbilityKind.Charisma),\n            new Skill(SkillKind.Persuasion, false, AbilityKind.Charisma),\n            new Skill(SkillKind.Religion, false, AbilityKind.Intelligence),\n            new Skill(SkillKind.SleightOfHand, false, AbilityKind.Dexterity),\n            new Skill(SkillKind.Stealth, false, AbilityKind.Dexterity),\n            new Skill(SkillKind.Survival, false, AbilityKind.Wisdom),\n        ]\n    ) { }\n\n    public isEnabled(skillKind: SkillKind): boolean {\n        if (!this.skills) return false;\n        let filter = this.skills.filter(s => s.kind == skillKind);\n        if (filter.length > 0) {\n            return filter[0].enabled\n        }\n        return false;\n    }\n\n    public map<U>(cb: (skill: Skill) => U): U[] {\n        return this.skills.map(cb)\n    }\n    public set(skillKind: SkillKind, enabled: boolean) {\n        let skillIdx = this.skills.findIndex(s => s.kind == skillKind);\n        if (skillIdx > -1) {\n            this.skills[skillIdx].enabled = enabled;\n        }\n    }\n    public static fromJson(json: any): Skills {\n        return new Skills(\n            json.skills.map(Skill.fromJson),\n        );\n    }\n}\n\nexport class Skill {\n    constructor(\n        public kind: SkillKind,\n        public enabled: boolean,\n        public modifier: AbilityKind,\n    ) { }\n\n    public static from(other: Skill): Skill {\n        return new Skill(other.kind, other.enabled, other.modifier);\n    }\n\n    public get desc(): string {\n        switch (this.kind) {\n            case SkillKind.Acrobatics:\n                return `Dealing with difficult physical situations like tumbling or balancing on a ledge, modified by ${this.modifier}`;\n            case SkillKind.AnimalHandling:\n                return `Your ability to communicate with animals like calming your mount or interpreting your dog's needs, modified by ${this.modifier}`;\n            case SkillKind.Arcana:\n                return `This represents your knowledge about all things magic, modified by ${this.modifier}`;\n            case SkillKind.Athletics:\n                return `Physical situations that might be an olympic individual competition like long/high jump or swimming, modified by ${this.modifier}`;\n            case SkillKind.Deception:\n                return `Your ability to hide information from someone else, modified by ${this.modifier}`;\n            case SkillKind.History:\n                return `Your ability to recall important things from the past, modified by ${this.modifier}`;\n            case SkillKind.Insight:\n                return `Your ability to see through deception, modified by ${this.modifier}`;\n            case SkillKind.Intimidation:\n                return `Your ability to scare someone into doing what you want, modified by ${this.modifier}`;\n            case SkillKind.Investigation:\n                return `Your ability to discern the information you need from the resources in front of you, modified by ${this.modifier}`;\n            case SkillKind.Medicine:\n                return `Your ability to stabilize someone who's below 0 HP, modified by ${this.modifier}`;\n            case SkillKind.Nature:\n                return `You knowledge of the natural world, modified by ${this.modifier}`;\n            case SkillKind.Perception:\n                return `Your ability to notice something in your current environment, modified by ${this.modifier}`;\n            case SkillKind.Performance:\n                return `Your ability to entertain a crowd, modified by ${this.modifier}`;\n            case SkillKind.Persuasion:\n                return `Your ability to influence someone else's decision, modified by ${this.modifier}`;\n            case SkillKind.Religion:\n                return `Your knowledge about the gods and their worshipers, modified by ${this.modifier}`;\n            case SkillKind.SleightOfHand:\n                return `When you want to do something with your hands discretely enough that someone else doesn't see/feel it like card tricks or pick pocketing, modified by ${this.modifier}`;\n            case SkillKind.Stealth:\n                return `When you want to remain hidden, modified by ${this.modifier}`;\n            case SkillKind.Survival:\n                return `Anything Bear Grills would need to do to survive, modified by ${this.modifier}`;\n            default:\n                return '';\n        }\n    }\n\n    public copy() {\n        return Skill.from(this);\n    }\n\n    public static fromJson(json: any): Skill {\n        return new Skill(\n            json.kind,\n            json.enabled,\n            json.modifier,\n        );\n    }\n}\n\nexport enum SkillKind {\n    Acrobatics = 'Acrobatics',\n    AnimalHandling = 'Animal Handling',\n    Arcana = 'Arcana',\n    Athletics = 'Athletics',\n    Deception = 'Deception',\n    History = 'History',\n    Insight = 'Insight',\n    Intimidation = 'Intimidation',\n    Investigation = 'Investigation',\n    Medicine = 'Medicine',\n    Nature = 'Nature',\n    Perception = 'Perception',\n    Performance = 'Performance',\n    Persuasion = 'Persuasion',\n    Religion = 'Religion',\n    SleightOfHand = 'Sleight Of Hand',\n    Stealth = 'Stealth',\n    Survival = 'Survival',\n}","import { Height, CharacterSize, \n        StdWeaponName, \n        Language, NormalLanguage, ArmorWeight, \n        WeaponDamageKind, Weapon, \n        WeaponWeight, WeaponHandedness,\n        WeaponKind, WeaponType,\n        Alignment,\n        AlignmentMajor, AlignmentMinor,\n} from './character'\nimport { Range } from './range';\nimport { AbilityKind } from './abilityScore';\nimport { Tool, ArtisanTools } from './tools';\nexport class Race {\n    public abilityModifiers: [AbilityKind, number][];\n    public subRace?: SubRace;\n    public ageRange: [number, number];\n    public darkVision?: Range;\n    public preferredAlignment: Alignment;\n    public heightRange: [Height, Height];\n    public size: CharacterSize = CharacterSize.Medium;\n    public avgWeight: number;\n    public speed: number = 30;\n    public weaponProfs: StdWeaponName[] = [];\n    public toolProfs: Tool[] = [];\n    public languages: Language[] = [];\n    public armorProfs: ArmorWeight[] = [];\n    public miscBenefits: string[] = [];\n    public bonusLanguages: number = 0;\n    public damageResistance?: WeaponDamageKind;\n    public naturalWeapons?: Weapon[] = [\n        new Weapon('Left Fist', WeaponType.Melee, WeaponKind.Martial, WeaponDamageKind.Bludgeoning, WeaponWeight.Light, WeaponHandedness.One, [1,4]), \n        new Weapon('Right Fist', WeaponType.Melee, WeaponKind.Martial, WeaponDamageKind.Bludgeoning, WeaponWeight.Light, WeaponHandedness.One, [1,4]), \n    ];\n    constructor(\n        public name: RaceKind = RaceKind.Human,\n        subRace: SubRace = null,\n    ) {\n        if (name == RaceKind.Dragonborn && subRace == null) {\n            subRace = Dragon.Black;\n        }\n        this.checkSubRace(subRace);\n        this.subRace = subRace;\n        switch (name) {\n                case RaceKind.Dwarf: \n                    this.dwarfCtor();\n                break;\n                case RaceKind.Elf: \n                    this.elfCtor();\n                break;\n                case RaceKind.Halfling: \n                    this.halflingCtor();\n                break;\n                case RaceKind.Human: \n                    this.humanCtor();\n                break;\n                case RaceKind.Dragonborn: \n                    this.dragonbornCtor();\n                break;\n                case RaceKind.Gnome: \n                    this.gnomeCtor();\n                break;\n                case RaceKind.HalfElf: \n                    this.halfElfCtor();\n                break;\n                case RaceKind.HalfOrc: \n                    this.halfOrcCtor();\n                break;\n                case RaceKind.Tiefling: \n                    this.tieflingCtor();\n                break;\n        }\n    }\n\n    dwarfCtor() {\n        this.abilityModifiers = [\n            [AbilityKind.Constitution, 2]\n        ];\n        if (this.subRace == Dwarf.Hill) {\n            this.abilityModifiers.push([AbilityKind.Wisdom, 1]);\n        }\n        if (this.subRace == Dwarf.Mountain) {\n            this.abilityModifiers.push([AbilityKind.Strength, 2]);\n        }\n        this.ageRange = [50, 350];\n        this.preferredAlignment = new Alignment(AlignmentMajor.Lawful, AlignmentMinor.Good);\n        this.heightRange = [new Height(4,0), new Height(5, 0)];\n        this.size = CharacterSize.Medium;\n        this.avgWeight = 150;\n        this.speed = 25;\n        this.darkVision = new Range(60);\n        this.weaponProfs = [\n            StdWeaponName.Battleaxe,\n            StdWeaponName.HandAxe,\n            StdWeaponName.ThrowingHammer,\n            StdWeaponName.WarHammer,\n        ];\n        this.languages = [\n            NormalLanguage.Common, \n            NormalLanguage.Dwarvish\n        ];\n        this.miscBenefits = [\n            'Your speed is not reduced by wearing heavy armor',\n            'Stonecunning: +1 on Int (History) checks about Stonework',\n        ];\n        if (this.subRace == Dwarf.Hill) {\n            this.miscBenefits.push('+1 max HP at each level');\n        }\n        if (this.subRace == Dwarf.Mountain) {\n            this.armorProfs = [ArmorWeight.Light, ArmorWeight.Medium];\n        }\n    }\n\n    elfCtor() {\n        this.abilityModifiers = [[AbilityKind.Dexterity, 2]];\n        if (this.subRace == Elf.High) {\n            this.abilityModifiers.push([AbilityKind.Intelligence, 1]);\n        }\n        if (this.subRace == Elf.Wood) {\n            this.abilityModifiers.push([AbilityKind.Wisdom, 1]);\n        }\n        if (this.subRace == Elf.Drow) {\n            this.abilityModifiers.push([AbilityKind.Charisma, 1]);\n        }\n        this.ageRange = [100, 750];\n        this.preferredAlignment = new Alignment(AlignmentMajor.Chaotic, this.subRace == Elf.Drow ? AlignmentMinor.Evil : AlignmentMinor.Good);\n        this.heightRange = [new Height(5, 0), new Height(6, 0)];\n        this.avgWeight = 130;\n        this.size = CharacterSize.Medium;\n        this.speed = 30;\n        this.darkVision = new Range(60);\n        this.languages = [\n            NormalLanguage.Common,\n            NormalLanguage.Elvish,\n        ];\n        this.miscBenefits = [\n            'Keen Senses: Proficiency in perception',\n            'Fey Ancestry: Advantage against being charmed and magic cannot be put to sleep',\n            'Trance: Instead of sleeping you meditate for 4 hours',\n        ];\n        if (this.subRace == Elf.High) {\n            this.weaponProfs = [\n                StdWeaponName.LongBow,\n                StdWeaponName.LongSword,\n                StdWeaponName.ShortBow,\n                StdWeaponName.ShortSword,\n            ];\n            this.miscBenefits.push('Cantrip: You know one Cantrip of your choice from lhe wizard spell list');\n            this.bonusLanguages = 1;\n        }\n        if (this.subRace == Elf.Wood) {\n            this.weaponProfs = [\n                StdWeaponName.LongBow,\n                StdWeaponName.LongSword,\n                StdWeaponName.ShortBow,\n                StdWeaponName.ShortSword,\n            ];\n            this.speed = 35;\n            this.miscBenefits.push('Mask of the Wild: You can attempt to hide even when you are only lightly obscured by foliage, heavy rain, falling snow, mist, and other natural phenomena.');\n        }\n        if (this.subRace == Elf.Drow) {\n            this.darkVision = new Range(120);\n            this.miscBenefits.push('Sun Light Sensitivity: You have disadvantage on attack rolls and on Wisdom (Perception) checks that rely on sight when you, the target of your attack, or whatever you are trying to perceive is in direct sunlight');\n            this.miscBenefits.push('Drow Magic: You know the dancing lights Cantrip. At level 3 you can cas Faerie Fire once per day, at level 5 you can cast Darkness once per day Charisma is your spell casting ability');\n            this.weaponProfs = [\n                StdWeaponName.ShortSword,\n                StdWeaponName.Rapier,\n                StdWeaponName.HandCrossbow,\n            ];\n        }\n    }\n\n    halflingCtor() {\n        this.abilityModifiers = [[AbilityKind.Dexterity, 2]];\n        this.heightRange = [new Height(2, 6), new Height(3, 6)];\n        this.avgWeight = 40;\n        this.preferredAlignment = Alignment.LawfulGood();\n        this.speed = 25;\n        this.size = CharacterSize.Small;\n        this.languages = [\n            NormalLanguage.Common,\n            NormalLanguage.Halfling,\n        ];\n        this.ageRange = [20, 175];\n        this.miscBenefits = [\n            'Lucky: When you roll a 1 on an attack roll, ability check, or saving throw, you can reroll the die and must use the new roll',\n            'Brave: Vou have advantage on saving throws against being frightened',\n            'Halfling Nimbleness: You can move through the space of any creature that is of a size larger than yours',\n        ];\n        if (this.subRace == Halfling.Lightfoot) {\n            this.abilityModifiers.push([AbilityKind.Charisma, 1]);\n            this.miscBenefits.push('Naturally Stealthy: You can attempt to hide even when you are obscured only by a creature that is at least one size larger than you');\n        }\n        if (this.subRace == Halfling.Stout) {\n            this.abilityModifiers.push([AbilityKind.Constitution, 1]);\n            this.miscBenefits.push('Stout Resilience: You have advantage on saving throws against poison, and you have resistance against poison damage');\n        }\n    }\n\n    humanCtor() {\n        this.abilityModifiers = [\n            [AbilityKind.Strength, 1], \n            [AbilityKind.Dexterity, 1],\n            [AbilityKind.Constitution, 1],\n            [AbilityKind.Intelligence, 1],\n            [AbilityKind.Wisdom, 1],\n            [AbilityKind.Charisma, 1],\n        ];\n        this.ageRange = [16, 90];\n        this.preferredAlignment = Alignment.TrueNeutral();\n        this.heightRange = [new Height(5, 0), new Height(7, 0)];\n        this.avgWeight = 150;\n        this.speed = 30;\n        this.languages = [NormalLanguage.Common];\n        this.bonusLanguages = 1;\n    }\n\n    dragonbornCtor() {\n        this.abilityModifiers = [[AbilityKind.Strength, 2]];\n        this.ageRange = [15, 80];\n        this.preferredAlignment = Alignment.NeutralGood();\n        this.heightRange = [new Height(6, 0), new Height(9, 0)];\n        this.avgWeight = 250;\n        this.size = CharacterSize.Medium;\n        this.speed = 30;\n        let breathDmgKind, breathRange, notes;\n        switch (this.subRace) {\n            case Dragon.Black:\n            case Dragon.Copper:\n                breathRange = new Range(30);\n                this.damageResistance = breathDmgKind = WeaponDamageKind.Acid\n                notes = 'Dex save';\n            break;\n            case Dragon.Blue:\n            case Dragon.Bronze:\n                breathRange = new Range(30);\n                this.damageResistance = breathDmgKind = WeaponDamageKind.Lightening;\n                notes = 'Dex save';\n            break;\n            case Dragon.Brass:\n            case Dragon.Gold:\n            case Dragon.Red:\n                breathRange = this.subRace == Dragon.Brass ? new Range(30) : new Range(15);\n                this.damageResistance = breathDmgKind = WeaponDamageKind.Fire;\n                notes = 'Dex save';\n            break;\n            case Dragon.Green:\n                breathRange = new Range(15);\n                this.damageResistance = breathDmgKind = WeaponDamageKind.Poison;\n                notes = 'Con save';\n            break;\n            case Dragon.Silver:\n            case Dragon.White:\n                breathRange = new Range(15);\n                this.damageResistance = breathDmgKind = WeaponDamageKind.Cold;\n                notes = 'Con save';\n            break;\n        }\n        this.naturalWeapons.push(\n            new Weapon('Breath Weapon', \n                WeaponType.Melee, \n                WeaponKind.Natural, \n                breathDmgKind,\n                null,\n                null,\n                [2,6],\n                breathRange,\n                0,\n                null,\n                false,\n                notes\n                )\n        );\n        this.languages = [\n            NormalLanguage.Common,\n            NormalLanguage.Draconic,\n        ];\n    }\n\n    gnomeCtor() {\n        this.abilityModifiers = [[AbilityKind.Intelligence, 2]];\n        if (this.subRace == 'Forest') {\n            this.abilityModifiers.push([AbilityKind.Dexterity, 1]);\n        }\n        if (this.subRace == 'Rock') {\n            this.abilityModifiers.push([AbilityKind.Constitution, 1]);\n        }\n        this.ageRange = [17, 500];\n        this.preferredAlignment = Alignment.NeutralGood();\n        this.heightRange = [new Height(3,0), new Height(4, 0)];\n        this.avgWeight = 40;\n        this.size = CharacterSize.Small;\n        this.speed = 25;\n        this.darkVision = new Range(60);\n        this.languages = [\n            NormalLanguage.Common,\n            NormalLanguage.Gnomish,\n        ]\n        this.miscBenefits = [\n            'Gnome Cunning: You have advantage on all Int, Wis, & Cha saving throws against magic',\n        ];\n        if (this.subRace == Gnome.Forest) {\n            this.miscBenefits.push('Natural Illusionist: You know the minor illusion Cantrip. Intelligence is your spell casting ability',\n                'Speak with Small Beasts: You can communicate with small or smaller beasts');\n            \n        }\n        if (this.subRace == Gnome.Rock) {\n            this.toolProfs = [ArtisanTools.Tinker];\n            this.miscBenefits.push(\n                'Artificer\\'s Lore: Whenever you make an Intelligence (History) check related to magic items, alchemical objects, ar technological devices, you can add twice your proficiency bonus, instead of any proficiency bonus you normally appIy',\n                `Tinker: You can create 1 clockwork device (AC5, 1hp) it takes 1 hour and 10 gp. \nClockwork Toy: animal, monster or person (i.e. mouse, dragon, soldier). It moves 5 feet each turn and makes noises appropriate to the creature it represents\nFire Starter: A lighter\nMusic Box: When opened it plays a single song an moderate volume, stops when song ends/is closed\n`);\n        }\n    }\n\n    halfElfCtor() {\n        this.abilityModifiers = [[AbilityKind.Charisma, 2]];\n        this.ageRange = [20, 180];\n        this.preferredAlignment = Alignment.ChaoticGood();\n        this.heightRange = [new Height(5, 0), new Height(6, 0)];\n        this.avgWeight = 160;\n        this.size = CharacterSize.Medium;\n        this.speed = 25;\n        this.darkVision = new Range(60);\n        this.bonusLanguages = 1;\n        this.languages = [\n            NormalLanguage.Common,\n            NormalLanguage.Elvish,\n        ];\n        this.miscBenefits = [\n            'Skill Versatility: You gain proficiency in two skills of your choice',\n            'Fey Ancestry: Advantage against being charmed and magic cannot be put to sleep',\n        ];\n    }\n\n    halfOrcCtor() {\n        this.abilityModifiers = [\n            [AbilityKind.Strength, 2],\n            [AbilityKind.Constitution, 1],\n        ];\n        this.ageRange = [14, 75];\n        this.preferredAlignment = Alignment.ChaoticGood();\n        this.heightRange = [new Height(5,0), new Height(8,0)];\n        this.avgWeight = 200;\n        this.size = CharacterSize.Medium;\n        this.speed = 30;\n        this.darkVision = new Range(60);\n        this.languages = [\n            NormalLanguage.Common,\n            NormalLanguage.Orc,\n        ]\n        this.miscBenefits = [\n            'Menacing: You gain proficiency in the Intimidation skill',\n            'Savage Attacks: When you score a critical hit with a melee weapon attack you add 1 hit die to the damage role as bonus damage',\n        ];\n    }\n\n    tieflingCtor() {\n        this.abilityModifiers = [\n            [AbilityKind.Intelligence, 1],\n            [AbilityKind.Charisma, 2],\n        ];\n        this.ageRange = [16, 120];\n        this.preferredAlignment = Alignment.ChaoticEvil();\n        this.heightRange = [new Height(5, 0), new Height(7, 0)];\n        this.avgWeight = 160;\n        this.speed = 30;\n        this.darkVision = new Range(60);\n        this.damageResistance = WeaponDamageKind.Fire;\n\n        this.languages = [\n            NormalLanguage.Common,\n            NormalLanguage.Infernal,\n        ];\n        this.miscBenefits = [\n            `Infernal Legacy: You know the thaumaturgy cantrip. Once you reach 3rd level, you can cast the hellish rebuke spell once per day as a 2nd-level spell. Once you reach 5th level, you can also cast the darkness spell once per day. Charisma is your spell casting ability for these spells.`\n        ]\n    }\n\n    checkSubRace(subRace: SubRace) {\n        if (\n            ((subRace == Gnome.Rock || subRace == Gnome.Forest) && this.name != RaceKind.Gnome) \n            || ((subRace == Elf.Drow || subRace == Elf.High || subRace == Elf.Wood) && this.name != RaceKind.Elf) \n            || ((subRace == Dwarf.Hill || subRace == Dwarf.Mountain) && this.name != RaceKind.Dwarf) \n            || ((subRace == Halfling.Lightfoot || subRace == Halfling.Stout) && this.name != RaceKind.Halfling)\n            || ((subRace ==   Dragon.Black \n                ||subRace ==  Dragon.Blue \n                || subRace == Dragon.Brass \n                || subRace == Dragon.Bronze\n                || subRace == Dragon.Copper\n                || subRace == Dragon.Gold\n                || subRace == Dragon.Green\n                || subRace == Dragon.Red\n                || subRace == Dragon.Silver\n                || subRace == Dragon.White) &&this.name != RaceKind.Dragonborn)\n        ) {\n            throw new Error(`Subrace ${subRace} isn't compatible with ${this.name}`);\n        }\n        if (!subRace && this.name == RaceKind.Dragonborn) {\n            throw new Error('Dragonborn must pick an ancestry');\n        }\n    }\n    public static fromJson(json: any): Race {\n        return new Race(\n            json.name,\n            json.subRace,\n        )\n    }\n}\n\nexport enum RaceKind {\n    Dwarf = 'Dwarf',\n    Elf = 'Elf',\n    Halfling = 'Halfling',\n    Human = 'Human',\n    Dragonborn = 'Dragonborn',\n    Gnome = 'Gnome',\n    HalfElf = 'Half-Elf',\n    HalfOrc = 'Half-Orc',\n    Tiefling = 'Tiefling',\n}\n\nexport type SubRace = Halfling | Dwarf | Elf | Gnome | Dragon;\n\nexport enum Dwarf {\n    Hill = 'Hill',\n    Mountain = 'Mountain',\n}\n\nexport enum Elf {\n    Drow = 'Drow',\n    Wood = 'Wood',\n    High = 'High',\n}\n\nexport enum Halfling {\n    Stout = 'Stout',\n    Lightfoot = 'Lightfoot',\n}\n\nexport enum Gnome {\n    Forest = 'Forest',\n    Rock = 'Rock',\n}\n\nexport enum Dragon {\n    Black = 'Black',\n    Blue = 'Blue',\n    Brass = 'Brass',\n    Bronze = 'Bronze',\n    Copper = 'Copper',\n    Gold = 'Gold',\n    Green = 'Green',\n    Red = 'Red',\n    Silver = 'Silver',\n    White = 'White',\n}","import { Language } from \"./character\";\nimport { SkillKind } from './skills';\nimport { Tool, MiscTools, GamingSet, Instrument, ArtisanTools, Mount, Vehicle, Boat } from './tools';\nconst GAMING_SETS = Object.getOwnPropertyNames(GamingSet).map(n => GamingSet[n]);\nconst INSTRUMENTS = Object.getOwnPropertyNames(Instrument).map(n => Instrument[n]);\nconst ARTISAN_TOOLS = Object.getOwnPropertyNames(ArtisanTools).map(n => ArtisanTools[n]);\nconst VEHICLES = Object.getOwnPropertyNames(Mount).map(n => Mount[n])\n                    .concat(Object.getOwnPropertyNames(Vehicle).map(n => Vehicle[n]))\n                    .concat(Object.getOwnPropertyNames(Boat).map(n => Boat[n]));\n\nexport class Background {\n    constructor(\n        public kind: BackgroundKind,\n        public skills: SkillKind[] = [],\n        public languages: Language[] = [],\n        public toolProficiencies: Tool[] = [],\n        public toolOptions: Tool[][] = [],\n    ) { }\n\n    public static Acolyte(): Background {\n        return new Background(\n            BackgroundKind.Acolyte,\n            [SkillKind.Insight, SkillKind.Religion],\n            [null, null],\n            [],\n            [],\n        );\n    }\n\n    public static Charlatan(): Background {\n        return new Background(\n            BackgroundKind.Charlatan,\n            [SkillKind.Deception, SkillKind.SleightOfHand],\n            [],\n            [MiscTools.Disguise, MiscTools.Forgery],\n        );\n    }\n\n    public static Criminal(): Background {\n        return new Background(\n            BackgroundKind.Criminal,\n            [SkillKind.Deception, SkillKind.Stealth],\n            [],\n            [MiscTools.Thieves, null],\n            [null, GAMING_SETS],\n        );\n    }\n\n    public static Entertainer(): Background {\n        return new Background(\n            BackgroundKind.Entertainer,\n            [SkillKind.Acrobatics, SkillKind.Performance],\n            [],\n            [MiscTools.Disguise, null],\n            [null, INSTRUMENTS]\n        );\n    }\n\n    public static FolkHero(): Background {\n        return new Background(\n            BackgroundKind.FolkHero,\n            [SkillKind.AnimalHandling, SkillKind.Survival],\n            [],\n            [null, null],\n            [ARTISAN_TOOLS, \n            VEHICLES]\n        );\n    }\n\n    public static GuildArtisan(): Background {\n        return new Background(\n            BackgroundKind.GuildArtisan,\n            [SkillKind.Insight, SkillKind.Persuasion],\n            [null],\n            [null],\n            [ARTISAN_TOOLS],\n        );\n    }\n\n    public static Hermit(): Background {\n        return new Background(\n            BackgroundKind.Hermit,\n            [SkillKind.Medicine, SkillKind.Religion],\n            [null],\n            [MiscTools.Herbalism],\n            [],\n        );\n    }\n\n    public static Noble(): Background {\n        return new Background(\n            BackgroundKind.Noble,\n            [SkillKind.History, SkillKind.Persuasion],\n            [null],\n            [null],\n            [GAMING_SETS]\n        );\n    }\n\n    public static Outlander(): Background {\n        return new Background(\n            BackgroundKind.Outlander,\n            [SkillKind.Athletics, SkillKind.Survival],\n            [null],\n            [null],\n            [INSTRUMENTS]\n        );\n    }\n\n    public static Sage(): Background {\n        return new Background(\n            BackgroundKind.Sage,\n            [SkillKind.Arcana, SkillKind.History],\n            [null, null],\n            [],\n            [],\n        );\n    }\n\n    public static Sailor(): Background {\n        return new Background(\n            BackgroundKind.Sailor,\n            [SkillKind.Athletics, SkillKind.Perception],\n            [],\n            [MiscTools.Navigator, null],\n            [null, Object.getOwnPropertyNames(Boat).map(n => Boat[n])],\n        );\n    }\n    public static Soldier(): Background {\n        return new Background(\n            BackgroundKind.Soldier,\n            [SkillKind.Athletics, SkillKind.Intimidation],\n            [],\n            [null, null],\n            [GAMING_SETS, Object.getOwnPropertyNames(Vehicle).map(n => Vehicle[n])],\n        );\n    }\n\n    public static Urchin(): Background {\n        return new Background(\n            BackgroundKind.Urchin,\n            [SkillKind.SleightOfHand, SkillKind.Stealth],\n            [],\n            [MiscTools.Disguise, MiscTools.Thieves],\n            []\n        );\n    }\n\n    public static fromJson(json: any): Background {\n        return new Background(\n            json.kind,\n            json.skills,\n            json.languages,\n            json.toolProficiencies,\n            json.toolOptions,\n        );\n    }\n}\n\nexport enum BackgroundKind {\n    Acolyte = 'Acolyte',\n    Charlatan = 'Charlatan',\n    Criminal = 'Criminal',\n    Entertainer = 'Entertainer',\n    FolkHero = 'Folk Hero',\n    GuildArtisan = 'Guild Artisan',\n    Hermit = 'Hermit',\n    Noble = 'Noble',\n    Outlander = 'Outlander',\n    Sage = 'Sage',\n    Sailor = 'Sailor',\n    Soldier = 'Soldier',\n    Urchin = 'Urchin',\n}\n\nexport const ACOLYTE_TRAITS = [\n    'I idolize a particular hero of my faith, and constantly refer to that person\\'s deeds and example,',\n    'I can find common ground between lhe fiercest enemies, empathizing with them and always working toward peace.',\n    'I see omens in every event and action. The gods try to speak to us we just need lo listen',\n    'Nothing can shake my optimistic attitude.',\n    'I quote (or misquote) sacred texts and proverbs in almost every situation.',\n    'I am tolerant (or intolerant) of other faiths and respect (or condemn) the worship of other gods.',\n    'I\\'ve enjoyed fine food, drink, and high society among my temple\\'s elite. Rough living grates on me.',\n    'I\\'ve spent so long in the tem pie that I have little practical experience dealing with people in the outside world.'\n];\n\nexport const ACOLYTE_IDEALS = [\n    'Tradition. lhe ancient traditions of worship and sacrifice must be preserved and upheld. (Lawful)',\n    'Charily. I always try to help those in need, no matter what the personal cost. (Good)',\n    'Change. We must help bring about the changes lhe gods are constantly working in the world. (Chaotic)',\n    'Power. I hope to one day rise to the top of my faith\\'s religious hierarchy. (Lawful)',\n    'Faith. I trust that my deity will guide my actions. I have faith that if I work hard, things will go well. (Lawful)',\n    'Aspiration. I seek lo prove myself worthy of my god\\'s favor by matching my actions against his or her teachings. (Any)',\n];\n\nexport const ACOLYTE_BONDS = [\n    'I would die to recover an ancient relic of my faith that was lost long ago.',\n    'I will someday get revenge on the corrupt temple hierarchy who branded me a heretic.',\n    'I owe my life to the priest who took me in when my parents died.',\n    'Everything I do is for the common people.',\n    'I will do anything lo protect the tem pie where I served.',\n    'I seek to preserve a sacred text that my enemies consider heretical and seek to destroy.',\n];\n\nexport const ACOLYTE_FLAWS = [\n    'I judge others harshly, and myself even more severely.',\n    'I put roo much trust in those who wield power within my temple\\'s hierarchy.',\n    'My piety sometimes leads me lo blindly trust those that profess faith in my god.',\n    'I am inflexible in my thinking.',\n    'I am suspicious af strangers and expect the worst of them.',\n    'Once I pick a goal, I become obsessed with it to the detriment of everything else in my life.'\n];\n\nexport const CHARLATAN_TRAITS = [\n\n];\n\nexport const CHARLATAN_IDEALS = [\n\n];\n\nexport const CHARLATAN_BONDS = [\n\n]\n\nexport const CHARLATAN_FLAWS = [\n\n];\n\nexport const ALL_BACKGROUNDS: Background[] = [\n    Background.Acolyte(),\n    Background.Charlatan(),\n    Background.Criminal(),\n    Background.Entertainer(),\n    Background.FolkHero(),\n    Background.GuildArtisan(),\n    Background.Hermit(),\n    Background.Noble(),\n    Background.Outlander(),\n    Background.Sage(),\n    Background.Sailor(),\n    Background.Soldier(),\n    Background.Urchin(),\n];","import * as React from 'react';\nimport {Text, ListView, ListViewHeader, ListViewRow, ListViewSection, ListViewSectionHeader, Box, TitleBar, Button} from 'react-desktop';\nimport { Spell } from '../models/spells';\n\ninterface ISpellsListProps {\n    title: string;\n    spells: Spell[];\n}\n\ninterface ISpellsListState {\n    spells: Spell[][];\n    selectedSpell: number;\n    selectedSpellLevel: number;\n}\n\nexport class SpellsList extends React.Component<ISpellsListProps, ISpellsListState> {\n    private spellLists: Spell[][];\n    constructor(props: ISpellsListProps) {\n        super(props);\n        this.spellLists = this.props.spells.reduce((acc, spell) => {\n            acc[spell.level].push(spell);\n            return acc;\n        }, [[],[],[],[],[],[],[],[],[],[]]);\n        this.state = {\n            selectedSpell: -1,\n            selectedSpellLevel: -1,\n            spells: [],\n        };\n    }\n    componentWillReceiveProps(props: ISpellsListProps) {\n        if (this.state.spells.length === 0 && props.spells.length > 0) {\n            let spells = props.spells.reduce((acc, spell) => {\n                acc[spell.level].push(spell);\n                return acc;\n            }, [[],[],[],[],[],[],[],[],[],[]]);\n            this.setState({spells});\n        }\n    }\n    render() {\n        return (\n            <Box\n                style={{\n                    gridArea: 'spells',\n                    marginLeft: 5,\n                    marginTop: 5,\n                    borderRadius: 5,\n                }}\n                padding=\"0px\"\n            >\n                {this.renderInner()}\n            </Box>\n        );\n    }\n\n    renderInner() {\n        if (this.state.selectedSpell === -1) {\n            return (\n                <ListView>\n                    <ListViewHeader>{this.props.title}</ListViewHeader>\n                    {this.state.spells.map((list: Spell[], level: number) => {\n                        return (\n                            <ListViewSection key={`spell-level-list-${level}`}>\n                                <ListViewSectionHeader>\n                                    <Text>{`${level === 0 ? 'Cantrip' : `Level ${level}`} Spells`}</Text>\n                                </ListViewSectionHeader>\n                                {list.map((s: Spell, i: number) => {\n                                    return (\n                                        <ListViewRow\n                                            padding=\"0 0 0 5px\"\n                                            style={{\n                                                borderBottom: '1px solid rgba(0,0,0,0.2)',\n                                            }}\n                                            key={`spell-list-entry-${i}`}\n                                            onClick={() => this.setState({selectedSpell: i, selectedSpellLevel: level})}\n                                        >\n                                            <Text>{`${s.name}`}</Text>\n                                        </ListViewRow>\n                                    );\n                                })}\n                            </ListViewSection>\n                        );\n                    })}\n                </ListView>\n            );\n        } else {\n            let selectedSpell = this.state.spells[this.state.selectedSpellLevel][this.state.selectedSpell];\n            let components = '';\n            if (selectedSpell.verbalRequirement) {\n                components += 'V';\n            }\n            if (selectedSpell.somaticRequirement) {\n                if (components.length != 0) {\n                    components += '/S';\n                } else {\n                    components += 'S';\n                }\n            }\n            if (selectedSpell.materialRequirement.length > 0) {\n                if (components.length != 0) {\n                    components += `/M (${selectedSpell.materialRequirement.join(', ')})`;\n                } else {\n                    components == `M (${selectedSpell.materialRequirement.join(', ')})`;\n                }\n            }\n            return [\n                <TitleBar\n                    key=\"spell-desc-title-bar\"\n                >\n                <Button \n                    onClick={() => this.setState({selectedSpell: -1, selectedSpellLevel: -1})}\n                    style={{\n                        marginRight: 5,\n                        textAlign: 'center',\n                        height: 20,\n                        width: 20,\n                    }}\n                    padding=\"0 0 0 3px\"\n                >\n                    <i style={{\n                        fontFamily: 'Material Icons',\n                        fontSize: 10,\n                        lineHeight: 1,\n                    }}\n                    >arrow_back_ios</i></Button>\n                    <Text>{selectedSpell.name}</Text>\n                </TitleBar>,\n                <SpellDescPart\n                    key=\"spell-desc-components\"\n                    title=\"Components\"\n                    value={components}\n                    multiLineValue={false}\n                />,\n                <SpellDescPart\n                    key=\"spell-desc-time\"\n                    title=\"Casting Time\"\n                    value={selectedSpell.castingTime}\n                    multiLineValue={false}\n                />,\n                <SpellDescPart\n                    key=\"spell-desc-duration\"\n                    title=\"Effect Duration\"\n                    value={selectedSpell.duration}\n                    multiLineValue={false}\n                />,\n                <SpellDescPart\n                    key=\"spell-desc-desc\"\n                    title=\"Desc\"\n                    value={selectedSpell.desc}\n                    multiLineValue={true}\n                />\n            ];\n        }\n    }\n}\n\ninterface ISpellDescPartProps {\n    title: string;\n    value: string;\n    multiLineValue: boolean;\n}\n\ninterface ISpellDescPartState {\n\n}\n\nexport class SpellDescPart extends React.Component<ISpellDescPartProps, ISpellDescPartState> {\n    constructor(props: ISpellDescPartProps) {\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                {this.props.multiLineValue ? \n                    this.props.value.split('\\n').map((line, i) => {\n                        let key = `desc-line${i}`;\n                    if (i === 0) {\n                        return <Text\n                            key={key}\n                        >{`${this.props.title}: ${line}`}</Text>\n                    } else {\n                        return <Text \n                            key={key}\n                            style={{marginLeft: 5}}>{line}</Text>\n                    }\n                })\n                : <Text>{`${this.props.title}: ${this.props.value}`}</Text>}\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Character } from '../models/character';\nimport { Class, ClassKind } from '../models/class';\nimport { Box, Text, ListView, ListViewHeader, ListViewRow } from 'react-desktop/macOs';\nimport {Barbarian, Bard, Cleric, Druid, Fighter, Monk, Paladin, Ranger, Rogue, Sorcerer, Warlock, Wizard, NewCharacter } from './icons';\n\ninterface ICharacterPickerProps {\n    characters: Character[];\n    characterSelected: (idx: number) => void;\n    newCharacterClicked: () => void;\n}\n\ninterface ICharacterPickerState {\n\n}\n\nexport class CharacterPicker extends React.Component<ICharacterPickerProps, ICharacterPickerState> {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <ListView\n                className=\"character-picker\"\n            >\n            <ListViewHeader>\n                <Text>\n                    Choose Your Character\n                </Text>\n            </ListViewHeader>\n                {this.props.characters.map((c, i) => {\n                    return (\n                        <CharacterPickerEntry \n                            onClick={() => this.props.characterSelected(i)}\n                            key={`picker-entry-${i}`} \n                            name={c.name}\n                            characterClass={c.characterClass}\n                        />\n                    )\n                })}\n                <CharacterPickerEntry\n                    onClick={() => this.props.newCharacterClicked()}\n                    name=\"Create a New Character\"\n                    characterClass={null}\n\n                />\n            </ListView>\n        );\n    }\n}\n\ninterface ICharacterPickerEntryProps {\n    name: string;\n    characterClass: Class;\n    onClick: () => void;\n}\n\ninterface ICharacterPickerEntryState {\n    hover: boolean;\n}\n\nexport class CharacterPickerEntry extends React.Component<ICharacterPickerEntryProps, ICharacterPickerEntryState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hover: false,\n        }\n        window.addEventListener('mouseenter', () => this.setState({hover: true}));\n        window.addEventListener('mouseleave', () => this.setState({hover: false}));\n    }\n    render() {\n        let chClass = this.characterClassString();\n        return (\n            <ListViewRow\n                style={{\n                    borderBottom: '1px solid rgba(0,0,0,0.2)',\n                }}\n                background={this.state.hover ? 'blue' : 'white'}\n                onClick={() => this.props.onClick()}\n            >\n                \n                <CharacterClassIcon \n                    classKind={this.props.characterClass && this.props.characterClass.name} \n                    fill={this.state.hover ? 'white' : null}\n                />\n                <Text \n                    marginLeft={5}\n                    style={{lineHeight: '25px'}}\n                    size={24}\n                    title={`${this.props.name}\\n${chClass.split('/').join('\\n')}`}\n                    color={this.state.hover ? 'white' : null}\n                >{`${this.props.name} ${this.characterClassString()}`}</Text>\n            </ListViewRow>\n        );\n    }\n\n    characterClassString(): string {\n        let c = this.props.characterClass;\n        if (!c) {\n            return '';\n        }\n        return `${c.name} (lvl${c.level})`;\n    }\n}\n\ninterface ICharacterClassIconProps {\n    classKind: ClassKind;\n    fill?: string;\n}\n\ninterface ICharacterClassIconState {\n\n}\n\nexport class CharacterClassIcon extends React.Component<ICharacterClassIconProps, ICharacterClassIconState> {\n    constructor(props: ICharacterClassIconProps) {\n        super(props);\n    }\n    render() {\n        switch (this.props.classKind) {\n            case ClassKind.Barbarian:\n                return <Barbarian height=\"25px\" width=\"25px\" />;\n            case ClassKind.Bard:\n                return <Bard height=\"25px\" width=\"25px\" />;\n            case ClassKind.Cleric:\n                return <Cleric height=\"25px\" width=\"25px\" />;\n            case ClassKind.Druid:\n                return <Druid height=\"25px\" width=\"25px\" />;\n            case ClassKind.Fighter:\n                return <Fighter height=\"25px\" width=\"25px\" />;\n            case ClassKind.Monk:\n                return <Monk height=\"25px\" width=\"25px\" />;\n            case ClassKind.Paladin:\n                return <Paladin height=\"25px\" width=\"25px\" />;\n            case ClassKind.Ranger:\n                return <Ranger height=\"25px\" width=\"25px\" />;\n            case ClassKind.Rogue:\n                return <Rogue width=\"25px\" height=\"25px\" />;\n            case ClassKind.Sorcerer:\n                return <Sorcerer height=\"25px\" width=\"25px\" />;\n            case ClassKind.Warlock:\n                return <Warlock height=\"25px\" width=\"25px\" />;\n            case ClassKind.Wizard:\n                return <Wizard height=\"25px\" width=\"25px\" />;\n            default:\n                return <NewCharacter height=\"25px\" width=\"25px\" />;\n        }\n    }\n}","import * as React from 'react';\nimport { Character, Height, NormalLanguage } from '../models/character';\nimport { Class, ClassKind } from '../models/class';\nimport { ClassDetails} from '../models/classDetails';\nimport { Race, RaceKind, SubRace } from '../models/race';\nimport { Data } from '../services/data';\nimport { Box, TitleBar, Toolbar, \n        ToolbarNav, ToolbarNavItem, ListView, \n        ListViewRow, Text, ListViewHeader,\n        ListViewSection, ListViewSectionHeader,\n        Label, TextInput, Button, Checkbox } from 'react-desktop';\nimport { CircledLetter } from './icons';\nimport { Background } from '../models/background';\nimport { Randomizer } from '../services/randomizer';\nimport { Tool } from '../models/tools';\nimport { AbilityScores } from '../models/abilityScore';\nimport { Skills, SkillKind } from '../models/skills';\ninterface ICharacterCreatorProps {\n    onSave: (ch: Character) => void;\n}\n\ninterface ICharacterCreatorState {\n    character: Character;\n    selectedTab: number;\n}\n\nconst RACE_ICON = <CircledLetter id=\"race-icon\" width={25} height={25} letter=\"R\" />\nconst BASIC_ICON = <CircledLetter id=\"basic-icon\" width={25} height={25} letter=\"I\" />\nconst CLASS_ICON = <CircledLetter id=\"class-icon\" width={25} height={25} letter = \"C\" />\nconst BACK_ICON = <CircledLetter id=\"background-icon\" width={25} height={25} letter=\"B\" />\n\nexport class CharacterCreator extends React.Component<ICharacterCreatorProps, ICharacterCreatorState> {\n    allClasses: ClassKind[];\n    allBackgrounds: Background[];\n    constructor(props) {\n        super(props);\n        this.state = {\n            character: Randomizer.randomCharacter(),\n            selectedTab: 0,\n        };\n        this.allClasses = Data.getAllClasses();\n        this.allBackgrounds = Data.getAllBackground();\n    }\n    render() {\n        return (\n            <div className=\"character-creator\">\n                <TitleBar \n                    className=\"character-creator-tab-bar\"\n                    height={50}\n                >\n                    <Toolbar\n                        height={50}\n                    >\n                        <ToolbarNav\n                            height={50}\n                        >\n                            <ToolbarNavItem\n                                title=\"Race\"\n                                icon={RACE_ICON}\n                                selected={this.state.selectedTab === 0}\n                                onClick={() => this.setState({selectedTab: 0})}\n                            />\n                            <ToolbarNavItem\n                                title=\"Basic\"\n                                icon={BASIC_ICON}\n                                selected={this.state.selectedTab === 1}\n                                onClick={() => this.setState({selectedTab: 1})}\n                            />\n                            <ToolbarNavItem\n                                title=\"Class\"\n                                icon={CLASS_ICON}\n                                selected={this.state.selectedTab === 2}\n                                onClick={() => this.setState({selectedTab: 2})}\n                            />\n                            <ToolbarNavItem\n                                    title=\"Background\"\n                                    icon={BACK_ICON}\n                                    selected={this.state.selectedTab === 3}\n                                onClick={() => this.setState({selectedTab: 3})}\n                            />\n                            <Button\n                                style={{\n                                    width: 55,\n                                    height: 40,\n                                }}\n                                onClick={() => {\n                                    this.props.onSave(this.state.character);\n                                }}\n                            >Save</Button>\n                        </ToolbarNav>\n                    </Toolbar>\n                </TitleBar>\n                <div className=\"character-creator-tab-content\">\n                    { this.renderBody() }\n                </div>\n            </div>\n        );\n    }\n\n    renderBody() {\n        switch (this.state.selectedTab) {\n            case 0:\n                return (\n                    <RaceInfo\n                        raceChanged={race => this.valueChanged('race', race)}\n                        race={this.state.character.race}\n                    />\n                );\n            case 1:\n                return (\n                    <CharacterInfo \n                        name={this.state.character.name}\n                        eyeColor={this.state.character.eyeColor}\n                        race={this.state.character.race}\n                        height={this.state.character.height}\n                        weight={this.state.character.weight}\n                        valueChanged={(key, value) => this.valueChanged(key, value)}\n                        abilityScores={this.state.character.abilityScores}\n                        skills={this.state.character.skills}\n                        chClass={this.state.character.characterClass}\n                        backgroundSkills={this.state.character.background.skills}\n                    />);\n            case 2:\n                return (\n                    <ClassInfo\n                        classes={this.allClasses}\n                        onClassChange={c => this.valueChanged('characterClass', c)}\n                        characterClass={this.state.character.characterClass}\n                    />);\n            case 3:\n                return (\n                    <BackgroundInfo\n                        backgrounds={this.allBackgrounds}\n                        onBackgroundChange={b => this.valueChanged('background', b)}\n                        characterBackground={this.state.character.background}\n                        languages={Object.getOwnPropertyNames(NormalLanguage).map(l => NormalLanguage[l])}\n                    />\n                )\n        }\n    }\n\n    valueChanged(key: string, value: any) {\n        this.setState((prev, props) => {\n            console.log('valueChanged', key, value);\n            let newProps = {[key]: value};\n            if (key === 'race') {\n                let race = value as Race;\n                newProps.height = Randomizer.randomHeight(...race.heightRange);\n                newProps.weight = Randomizer.randomWeight(race.avgWeight);\n            }\n            let newCharacter = Character.fromJson(Object.assign(prev.character, newProps));\n            if (key === 'background') {\n                newCharacter.resetSkills();\n            }\n            return {\n                character: newCharacter\n            }\n        });\n    }\n}\n\ninterface IRaceInfoProps {\n    raceChanged: (race: Race) => void;\n    race: Race;\n}\n\ninterface IRaceInfoState {\n\n}\n\nexport class RaceInfo extends React.Component<IRaceInfoProps, IRaceInfoState> {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div className=\"race-info\">\n                <RaceSelector \n                    onRaceChange={(raceKind) => this.props.raceChanged(new Race(raceKind))}\n                    race={this.props.race.name}\n                    subRaceChanged={(subRace) => this.props.raceChanged(new Race(this.props.race.name, subRace))}\n                    subRace={this.props.race.subRace}\n                />\n                <RaceDetails\n                    race={this.props.race}\n                />\n            </div>\n        );\n    }\n}\n\ninterface IRaceDetailsProps {\n    race: Race;\n}\n\ninterface IRaceDetailsState {\n\n}\n\nexport class RaceDetails extends React.Component<IRaceDetailsProps, IRaceDetailsState> {\n    constructor(props: IRaceDetailsProps) {\n        super(props);\n    }\n    render() {\n        return (\n            <div className=\"race-details\">\n                <ListView \n                    className=\"race-details-list\"\n                    style={{\n                        borderRight: '1px solid rgba(0,0,0,0.3)',\n                    }}\n                >\n                <ListViewHeader><Text>Details</Text></ListViewHeader>\n                    {this.getList().map((s, i) => {\n                        return (\n                            <ListViewRow \n                                key={`race-detail-${i}`}\n                                style={{\n                                    borderBottom: '1px solid rgba(0,0,0,0.3)',\n                                }}\n                            >\n                                <Text>{s}</Text>\n                            </ListViewRow>\n                        );\n                    })}\n                </ListView>\n            </div>\n        );\n    }\n\n    getList(): string[] {\n        const race = this.props.race;\n        let ret = race.abilityModifiers.map(m => `+${m[1]} to ${m[0]}`)\n        ret.push(`Age Range: ${race.ageRange[0]} - ${race.ageRange[1]}`);\n        ret.push(`Typical Alignment ${race.preferredAlignment.toString()}`);\n        ret.push(`Height: ${race.heightRange[0].toString()} - ${race.heightRange[1].toString()}`);\n        ret.push(`Speed: ${race.speed}`);\n        ret.push(`Size: ${race.size}`);\n        ret.push(`Avg. Weight: ${race.avgWeight}`);\n        ret.push(`Languages: ${race.languages.join(', ')}`);\n        if (race.darkVision != null) {\n            ret.push(`Darkvision: ${race.darkVision.first}`);\n        }\n        if (race.damageResistance != null) {\n            ret.push(`Damage Resistance: ${race.damageResistance}`);\n        }\n        if (race.naturalWeapons.length == 3) {\n            let {name, damageKind, hitDie} = race.naturalWeapons[2];\n            ret.push(`Bonus Natural Weapon: ${name} ${damageKind} ${hitDie[0]}d${hitDie[1]}`);\n        }\n        if (race.weaponProfs.length > 0) {\n            ret.push(`Weapon Proficiencies: ${race.weaponProfs.join(', ')}`);\n        }\n        if (race.toolProfs.length > 0) {\n            ret.push(`Tool Proficiencies: ${race.toolProfs.join(', ')}`);\n        }\n        if (race.armorProfs.length > 0) {\n            ret.push(`Armor Proficiencies: ${race.armorProfs.join(', ')}`);\n        }\n        if (race.bonusLanguages > 0) {\n            ret.push(`${race.bonusLanguages} Bonus Language${race.bonusLanguages == 1 ? 's' : ''}`);\n        }\n        ret.push(...race.miscBenefits);\n        return ret;\n    }\n}\n\ninterface IRaceDetailProps {\n    text: string;\n}\n\nexport class RaceDetail extends React.Component<IRaceDetailProps, {}> {\n    render() {\n        return (\n            <ListViewRow \n                className=\"race-detail\"\n                style={{\n                    borderBottom: '1px solid rgba(0,0,0,0.3)',\n                }}\n            >\n                <Text>{this.props.text}</Text>\n            </ListViewRow>\n        );\n    }\n}\n\ninterface ICharacterInfoProps {\n    name: string;\n    eyeColor: string;\n    race: Race;\n    height: Height;\n    weight: number;\n    abilityScores: AbilityScores;\n    chClass: Class;\n    skills: Skills;\n    backgroundSkills: SkillKind[];\n    valueChanged: (key: string, newValue: any) => void;\n}\n\ninterface ICharacterInfoState {\n    skillsSelected: number;\n\n}\n\nexport class CharacterInfo extends React.Component<ICharacterInfoProps, ICharacterInfoState> {\n    constructor(props: ICharacterInfoProps) {\n        super(props);\n        this.state = {\n            skillsSelected: 0,\n        }\n    }\n\n    render() {\n        let remainingSkills = this.props.chClass.numberOfSkills - this.state.skillsSelected;\n\n        return (\n            <div>\n                <Box\n                    padding=\"5px\"\n                    style={{\n                        display: 'flex',\n                        flexFlow: 'row wrap',\n                    }}\n                >\n                    <Box \n                        className=\"input-pair\"\n                        padding=\"5px\"\n                        marginBottom=\"5px\"\n                        marginLeft=\"5px\"\n                        width={175}\n                    >\n                        <Label htmlFor=\"character-name\">Name</Label>\n                        <TextInput \n                            id=\"character-name\" \n                            focusRing={false}\n                            defaultValue={this.props.name || ''}\n                            onChange={ev => this.props.valueChanged('name', ev.currentTarget.value)}\n                            width={150}\n                        />\n                    </Box>\n                    <Box \n                        className=\"input-pair\"\n                        padding=\"5px\"\n                        marginBottom=\"5px\"\n                        marginLeft=\"5px\"\n                        width={175}\n                    >\n                        <Label htmlFor=\"character-eye-color\">Eye Color</Label>\n                        <TextInput \n                            id=\"character-eye-color\" \n                            focusRing={false}\n                            defaultValue={this.props.eyeColor || ''}\n                            onChange={ev => this.props.valueChanged('eyeColor', ev.currentTarget.value)}\n                            width={150}\n                        />\n                    </Box>\n                    <Box \n                        className=\"input-pair\"\n                        padding=\"5px\"\n                        marginBottom=\"5px\"\n                        marginLeft=\"5px\"\n                        width={175}\n                    >\n                        <Label htmlFor=\"height\">Height</Label>\n                        <div className=\"height-inputs\">\n                            <TextInput \n                                className=\"height-part height-feet\"\n                                focusRing={false}\n                                type=\"number\" \n                                value={this.props.height.feet}\n                                onChange={ev => this.props.valueChanged('height', new Height(parseInt(ev.currentTarget.value), this.props.height.inches))}\n                                width={75}\n                            />\n                            <TextInput \n                                className=\"height-part height-inches\"\n                                focusRing={false}\n                                type=\"number\" \n                                value={this.props.height.inches} \n                                onChange={ev => this.props.valueChanged('height', new Height(this.props.height.feet, parseInt(ev.currentTarget.value)))}\n                                width={75}\n                            />\n                        </div>\n                    </Box>\n                    <Box \n                        className=\"input-pair\"\n                        padding=\"5px\"\n                        marginBottom=\"5px\"\n                        marginLeft=\"5px\"\n                        width={175}\n                    >\n                        <Label htmlFor=\"weight\">Weight</Label>\n                        <TextInput \n                            focusRing={false}\n                            id=\"weight\"\n                            className=\"weight\"\n                            type=\"number\"\n                            value={this.props.weight}\n                            onChange={ev => this.props.valueChanged('weight', parseInt(ev.currentTarget.value))}\n                            width={150}\n                        />\n                    </Box>\n                </Box>\n                <Box>\n                    <TitleBar>\n                        <Text>Ability Scores</Text>\n                    </TitleBar>\n                    <Text>{`Remaining Points ${this.props.abilityScores.reduce((acc, c) => acc - (c.value - 8), 15)}`}</Text>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexFlow: 'row wrap',\n                        }}\n                    >\n                    {this.props.abilityScores.map(s => {\n                        return (\n                        <Box\n                            key={`abi-score-${s.kind}`}\n                            style={{\n                                width: 100,\n                                height: 100,\n                                flex: null,\n                            }}\n                            margin=\"5px\"\n                        >\n                            <Text>{s.kind}</Text>\n                            <Text>{s.value}</Text>\n                            <Text>{s.modifier}</Text>\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    flexFlow: 'row'\n                                }}\n                            >\n                                <Button \n                                    padding=\"0px\" \n                                    className=\"up\"\n                                    onClick={() => {\n                                        let ret = AbilityScores.fromJson(this.props.abilityScores);\n                                        ret.set(s.kind, s.value + 1);\n                                        this.props.valueChanged('abilityScores', ret);\n                                    }}\n                                ><i style={{ fontFamily: 'Material Icons', lineHeight: 1 }}>expand_less</i></Button>\n                                <Button \n                                    padding=\"0px\" \n                                    className=\"down\"\n                                    onClick={() => {\n                                        let ret = AbilityScores.fromJson(this.props.abilityScores);\n                                        ret.set(s.kind, s.value - 1);\n                                        this.props.valueChanged('abilityScores', ret);\n                                    }}\n                                ><i style={{ fontFamily: 'Material Icons', lineHeight: 1 }}>expand_more</i></Button>\n                            </div>\n                        </Box>);\n                    })}\n                    </div>\n                </Box>\n                <Box>\n                    <TitleBar>\n                        <Text>Skills</Text>\n                    </TitleBar>\n                    <Text>{`Remaining skills ${remainingSkills}`}</Text>\n                    {this.props.skills.map(s => {\n                        let enabledFromBackground = this.props.backgroundSkills.indexOf(s.kind) > -1;\n                        let isClassSkill = this.props.chClass.availableSkills.indexOf(s.kind) > -1\n                        let checkboxDisabled = enabledFromBackground || !isClassSkill;\n                        console.log('checkBoxDisabled', enabledFromBackground, isClassSkill);\n                        return (<SkillRadio\n                                key={`skill-list-item-${s.kind}`}\n                                checked={s.enabled}\n                                disabled={checkboxDisabled}\n                                title={enabledFromBackground ? `Provided by background\\n${s.desc}` : s.desc}\n                                label={s.kind}\n                                onClick={() => {\n                                    if (remainingSkills === 0 && !s.enabled) {\n                                        return;\n                                    }\n                                    let ret = Skills.fromJson(this.props.skills);\n                                    ret.set(s.kind, !s.enabled);\n                                    this.props.valueChanged('skills', ret);\n                                    this.setState((prev, props) => {\n                                        let skillsSelected = s.enabled ? prev.skillsSelected - 1 : prev.skillsSelected + 1;\n                                        return {skillsSelected};\n                                    });\n                                }}\n                            />\n                        )\n                    })}\n                </Box>\n            </div>\n        );\n    }\n}\n\ninterface ISkillRadioProps {\n    checked: boolean;\n    disabled: boolean;\n    label: string;\n    title: string;\n    onClick: () => void;\n}\n\ninterface ISkillRadioState {\n\n}\n\nexport class SkillRadio extends React.Component<ISkillRadioProps, ISkillRadioState> {\n    constructor(props: ISkillRadioProps) {\n        super(props);\n    }\n    render() {\n        return (\n            <div\n                onClick={() => {\n                    if (!this.props.disabled) {\n                        this.props.onClick();\n                    }\n                }}\n                title={this.props.title}\n                style={{\n                    display: 'flex',\n                    flexFlow: 'row',\n                }}\n            >\n                <div\n                    style={{\n                        width: 15,\n                        height: 15,\n                        margin: 0,\n                        marginRight: 5,\n                        padding: 0,\n                        borderRadius: '50%',\n                        backgroundColor: this.props.checked ? (this.props.disabled ? 'grey' : '#007bfa') : 'white',\n                    }}\n                >\n                <div \n                    style={{\n                        width: 5,\n                        height: 5,\n                        borderRadius: '50%',\n                        margin: 5,\n                        backgroundColor: this.props.checked ? 'white'  : 'transparent',\n                    }}\n                />\n                </div>\n                <span\n                    style={{\n                        color: this.props.disabled ? 'grey' : 'black',\n                        display: 'block',\n                        \n                    }}\n                >\n                    {this.props.label}\n                </span>\n            </div>\n        );\n    }\n}\n\ninterface IClassInfoProps {\n    classes: ClassKind[];\n    onClassChange: (c: Class) => void;\n    characterClass: Class;\n}\n\ninterface IClassInfoState {\n\n}\n\nexport class ClassInfo extends React.Component<IClassInfoProps, IClassInfoState> {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div className=\"class-info\">\n                <ClassSelector\n                    classes={this.props.classes}\n                    onClassChange={v => this.classChanged(v)}\n                    onLevelChange={v => this.levelChanged(v)}\n                    selectedClassKind={this.props.characterClass.name}\n                />\n                <ClassDetailsComponent\n                    classKind={this.props.characterClass.name}\n                    classDesc={this.props.characterClass.desc}\n                    details={this.props.characterClass.classDetails}\n                />\n            </div>\n        );\n    }\n    classChanged(kind: ClassKind) {\n        this.props.onClassChange(new Class(kind, this.props.characterClass.level));\n    }\n    levelChanged(lvl: number) {\n        let newClass = Object.assign(this.props.characterClass, {level: lvl});\n        this.props.onClassChange(newClass);\n    }\n}\n\ninterface IClassSelectorProps {\n    classes: ClassKind[];\n    selectedClassKind: ClassKind;\n    onClassChange: (ck: ClassKind) => void;\n    onLevelChange: (lvl: number) => void;\n}\n\ninterface IClassSelectorState {\n}\n\nexport class ClassSelector extends React.Component<IClassSelectorProps, IClassSelectorState> {\n    constructor(props: IClassSelectorProps) {\n        super(props);\n    }\n    render() {\n        return (\n            <div className=\"class-selector\">\n                <ListView \n                    className=\"classes-list\"\n                    style={{\n                        borderRight: '1px solid black',\n                    }}\n                >\n                    <ListViewHeader><Text>Class</Text></ListViewHeader>\n                    {this.props.classes.map((n, i) => {\n                        return (\n                            <ListViewRow\n                                key={`class-entry-${i}`}\n                                className={`class-entry ${this.props.selectedClassKind == n ? 'selected' : 'unselected'}`}\n                                onClick={() => this.props.onClassChange(n)}\n                                padding=\"5px\"\n                                style={{\n                                    borderBottom: '1px solid rgba(0,0,0,0.3)',\n                                }}\n                                margin=\"0px\"\n                            >\n                                <Text\n                                    color={this.props.selectedClassKind == n ? 'white' : 'black'}\n                                >{n}</Text>\n                            </ListViewRow>\n                        );\n                    })}\n                </ListView>\n            </div>\n        );\n    }\n    \n}\n\ninterface IClassDetailsProps {\n    classKind: ClassKind;\n    classDesc: string;\n    details: ClassDetails;\n}\n\ninterface IClassDetailsState {\n\n}\n\nexport class ClassDetailsComponent extends React.Component<IClassDetailsProps, IClassDetailsState> {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <ListView className={`class-details ${this.props.classKind.toLowerCase()}`}>\n                <ListViewSection>\n                    <ListViewSectionHeader>\n                        <Text>Class Description</Text>\n                    </ListViewSectionHeader>\n                    <ListViewRow\n                        margin=\"0px\"\n                    >\n                        <Text>{this.props.classDesc}</Text>\n                    </ListViewRow>\n                </ListViewSection>\n                <ListViewSection>\n                    <ListViewSectionHeader>\n                        <Text>Benefits at 1st Level</Text>\n                    </ListViewSectionHeader>\n                    {this.props.details.notes().map((n, i) => {\n                        return (\n                            <ListViewRow \n                                key={`class-detail-note-${i}`}\n                                margin=\"0px\"\n                                style={{\n                                    borderBottom: '1px solid rgba(0,0,0,0.3)',\n                                }}\n                            >\n                                <div>\n                                    {n.longDesc.split('\\n').map((l, i) => {\n                                        return (<Text\n                                                style={{\n                                                    marginLeft: i === 0 ? 0 : 5,\n                                                }}\n                                                key={`long-desc-line-${n.name}-${l}`}\n                                            >{i === 0 ? `${n.name}: ${l}` : l}</Text>)\n                                    })}\n                                </div>\n                            </ListViewRow>\n                        );\n                    })}\n                </ListViewSection>\n            </ListView>\n        );\n    }\n}\n\ninterface IRaceSelectorProps {\n    onRaceChange: (race: RaceKind) => void;\n    subRaceChanged: (subRace: SubRace) => void;\n    race: RaceKind;\n    subRace?: SubRace;\n}\n\ninterface IRaceSelectorState {\n    selectedRace: RaceKind;\n}\n\nexport class RaceSelector extends React.Component<IRaceSelectorProps, IRaceSelectorState> {\n    private allRaces: RaceKind[];\n    constructor(props: IRaceSelectorProps) {\n        super(props);\n        this.allRaces = Data.getAllRaces();\n        this.state = {\n            selectedRace: props.race\n        }\n    }\n    render() {\n        let subRaces = Data.subRaceFor(this.state.selectedRace);\n        return (\n            <div className=\"race-selector\">\n            <ListView \n                className=\"race-selection\"\n                value={this.state.selectedRace}\n                style={{\n                    width: '50%',\n                    borderRight: '1px solid rgba(0,0,0,0.3)'\n                }}\n            >\n                <ListViewHeader>\n                    <Text>Race</Text>\n                </ListViewHeader>\n                {this.allRaces.map(r => {\n                    return (<ListViewRow \n                                key={r} \n                                onClick={() => {\n                                    this.setState({selectedRace: r});\n                                    this.props.onRaceChange(r);\n                                }}\n                                className={`race-option${this.state.selectedRace == r ? ' selected' : ''}`}\n                                style={{\n                                    borderBottom: '1px solid rgba(0,0,0,0.3)',\n                                }}\n                                margin=\"0px\"\n                            >\n                            <Text>{r}</Text>\n                            </ListViewRow>)\n                })\n                }\n            </ListView>\n            {subRaces == null ? null : \n                (\n                    <ListView \n                        className=\"sub-race-selector\"\n                        style={{\n                            borderRight: '1px solid rgba(0,0,0,0.3)'\n                        }}\n                    >\n                    <ListViewHeader><Text>Sub Race</Text></ListViewHeader>\n                    {subRaces.map((s, i) => \n                        (<ListViewRow \n                            key={`sub-race-${i}`}\n                            className={`race-option${this.props.subRace && this.props.subRace == s ? ' selected' : ''}`}\n                            style={{\n                                borderBottom: '1px solid rgba(0,0,0,0.3)',\n                            }}\n                            margin=\"0px\"\n                            onClick={() => {\n                                console.log('clicked', s);\n                                if (this.props.subRace === s) {\n                                    this.props.subRaceChanged(null);\n                                } else {\n                                    this.props.subRaceChanged(s)\n                                }\n                            }}\n                        >\n                            <Text>{s}</Text>\n                        </ListViewRow>)\n                    )}\n                    </ListView>\n                )\n            }\n            </div>\n        );\n    }\n}\n\ninterface IBackgroundInfoProps {\n    backgrounds: Background[];\n    characterBackground: Background;\n    languages: NormalLanguage[];\n    onBackgroundChange: (b: Background) => void;\n}\n\ninterface IBackgroundInfoState {\n\n}\n\nexport class BackgroundInfo extends React.Component<IBackgroundInfoProps, IBackgroundInfoState> {\n    constructor(props: IBackgroundInfoProps) {\n        super(props);\n    }\n    render() {\n        let ret = [\n            <ListView \n                key=\"background-list-list\"\n                className=\"background-list\"\n                width={250}\n                style={{\n                    flex: null,\n                }}\n            >\n                <ListViewHeader>\n                    <Text>Background</Text>\n                </ListViewHeader>\n                {this.props.backgrounds.map(b => {\n                    let selected = this.props.characterBackground.kind == b.kind;\n                    return (\n                    <ListViewRow\n                        key={`background-item-${b.kind}`}\n                        className={`backgound-item${selected ? ' selected' : ''}`}\n                        style={{\n                            borderBottom: '1px solid rgba(0,0,0,0.3)',\n                            background: selected ? '#007bfa' : 'white',\n                            color: selected ? 'white' : 'black',\n                        }}\n                        onClick={() => this.props.onBackgroundChange(b)}\n                        margin=\"0px\"\n                    >\n                        <Text\n                        style={{\n                            color: selected ? 'white' : 'black',\n                        }}\n                        >{b.kind}</Text>\n                    </ListViewRow>);\n                })}\n            </ListView>,\n\n            <ListView\n                key=\"background-skill-prof-list\"\n                width={250}\n                style={{\n                    flex: null,\n                }}\n            >\n            <ListViewHeader>\n                <Text>Skill Proficiencies</Text>\n            </ListViewHeader>\n            {this.props.characterBackground.skills.map(s => {\n                return <ListViewRow\n                            key={`background-skill-${s}`}\n                            style={{\n                                borderBottom: '1px solid rgba(0,0,0,0.3)',\n                            }}\n                            margin=\"0px\"\n                        >\n                            <Text>{s}</Text>\n                        </ListViewRow>\n            })}\n            </ListView>\n        ];\n        if (this.props.characterBackground.languages.length > 0) {\n            ret.push(\n                <ListView \n                    key=\"background-lang-list\"\n                    className=\"details-list\"\n                    width={250}\n                    style={{\n                        flex: null,\n                    }}\n                >\n                <ListViewHeader>\n                    <Text>{`Choose ${this.props.characterBackground.languages.length} Bonus Languages`}</Text>\n                </ListViewHeader>\n                {this.props.languages.map(l => {\n                    let selected = this.props.characterBackground.languages.indexOf(l) > -1;\n                    return (\n                        <ListViewRow\n                            key={`background-language-${l}`}\n                            hidden={this.props.languages.length < 1}\n                            className={`language-option${selected  ? 'selected' : ''}`}\n                            style={{\n                                borderBottom: '1px solid rgba(0,0,0,0.3)',\n                                background: selected ? '#007bfa' : 'white',\n                                color: selected ? 'white' : 'black',\n                            }}\n                            margin=\"0px\"\n                            onClick={() => {\n                                if (this.props.characterBackground.languages.length == 0) {\n                                    return;\n                                }\n                                let ret = Background.fromJson(this.props.characterBackground);\n                                if (selected) {\n                                    let idx = ret.languages.findIndex(la => la === l);\n                                    ret.languages[idx] = null;\n                                    return this.props.onBackgroundChange(ret);\n                                }\n                                if (this.props.characterBackground.languages.filter(la => la === null).length == 0) {\n                                    return;\n                                }\n                                let lastNull = ret.languages.findIndex(la => la === null);\n                                ret.languages[lastNull] = l;\n                                return this.props.onBackgroundChange(ret);\n                            }}\n                        >\n                            <Text\n                            style={{\n                                color: selected ? 'white' : 'black',\n                            }}\n                            >{l}</Text>\n                        </ListViewRow>\n                    );\n                })}\n                </ListView>\n            )\n        }\n        if (this.props.characterBackground.toolProficiencies.length > 0) {\n            ret.push(\n            <ListView\n                key={'background-tool-prof-list'}\n            >\n                <ListViewHeader>\n                    <Text>Tools Proficiencies</Text>\n                </ListViewHeader>\n                {this.props.characterBackground.toolProficiencies.map((t, i) => {\n                    let opts: Tool[] = this.props.characterBackground.toolOptions[i];\n                    if (opts != null) {\n                        return (\n                            <ListViewSection\n                                key={`tool-options-${i}`}\n                            >\n                                <ListViewSectionHeader>\n                                    <Text>Choose One</Text>\n                                </ListViewSectionHeader>\n                                    {opts.map((o, j) => {\n                                        let selected = o == t;\n                                        return (\n                                            <ListViewRow\n                                                key={`choice-${i}-${j}`}\n                                                style={{\n                                                    background: selected ? '#007bfa' : 'white',\n                                                    borderBottom: '1px solid rgba(0,0,0,0.3)',\n                                                }}\n                                                margin=\"0px\"\n                                                onClick={() => {\n                                                    let ret = Background.fromJson(this.props.characterBackground);\n                                                    ret.toolProficiencies[i] = o;\n                                                    return this.props.onBackgroundChange(ret);\n                                                }}\n                                            >\n                                                <Text\n                                                    style={{\n                                                        color: selected ? 'white' : 'black',\n                                                    }}\n                                                >{o}</Text>\n                                            </ListViewRow>\n                                        )\n                                    })}\n                            </ListViewSection>\n                    )}\n                    return (\n                        <ListViewRow\n                            key={`tool-prof-${t}`}\n                            margin=\"0px\"\n                        >\n                            <Text>{t}</Text>\n                        </ListViewRow>)\n                })}\n            </ListView>);\n        }\n        return (\n            <div className=\"background-info\">\n                {ret}\n            </div>\n        );\n    }\n}","import {Alignment, AlignmentMajor, AlignmentMinor, Character, Height, ArmorWeight, Armor, Wealth, HeavyArmor, LightArmor, MediumArmor} from '../models/character';\nimport { RaceKind, Race, SubRace } from '../models/race';\nimport { ClassKind, Class } from '../models/class';\nimport { AbilityScores, AbilityKind } from '../models/abilityScore';\nimport { Data } from './data';\nimport { Background, ALL_BACKGROUNDS } from '../models/background';\nimport { Skills } from '../models/skills';\n\nexport class Randomizer {\n    public static randomCharacter(): Character {\n        let raceKind = Randomizer.randomRace();\n        let subRace = Randomizer.randomSubRace(raceKind);\n        let race = new Race(raceKind, subRace);\n        let cls = new Class(Randomizer.randomClassKind(), 1, []);\n        let bkgnd = Randomizer.randomBackground();\n        let ret = new Character(\n            Character.nextName(),\n            new AbilityScores(),\n            race,\n            cls,\n            bkgnd,\n            race.preferredAlignment,\n            0,\n            Randomizer.randomHeight(race.heightRange[0], race.heightRange[1]),\n            Randomizer.randomWeight(race.avgWeight),\n            'grey',\n            0,\n            Randomizer.randomArmor(cls.armorProfs[cls.armorProfs.length - 1]),\n            cls.canUseShield && Math.random() > 0.5 ? new Armor('Shield', ArmorWeight.Heavy, 2, null) : null,\n            new Skills(),\n            [],\n            new Wealth(),\n            race.languages.concat(bkgnd.languages),\n            [],\n            0,\n            0,\n            [],\n            [],\n        );\n        let points = 15;\n        let ct = 8;\n        for (let abi of cls.primaryAbility) {\n            ret.abilityScores.set(abi, 8 + 4);\n            points -= 4;\n            ct -= 1;\n        }\n        let each = Math.floor(points / ct);\n        ret.abilityScores = new AbilityScores(ret.abilityScores.map(s => {\n            if (s.value > 8) {\n                return s;\n            }\n            s.value += each;\n            points -= each;\n            return s;\n        }));\n        if (points > 0) {\n            ret.abilityScores.set(AbilityKind.Charisma, 8 + each + points);\n        }\n        return ret;\n    }\n    public static randomClassKind(): ClassKind {\n        return Randomizer.sampleEnum(ClassKind) as ClassKind\n    }\n\n    public static randomRace(): RaceKind {\n        return Randomizer.sampleEnum(RaceKind) as RaceKind;\n    }\n\n    public static randomSubRace(race: RaceKind): SubRace | null {\n        let opts = Data.subRaceFor(race);\n        if (opts === null) {\n            return null;\n        }\n        return this.sample(opts);\n    }\n\n    public static randomAlignment(): Alignment {\n        return new Alignment(\n            Randomizer.sampleEnum(AlignmentMajor) as AlignmentMajor, \n            Randomizer.sampleEnum(AlignmentMinor) as AlignmentMinor,\n        );\n    }\n\n    public static randomBackground(): Background {\n        return Randomizer.sample(ALL_BACKGROUNDS)\n    }\n\n    public static randomHeight(min: Height, max: Height) {\n        let ft = Randomizer.rng(min.feet, max.feet);\n        let inches = Randomizer.rng(0, 12);\n        return new Height(ft, inches);\n    }\n\n    public static randomWeight(avgWeight: number) {\n        let values = new Uint8Array([0,0,0,0,0,0,0,0,0,0]);\n        for (;;) {\n            window.crypto.getRandomValues(values);\n            for (var i = 0; i < values.length; i++) {\n                let value = values[i];\n                let percent = value / avgWeight;\n                if (percent > 1 && percent < 1.3) {\n                    return value;\n                }\n                if (percent < 1 && percent > 0.7) {\n                    return value;\n                }\n            }\n        }\n    }\n\n    public static randomArmor(weight: ArmorWeight) {\n        switch (weight) {\n            case ArmorWeight.Heavy:\n                return new Armor(HeavyArmor.RingMail, ArmorWeight.Heavy, 4, 0);\n            case ArmorWeight.Light:\n                return new Armor(LightArmor.Leather, ArmorWeight.Light, 2, null);\n            case ArmorWeight.Medium:\n                return new Armor(MediumArmor.Hide, ArmorWeight.Medium, 2, 2);\n        }\n    }\n\n    public static rng(min: number, max: number): number {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    public static sample<T>(array: Array<T>): T {\n        let rng = Math.floor(Math.random() * array.length);\n        return array[rng];\n    }\n\n    public static sampleEnum(enumeration: any): string | number {\n        let keys = Object.getOwnPropertyNames(enumeration);\n        let key = Randomizer.sample(keys);\n        return enumeration[key];\n    }\n\n}","import { Character, Wealth } from \"../models/character\";\nimport { RaceKind, SubRace, Elf, Dwarf, Gnome, Halfling, Dragon } from '../models/race';\nimport { ClassKind } from '../models/class';\nimport { Background } from \"../models/background\";\nimport { Spell } from \"../models/spells\";\nimport Dexie from 'dexie';\n\nexport class Data {\n    private db = new Database();\n    async getCharacters(): Promise<Character[]> {\n        if (!this.db.ready) {\n            await this.db.init();\n        }\n        return await this.db.allCharacters();\n    }\n\n    async addCharacter(ch: Character): Promise<void> {\n        await this.db.addCharacter(ch);\n    }\n\n    async saveCharacter(ch: Character): Promise<void> {\n        await this.db.saveCharacters([ch]);\n    }\n\n    async saveCharacters(characters: Character[]): Promise<void> {\n        if (!this.db.ready) {\n            await this.db.init();\n        }\n        return await this.db.saveCharacters(characters);\n    }\n\n    async getSpellsForClass(cls: ClassKind): Promise<Spell[]> {\n        return this.db.spellsForClass(cls);\n    }\n\n    static getAllClasses(): ClassKind[] {\n        return Object.getOwnPropertyNames(ClassKind).map(n => ClassKind[n]);\n    }\n\n    static getAllRaces(): RaceKind[] {\n        return Object.getOwnPropertyNames(RaceKind).map(n => RaceKind[n]);\n    }\n\n    static subRaceFor(race: RaceKind): SubRace[] | null {\n        switch (race) {\n            case RaceKind.Elf:\n                return Object.getOwnPropertyNames(Elf).map(n => Elf[n]);\n            case RaceKind.Dwarf:\n                return Object.getOwnPropertyNames(Dwarf).map(n => Dwarf[n]);\n            case RaceKind.Gnome:\n                return Object.getOwnPropertyNames(Gnome).map(n => Gnome[n]);\n            case RaceKind.Halfling:\n                return Object.getOwnPropertyNames(Halfling).map(n => Halfling[n]);\n            case RaceKind.Dragonborn:\n                return Object.getOwnPropertyNames(Dragon).map(n => Dragon[n]);\n            default:    \n                return null;\n        }\n    }\n\n    static getAllBackground(): Background[] {\n        return [\n            Background.Acolyte(),\n            Background.Charlatan(),\n            Background.Criminal(),\n            Background.Entertainer(),\n            Background.FolkHero(),\n            Background.GuildArtisan(),\n            Background.Hermit(),\n            Background.Noble(),\n            Background.Outlander(),\n            Background.Sage(),\n            Background.Sailor(),\n            Background.Soldier(),\n            Background.Urchin(),\n        ]\n    }\n\n    static levelForExp(exp: number): number {\n        if (exp < 300) {\n            return 1;\n        }\n        if (exp < 900) {\n            return 2;\n        }\n        if (exp < 2700) {\n            return 3;\n        }\n        if (exp < 6500) {\n            return 4;\n        }\n        if (exp < 14000) {\n            return 5;\n        }\n        if (exp < 23000) {\n            return 6;\n        }\n        if (exp < 34000) {\n            return 7;\n        }\n        if (exp < 48000) {\n            return 8;\n        }\n        if (exp < 64000) {\n            return 9;\n        }\n        if (exp < 85000) {\n            return 10;\n        }\n        if (exp < 100000) {\n            return 11;\n        }\n        if (exp < 120000) {\n            return 12;\n        }\n        if (exp < 140000) {\n            return 13;\n        }\n        if (exp < 165000) {\n            return 14;\n        }\n        if (exp < 195000) {\n            return 15;\n        }\n        if (exp < 225000) {\n            return 16;\n        }\n        if (exp < 265000) {\n            return 17;\n        }\n        if (exp < 305000) {\n            return 18;\n        }\n        if (exp < 355000) {\n            return 19;\n        }\n        return 20;\n    }\n\n    public static proficiencyBonusFor(level: number) {\n        if (level < 5) {\n            return 2;\n        }\n        if (level < 9) {\n            return 3;\n        }\n        if (level < 13) {\n            return 4;\n        }\n        if (level < 17) {\n            return 5;\n        }\n        return 6;\n    }\n\n    public static averageHpFor(classKind: ClassKind) {\n        switch (classKind) {\n            case ClassKind.Barbarian:\n                return 7;\n            case ClassKind.Fighter:\n            case ClassKind.Paladin:\n            case ClassKind.Ranger:\n                return 6;\n            case ClassKind.Bard:\n            case ClassKind.Cleric:\n            case ClassKind.Druid:\n            case ClassKind.Rogue:\n            case ClassKind.Warlock:\n                return 5;\n            case ClassKind.Sorcerer:\n            case ClassKind.Wizard:\n                return 4;\n            \n        }\n    }\n\n    public static startingWealthFor(classKind: ClassKind): Wealth {\n        let mul = 10;\n        let numD4 = 0;\n        switch (classKind) {\n            case ClassKind.Barbarian:\n            case ClassKind.Druid:\n                numD4 = 2;\n            break;\n            case ClassKind.Sorcerer:\n                numD4 = 3;\n            break;\n            case ClassKind.Rogue:\n            case ClassKind.Warlock:\n            case ClassKind.Wizard:\n                numD4 = 4;\n            break;\n            default:\n                numD4 = 5;\n            case ClassKind.Monk:\n                mul = 1;\n            break;\n\n        }\n        let gp = 0;\n        for (var i = 0; i < numD4; i++) {\n            gp += Math.floor(Math.random() * 4) + 1;\n        }\n        return new Wealth(0,0,0,gp * mul,0);\n    }\n}\n\nexport interface IStorable<T> {\n    id?: number;\n    data: T\n}\n\nexport interface ISeed {\n    id?: number;\n    when: string;\n}\n\nexport class Database extends Dexie {\n    public seeds: Dexie.Table<ISeed, number>;\n    public characters: Dexie.Table<Character, number>;\n    public bardSpells: Dexie.Table<Spell, number>;\n    public clericSpells: Dexie.Table<Spell, number>;\n    public druidSpells: Dexie.Table<Spell, number>;\n    public paladinSpells: Dexie.Table<Spell, number>;\n    public rangerSpells: Dexie.Table<Spell, number>;\n    public rogueSpells: Dexie.Table<Spell, number>;\n    public sorcererSpells: Dexie.Table<Spell, number>;\n    public warlockSpells: Dexie.Table<Spell, number>;\n    public wizardSpells: Dexie.Table<Spell, number>;\n    public ready = false;\n    constructor() {\n        super(\"DnDCharacterManager\");\n        this.version(1).stores({\n            seeds: \"++id\",\n            characters: \"++id,name\",\n            bardSpells: \"++id,name\",\n            clericSpells: \"++id,name\",\n            druidSpells: \"++id,name\",\n            paladinSpells: \"++id,name\",\n            rangerSpells: \"++id,name\",\n            rogueSpells: \"++id,name\",\n            sorcererSpells: \"++id,name\",\n            warlockSpells: \"++id,name\",\n            wizardSpells: \"++id,name\",\n        });\n    }\n\n    public async init() {\n        console.log('checking for seeds');\n        if (await this.seeds.count() === 0) {\n            console.log('no seeds... seeding');\n            await this.seed();\n        }\n        this.ready = true;\n    }\n\n    public async seed() {\n        try {\n            let mod = await import('./seeder');\n            await mod.seed(this);\n        } catch (e) {\n            console.error('error seeding', e);\n            throw e;\n        }\n    }\n\n    async allCharacters(): Promise<Character[]> {\n        let arr = await this.characters.toArray();\n        return arr.map(Character.fromJson);\n    }\n\n    async addCharacter(ch: Character): Promise<void> {\n        try {\n            await this.characters.add(ch);\n        } catch (e) {\n            console.error('failed to add character', e, ch);\n        }\n    }\n\n    async saveCharacters(chs: Character[]): Promise<void> {\n        try {\n            await this.characters.bulkPut(chs);\n        } catch (e) {\n            console.error('Failed to save characters', e, chs,)\n        }\n    }\n\n    async spellsForClass(cls: ClassKind): Promise<Spell[]> {\n        try {\n\n            switch (cls) {\n                case ClassKind.Bard:\n                    return (await this.bardSpells.toArray()).map(Spell.fromJson);\n                case ClassKind.Cleric:\n                    return (await this.clericSpells.toArray()).map(Spell.fromJson);\n                case ClassKind.Druid:\n                    return (await this.druidSpells.toArray()).map(Spell.fromJson);\n                case ClassKind.Paladin:\n                    return (await this.paladinSpells.toArray()).map(Spell.fromJson);\n                case ClassKind.Ranger:\n                    return (await this.rangerSpells.toArray()).map(Spell.fromJson);\n                case ClassKind.Rogue:\n                    return (await this.rogueSpells.toArray()).map(Spell.fromJson);\n                case ClassKind.Sorcerer:\n                    return (await this.sorcererSpells.toArray()).map(Spell.fromJson);\n                case ClassKind.Warlock:\n                    return (await this.warlockSpells.toArray()).map(Spell.fromJson);\n                case ClassKind.Wizard:\n                    return (await this.wizardSpells.toArray()).map(Spell.fromJson);\n                default:\n                    return [];\n            }\n        } catch (e) {\n            console.error('failed to get spells for ', cls, e);\n        }\n    }\n\n}\n","\nexport class Range {\n    constructor(\n        public first: number,\n        public second: number = null,\n    ) {}\n\n    metaString(): string {\n        if (this.second) {\n            return `${this.first}/${this.second}`;\n        }\n        return this.first.toString();\n    }\n    public static fromJson(json: any): Range {\n        if (!json) return null;\n        return new Range(\n            json.first || 0,\n            json.second,\n        )\n    }\n}","export type Tool = ArtisanTools\n                    | GamingSet\n                    | Instrument\n                    | MiscTools\n                    | Mount\n                    | Vehicle\n                    | Boat;\nexport enum ArtisanTools {\n    Alchemist = \"Alchemist's Supplies\",\n    Brewer = \"Brewer's Supplies \",\n    Calligrapher = \"Calligrapher's Supplies \",\n    Carpenter = \"Carpenter's Tools\",\n    Cartographer = \"Cartographer's Tools\",\n    Cobbler = \"Cobbler's Tools\",\n    Cook = \"Cook's Utensils \",\n    Glassblower = \"Glassblower's Tools\",\n    Jeweler = \"Jeweler's Tools\",\n    Leatherworker = \"Leatherworker's Tools\",\n    Mason = \"Mason's Tools\",\n    Painter = \"Painter's Supplies\",\n    Potter = \"Potter's Tools\",\n    Smith = \"Smith's Tools\",\n    Tinker = \"Tinker's Tools\",\n    Weaver = \"Weaver's Tools\",\n    Woodcarver = \"Woodcarver's Tools\",\n}\n\nexport enum GamingSet {\n    Dice = \"Dice Set\",\n    Dragonchess = \"Dragonchess Set\",\n    PlayingCards = \"Playing Card Set\",\n    ThreeDragonAnte = \"Three-Dragon Ante Set\",\n}\n\nexport enum Instrument {\n    Bagpipes = \"Bagpipes\",\n    Drum = \"Drum\",\n    Dulcimer = \"Dulcimer\",\n    Flute = \"Flute\",\n    Lute = \"Lute \",\n    Lyre = \"Lyre\",\n    Horn = \"Horn\",\n    Pan = \"Pan Flute\",\n    Shawm = \"Shawm\",\n    Viol = \"Viol\",\n}\n\nexport enum MiscTools {\n    Disguise = \"Disguise Kit\",\n    Forgery = \"Forgery Kit\",\n    Herbalism = \"Herbalism Kit\",\n    Navigator = \"Navigator's Tools\",\n    Poisoner = \"Poisoner's Kit\",\n    Thieves = \"Thieves' Tools\",\n}\n\nexport enum Mount {\n    Camel = 'Camel',\n    Donkey = 'Donkey',\n    Elephant = 'Elephant',\n    DraftHorse = 'Horse (draft)',\n    Horse = 'Horse (riding)',\n    Mastiff = 'Mastiff',\n    Pony = 'Pony',\n    Warhorse = 'Warhorse',\n}\n\nexport enum Vehicle {\n    Carriage = 'Carriage',\n    Cart = 'Cart',\n    Chariot = 'Chariot',\n    Sled = 'Sled',\n    Wagon = 'Wagon',\n}\n\nexport enum Boat {\n    Galley = 'Galley',\n    Keelboat = 'Keelboat',\n    Longship = 'Longship',\n    Rowboat = 'Rowboat',\n    Sailing = 'Sailing', \n    Warship = 'Warship',\n}","import { SkillKind } from './skills';\nimport { AbilityKind } from './abilityScore';\nimport { DEFAULT_BONUS_ABILITY_SCORES } from './class';\nimport { Note } from './note';\n\nexport type ClassDetails = BarbarianDetails \n                        | BardDetails \n                        | ClericDetails\n                        | DruidDetails\n                        | FighterDetails\n                        | MonkDetails\n                        | PaladinDetails\n                        | RangerDetails\n                        | RogueDetails \n                        | SorcererDetails\n                        | WarlockDetails\n                        | WizardDetails;\n\nexport class BarbarianDetails {\n    constructor(\n        public level: number,\n        public primalPath: PrimalPath = null,\n        public totem: [Totem?, Totem?, Totem?] = [],\n        ) { }\n        \n    public static fromJson(json: any): BarbarianDetails {\n        return new BarbarianDetails(json.level, json.primalPath, json.totem);\n    }\n\n    public notes(level?: number): Note[] {\n        if (!level) {\n            level = this.level;\n        }\n        let ret = [\n            new Note(`Rage`, `${this.dailyRages} times daily, you rage for 1 minute (10 rounds)`, \n            `You can enter into a rage a certain number of times depending on your level. \n            During that time you have the following benefits.\n            - Advantage on Strength Checks,\n            - +${this.rageDamage} damage on Strength based attacks,\n            - Resistance to bludgeoning, piercing and slashing damage (halve damage)\n            A rage last for 1 minute which is 10 round of combat, you can be forced to end your rage early in one of the following situations.\n            - You do not attempt to attack an opponent on your turn\n            - You are knocked unconscious\n            Rages are only regained after a long rest`),\n            new Note('Unarmored Defense', \n                    'When not wearing armor your AC = 10 + DEX + CON (can use shield)', \n                    `When not wearing any armor your calculate your Armor Class by adding your dexterity and constitution modifiers to 10.\n                    If you are carrying a shield add the bonus from that as well.`),\n        ];\n        if (level > 1) {\n            ret.push(new Note('Reckless Attack', 'Your first attack on a turn can be declared reckless giving you advantage on attack rolls that use strength but attack rolls against you have the advantage until the rest of your turn',''));\n            ret.push(new Note('Danger Sense', 'You have the advantage on DEX saving throws against effects you an see', ''));\n        }\n        if (level > 2) {\n            ret.push(new Note('Primal Path', this.pathDesc(), ''));\n            if (this.primalPath) {\n                ret.push(...this.pathNotes())\n            }\n        }\n        if (level > 3 && level < 8) {\n            ret.push(new Note('Bonus Ability Scores',  '2', ''));\n        }\n        if (level > 7 && level < 12) {\n            ret.push(new Note('Bonus Ability Scores',  '4', ''));\n        }\n        if (level > 11 && level < 16) {\n            ret.push(new Note('Bonus Ability Scores',  '6', ''));\n        }\n        if (level > 15 && level < 19) {\n            ret.push(new Note('Bonus Ability Scores',  '8', ''));\n        }\n        if (level > 18) {\n            ret.push(new Note('Bonus Ability Scores',  '10', ''));\n        }\n        if (level > 4) {\n            ret.push(new Note('Extra Attack', 'You can attack twice on your turn', ''));\n            ret.push(new Note('Fast Movement', 'Add 10 to your movement speed', ''));\n        }\n        if (level > 6) {\n            ret.push(new Note('Feral Instinct', 'Advantage on Initiative rolls, if surprised at the beginning of combat you act normally on your first turn if you immediately rage', ''));\n        }\n        if (level > 8) {\n            ret.push(new Note('Brutal Critical', `Add ${this.brutalCriticalDice} to your critical damage rolls`, ''));\n        }\n        if (level > 10) {\n            ret.push(new Note('Relentless Rage', 'If you drop to 0HP you can make a CON save to drop to 1, DC starts at 10 and goes up by 5 for each attempt per day', ''));\n        }\n        if (level > 14) {\n            ret.push(new Note('Persistent Rage', 'Rage no longer ends early if you don\\'t attack an enemy your turn', ''));\n        }\n        if (level > 17) {\n            ret.push(new Note('Indomitable Might', 'If your total for a STR check is less than your STR score you can use your STR score instead', ''));\n        }\n        if (level > 19) {\n            ret.push(new Note('Primal Champion', 'Add 4 to your STR and CON scores (max 24)', ''));\n        }\n        return ret;\n    }\n\n    private pathDesc(): string {\n        if (!this.primalPath) {\n            return 'Choose between Berserker or Totem Warrior';\n        } else {\n            return this.primalPath;\n        }\n    }\n\n    private pathNotes(): Note[] {\n        let ret = [];\n        switch (this.primalPath) {\n            case PrimalPath.Berserker:\n                if (this.level > 2) {\n                    ret.push(new Note('Frenzy', 'While raging you can go into a frenzy, each turn after you get a single melee attack as a bonus action. (1 level of Exhaustion when rage ends see PHB 291)', ''));\n                }\n                if (this.level > 5) {\n                    ret.push(new Note('Mindless Rage', 'Can\\'t be charmed or frightened while raging', ''));\n                }\n                if (this.level > 9) {\n                    ret.push(new Note('Intimidating Presence', 'Can use action to frighten someone DC 8 + proficiency bonus + CHA, failed attempt you can\\'t use this again for 24 hours', ''));\n                }\n                if (this.level > 13) {\n                    ret.push(new Note('Retaliation', 'When you take damage from a creature within 5 feet of you you can make a melee weapon attack against that target', ''));\n                }\n            break;\n            case PrimalPath.TotemWarrior:\n                return this.totemNotes();        \n        }       \n        return ret;\n    }\n\n    private totemNotes(): Note[] {\n        let ret = [];\n        ret.push('- Spirit Seeker: cast Beast Sense and Speak with Animals as Rituals');\n        if (this.totem.length > 0) {\n            for (let i = 0; i < this.totem.length; i++) {\n                switch (this.totem[i]) {\n                    case Totem.Bear:\n                        ret.push(this.bearNotes(i + 1));\n                    break;\n                    case Totem.Eagle:\n                        ret.push(this.eagleNotes(i + 1));\n                    break;\n                    case Totem.Wolf:\n                        ret.push(this.wolfNotes(i + 1));\n                    break;\n                }\n            }\n        }\n        \n        if (this.level > 9) {\n            let spirit = this.totem[0] === this.totem[1] ? this.totem[0] : `${this.totem[0]} or ${this.totem[1]}`;\n            ret.push(`- Spirit Walker You can cast commune with nature as a ritual (spirit will be ${spirit})`);\n        }\n        return ret;\n    }\n\n    private bearNotes(level: number): Note {\n        if (level === 1) {\n            return new Note('Spirit Totem (Bear)', 'While raging you have resistance to all damage but psychic', '');\n        }\n        if (level === 2) {\n            return new Note('Aspect of the Beast (Bear)', 'You double your carrying capacity and have advantage on STR checks to push, pull, lift or break objects', '');\n        }\n        if (level === 3) {\n            return new Note('Totemic Attunement (Bear)', 'While raging enemies withing 5 feet of you have disadvantage on attack rolls against others (enemy must be able to see you can be frightened)', '');\n        }\n    }\n\n    private eagleNotes(level: number): Note {\n        if (level === 1) {\n            return new Note('Spirit Totem (Eagle)', 'While raging you can Dash as bonus action, enemies have disadvantage on opportunity attacks', '');\n        }\n        if (level === 2) {\n            return new Note('Aspect of the Beast (Eagle)', 'You can see up to 1 mile with no difficulty as though it were 100 ft, dim light doesn\\'t impose a disadvantage on perception checks', '');\n        }\n        if (level === 3) {\n            return new Note('Totemic Attunement (Eagle)', 'While raging you have a flying speed equal to your current walking speed, if you end your turn in the air you fall', '');\n        }\n    }\n    private wolfNotes(level: number): Note {\n        if (level === 1) {\n            return new Note('Spirit Totem (Wolf)', 'While raging your friends have advantage on attack rolls against any creature within 5 ft of you', '');\n        }\n        if (level === 2) {\n            return new Note('Aspect of the Beast (Wolf)', 'You can track at a fast pace, can move stealthily at normal pace', '');\n        }\n        if (level === 3) {\n            return new Note('Totemic Attunement (Wolf)', 'While raging you can use a bonus action to knock a large (or smaller) creature prone after a successful hit with a melee weapon attack', '');\n        }\n    }\n    \n    get dailyRages(): number {\n        if (this.level < 3) {\n            return 2;\n        }\n        if (this.level < 6) {\n            return 3;\n        }\n        if (this.level < 12) {\n            return 4;\n        }\n        if (this.level < 17) {\n            return 5;\n        }\n        if (this.level < 20) {\n            return 6;\n        }\n        return Infinity;\n    }\n    get rageDamage(): number {\n        if (this.level < 9) {\n            return 2;\n        }\n        if (this.level < 16) {\n            return 3;\n        }\n        return 4;\n    }\n    get brutalCriticalDice(): number {\n        if (this.level < 9) {\n            return 0;\n        }\n        if (this.level < 13) {\n            return 1;\n        }\n        if (this.level < 17) {\n            return 2;\n        }\n        return 3;\n    }\n}\n\nexport enum PrimalPath {\n    Berserker = 'Berserker',\n    TotemWarrior = 'Totem Warrior',\n}\n\nexport enum Totem {\n    Bear = 'Bear',\n    Eagle = 'Eagle',\n    Wolf = 'Wolf',\n}\n\nexport class BardDetails {\n    constructor(\n        public level: number,\n        public bardCollege: BardCollege = null,\n        public expertise: SkillKind[] = [],\n    ) {}\n\n    notes(): Note[] {\n        let ret = [\n            new Note('Spell Casting', \n                    'Your music and/or voice is imbued with magic', \n                    `Your music and/or voice is imbued with magic.\n                    This magic can support and inspire allies or deflate and hurt foes.`),\n            new Note(`Bardic Inspiration`, \n                    `You can bestow a 1d${this.bardicInspirationDie} on any ally equal to your DEX mod per day, this die can be used to augment and skill, attack or saving roll before or after the roll. Must be declared before DM says it was successful or not, must be used within 10 minutes`,\n                    `You can doll out inspiration like a currency boosting the dice rolls of your allies.\n                    The number of times you can do this and how powerful the effect is increases as you level.\n                    Any inspired ally must use this effect within 10 minutes.\n                    You regain this ability after a long rest.`),\n        ];\n        if (this.level > 1) {\n            ret.push(new Note('Jack of All Trades', 'Add half your proficiency bonus (rounded down) to any ability check that doesn\\'t include your proficiency bonus', ''));\n            ret.push(new Note(`Song of Rest`, `You can sing/orate during a short rest, all allies gain an additional ${this.songOfRestDice} HP`, ''));\n        }\n        if (this.level > 2) {\n            ret.push(new Note(`Bard College`, this.collegeDesc(), ''));\n            ret.push(...this.collegeNotes());\n            ret.push(new Note('Expertise', 'Double your proficiency bonus on 2 skills', ''));\n        }\n        if (this.level > 3 && this.level < 8) {\n            ret.push(new Note('Bonus Ability Scores',  '2', ''));\n        }\n        if (this.level > 7 && this.level < 12) {\n            ret.push(new Note('Bonus Ability Scores',  '4', ''));\n        }\n        if (this.level > 11 && this.level < 16) {\n            ret.push(new Note('Bonus Ability Scores',  '6', ''));\n        }\n        if (this.level > 15 && this.level < 19) {\n            ret.push(new Note('Bonus Ability Scores',  '8', ''));\n        }\n        if (this.level > 18) {\n            ret.push(new Note('Bonus Ability Scores',  '10', ''));\n        }\n        if (this.level > 4) {\n            ret.push(new Note('Font of Inspiration', 'You regain all expended uses of Bardic Inspiration when you finish a short of long rest', ''));\n        }\n        if (this.level > 5) {\n            ret.push(new Note('Counter-charm', 'You can use music or words to disrupt mind-influencing effects as an action on your turn, during which you and any allies within 30 ft have the advantage on saving throws again fear or charm', ''));\n        }\n        if (this.level > 9) {\n            ret.push(new Note(`Magical Secrets`, `You can choose to add ${this.magicalSecrets} spells from any spell book to your know spells so long as it meets your caster level`, ''));\n        }\n        if (this.level > 19) {\n            ret.push(new Note('Superior Inspiration', 'When your roll initiative and have no Bardic Inspiration left you regain one', ''));\n        }\n        return ret;\n    }\n\n    get bardicInspirationDie(): number {\n        if (this.level < 5) {\n            return 6;\n        }\n        if (this.level > 10) {\n            return 8;\n        }\n        if (this.level < 15) {\n            return 10;\n        }\n        return 12;\n    }\n\n    get magicalSecrets(): number {\n        let ret = 0;\n        if (this.level > 5 && this.bardCollege === BardCollege.Lore) {\n            ret += 2;\n        }\n        if (this.level > 9) {\n            ret += 2;\n        }\n        if (this.level > 13) {\n            ret += 2;\n        }\n        if (this.level > 17) {\n            ret += 2\n        }\n        return ret;\n    }\n\n    private collegeDesc(): string {\n        if (!this.bardCollege) {\n            return 'Choose between the College of Lore or Valor';\n        }\n        return this.bardCollege;\n    }\n\n    private collegeNotes(): Note[] {\n        let ret = [];\n        switch (this.bardCollege) {\n            case BardCollege.Lore:\n                if (this.level > 2) {\n                    ret.push(new Note('Bonus Proficiencies', 'Become proficient in 3 additional skills', ''));\n                    ret.push(new Note('Cutting Words', 'When an enemy within 30 feet makes an attack roll you can use a Bardic Inspiration roll to remove that number of points from their roll', ''));\n                }\n                if (this.level > 5) {\n                    ret.push(new Note('Additional Magical Secrets', 'You gain 2 new spells from any spell book, these do not count against your known spells', ''));\n                }\n                if (this.level > 13) {\n                    ret.push(new Note('Peerless Skill', 'You can use Bardic Inspiration on yourself', ''));\n                }\n            case BardCollege.Valor:\n                if (this.level > 2) {\n                    ret.push(new Note('Bonus Proficiencies', 'Become proficient in Medium Armor, Shields, and Martial Weapons', ''))\n                }\n                if (this.level > 5) {\n                    ret.push(new Note('Extra Attack', 'If you attack on your action you can attack twice', ''));\n                }\n                if (this.level > 13) {\n                    ret.push(new Note('Battle Magic', 'When you use a bard spell on your action you can attack as a bonus action', ''));\n                }\n        }\n        return ret;\n    }\n\n    get songOfRestDice(): string {\n        if (this.level === 1) {\n            return 'no';\n        }\n        if (this.level < 9) {\n            return '1d6';\n        }\n        if (this.level < 13) {\n            return '1d8';\n        }\n        if (this.level < 17) {\n            return '1d10';\n        }\n        return '1d12'\n    }\n\n    cantripsKnown(): number {\n        if (this.level < 4) {\n            return 2;\n        }\n        if (this.level < 10) {\n            return 3;\n        }\n        return 4;\n    }\n\n    spellsKnown(): number {\n        if (this.level < 10) {\n            return this.level + 3;\n        }\n        switch (this.level) {\n            case 10:\n                return 14;\n            case 11:\n            case 12:\n                return 15;\n            case 13:\n                return 16;\n            case 14:\n                return 18;\n            case 15:\n            case 16:\n                return 19;\n            case 17:\n                return 20;\n            default:\n                return 22;\n        }\n    }\n\n    spellSlots(): number[] {\n        switch (this.level) {\n            case 1:\n                return [2,0,0,0,0,0,0,0,0];\n            case 2:\n                return [3,0,0,0,0,0,0,0,0];\n            case 3:\n                return [4,2,0,0,0,0,0,0,0];\n            case 4:\n                return [4,3,0,0,0,0,0,0,0];\n            case 5:\n                return [4,3,2,0,0,0,0,0,0];\n            case 6:\n                return [4,3,3,0,0,0,0,0,0];\n            case 7:\n                return [4,3,3,1,0,0,0,0,0];\n            case 8:\n                return [4,3,3,2,0,0,0,0,0];\n            case 9:\n                return [4,3,3,3,1,0,0,0,0];\n            case 10:\n                return [4,3,3,3,2,0,0,0,0];\n            case 11:\n            case 12:\n                return [4,3,3,3,2,1,0,0,0];\n            case 13:\n            case 14:\n                return [4,3,3,3,2,1,1,0,0];\n            case 15:\n            case 16:\n                return [4,3,3,3,2,1,1,1,0];\n            case 17:\n                return [4,3,3,3,2,1,1,1,1];\n            case 18:\n                return [4,3,3,3,3,1,1,1,1];\n            case 19:\n                return [4,3,3,3,3,2,1,1,1];\n            case 20:\n                return [4,3,3,3,3,2,2,1,1];\n        }\n    }\n\n    public static fromJson(json: any): BardDetails {\n        return new BardDetails(json.level, json.barbCollege, json.expertise);\n    }\n}\n\nexport enum BardCollege {\n    Lore = \"College of Lore\",\n    Valor = \"College of Valor\",\n}\n\nexport class ClericDetails {\n    constructor(\n        public level,\n        public domain: ClericDomain,\n    ) { }\n    public notes(): Note[] {\n        let ret = [\n            new Note('Spell Casting', \n                'Your religious pursuits have enable you to wield magic', \n                `Your god has betrothed you the ability to wield magic, this gift does not come unchecked, your available spells are restricted by the god you worship.`),\n            new Note('Divine Domain', this.domainDesc(), this.longDomainDesc()),\n        ];\n        if (this.level > 2) {\n            ret.push(\n                new Note(\n                    'Channel Divinity',\n                    `You can channel energy directly from your god ${this.channels} times before resting`, \n                    `Your connection to the divine is so strong that you are able to act as a conduit for your god's will.\n                    A certain number of times per day between long or short rests you can invoke a prayer that will impact the world around you.`\n                )\n            );\n            ret.push(...this.availableChannels());\n        }\n        if (this.level > 3 && this.level < 8) {\n            ret.push(new Note('Bonus Ability Scores', '2', ''));\n        }\n        if (this.level > 7 && this.level < 12) {\n            ret.push(new Note('Bonus Ability Scores', '4', ''));\n        }\n        if (this.level > 11 && this.level < 16) {\n            ret.push(new Note('Bonus Ability Scores', '6', ''));\n        }\n        if (this.level > 15 && this.level < 19) {\n            ret.push(new Note('Bonus Ability Scores', '8', ''));\n        }\n        if (this.level > 18) {\n            ret.push(new Note('Bonus Ability Scores', '10', ''));\n        }\n        return ret;\n    }\n\n    public get channels(): number {\n        if (this.level < 6) {\n            return 1;\n        }\n        if (this.level < 18) {\n            return 2;\n        }\n        return 3;\n    }\n\n    public availableChannels(): Note[] {\n        let ret = [\n            new Note('Channel Divinity - Turn Undead', 'Each undead that can hear you within 30 feet will spend the next 1 minute trying to get as far away from you as possible', ''),\n        ];\n        ret.push(...this.domainChannels());\n        \n        if (this.level > 4) {\n            ret.push(new Note('Channel Divinity - Destroy Undead', `Successfully turning undead with a challenge ranting of ${this.destroyUndeadCR()} or lower destroys that creature`, ''));\n        }\n        if (this.level > 9) {\n            ret.push(new Note('Channel Divinity - Divine Intervention', 'You can choose to call on your deity for extreme intervention, roll your percentile dice, if the value is below your cleric level your deity intervenes (DM chooses the nature of the intervention) on success you must wait 7 days before using again on failure you must rest', ''));\n        }\n        return ret;\n    }\n\n    public destroyUndeadCR(): number {\n        if (this.level < 8) {\n            return 0.5;\n        }\n        if (this.level < 11) {\n            return 1;\n        }\n        if (this.level < 14) {\n            return 2;\n        }\n        if (this.level < 16) {\n            return 3;\n        }\n        return 4;\n    }\n\n    public domainChannels(): Note[] {\n        let ret = [];\n        switch (this.domain) {\n            case ClericDomain.Knowledge:\n\n            break;\n            case ClericDomain.Life:\n\n            break;\n            case ClericDomain.Light:\n\n            break;\n            case ClericDomain.Nature:\n\n            break;\n            case ClericDomain.Tempest:\n\n            break;\n            case ClericDomain.Trickery:\n\n            break;\n            case ClericDomain.War:\n\n            break;\n        }\n        return ret;\n    }\n\n    public domainDesc(): string {\n        if (!this.domain) {\n            return 'Choose between Knowledge, Life, Light, Nature, Tempest, Trickery, or War';\n        }\n        return this.domain;\n    }\n    public longDomainDesc(): string {\n        switch (this.domain) {\n            case ClericDomain.Knowledge:\n            return 'The gods of knowledge-including Gilean, Aureon, \\\n                    and Thoth-value learning and understanding above all. \\\n                    Some teach that knowledge is to be gathered and \\\n                    shared in libraries and universities, or promote \\\n                    the practical knowledge of craft and invention. \\\n                    Some deities hoard knowledge and keep its secrets \\\n                    to themselves. And some promise their followers \\\n                    that they will gain tremendous power if they \\\n                    unlock the secrets of the multiverse. Followers \\\n                    of these gods study esoteric lore, collect old \\\n                    tomes, delve into the secret places of the earth, \\\n                    and learn all they can to Some gods of knowledge \\\n                    promote the practical knowledge of craft and invention, \\\n                    including smith deities like Gond, Reorx, Onatar, \\\n                    Moradin, Hephaestus, and Goibhniu.';\n            case ClericDomain.Life:\n                return 'The Life domain focuses on the vibrant positive energy-one of the fundamental \\\n                    forces of the universe-that sustains all ife. The gods of life promote vitality and \\\n                    health through healing the sick and wounded, caring for those in need, and driving away \\\n                    the forces of death and undeath. Almost any non-evil deity can claim influence over this \\\n                    domain, particularly agricultural deities (such as Chauntea, Arawai, and Demeter), sun gods \\\n                    (such as Lathander, Pelor, and Re-Horakhty), gods of healing or endurance (such as IlIllatcr, \\\n                    Mishakal, Apollo, and Diancecht), and gods of home and community (such as Hestia, Hathor, and Boldrei).'\n            \n            case ClericDomain.Light:\n                return 'Gods of light-including Helm, Lathander, Pholtus, Branchala, the Silver Flame, Belenus, Apollo, and Re-Horakty-\\\n                    promote the ideals of rebirth and renewal, truth, vigilance, adn beauty, often using the symbol of the sun. Some \\\n                    of these gods are portrayed as the sun itself or as a charioteer who guides the sun across the sky. Others \\\n                    are tireless sentinels whose eyes pierce every shadow and see through ever deception. Some are deities of beauty and \\\n                    artistry, who teach that art is a vehicle for the soul\\'s improvement. Clerics of a god of light are enlightened souls \\\n                    infused with radiance and the power of their god\\'s discerning vision, charged with chasing away lies and burning \\\n                    away darkness.';\n            case ClericDomain.Nature:\n                return 'Gods of nature are as varied as the natural world \\\n                    itself, from illscrutable gods of the deep forests (such \\\n                    as Silvanus, Obad-Hai, Chislev, Balinor, and Pan) to friendly \\\n                    deities associated with particular springs and groves (such as Eldath). \\\n                    Druids revere nature as a whole and might serve one of these deities, \\\n                    practicing mysterious rites and reciting all-but-forgotten prayers in \\\n                    their own secret tongue. But many of these gods have clerics as well, \\\n                    champions who take a more active role in advancing the interests of a \\\n                    particular nature god. These clerics might hunt the evil monstrosities \\\n                    that despoil the woodlands, bless the harvest of the faithful, or \\\n                    wither the crops of those who anger their gods.';\n            case ClericDomain.Tempest:\n                return 'Gods whose portfolios include the Tempest domain- including \\\n                    Talos, Umberlee, Kord, Zeboim, the Devourer, Zeus, and Thor-govern \\\n                    storms, sea, and sky. They include gods of lightning and thunder, gods \\\n                    of earthquakes, some tire gods, and certain gods of violence, physical \\\n                    strength, and courage. In some pantheons, a god of this domain rules over \\\n                    other deities and is known for swift justice delivered by thunderbolts. \\\n                    In the pantheons of seafaring people, gods of this domain are ocean \\\n                    deities and the patrons of sailors. Tempest gods send their clerics to \\\n                    inspire fear in the common folk, either to keep those folk on the path of \\\n                    righteousness or to encourage them to offer sacrifices of propitiation to \\\n                    ward off divine wrath.'\n            case ClericDomain.Trickery:\n                return 'Gods of trickery-such as Tymora, Beshaba, Olidammara, the Traveler, \\\n                    Garl Glittergold, and Loki-are mischief-makers and instigators who stand \\\n                    as a constant challenge to the accepted order among both gods and mortais. \\\n                    They\\'re patrons of thieves, scoundrels, gamblers, rebels, and liberators. \\\n                    Their clerics are a disruptive force in the world, puncturing pride, \\\n                    mocking tyrants, stealing from the rich, freeing captives, and \\\n                    flouting hollow traditions. They prefer subterfuge, pranks, deception, \\\n                    and theft rather than direct confrontation.';\n            case ClericDomain.War:\n                return 'War has many manifestations. It can make heroes of ordinary people. \\\n                    It can be desperate and horrific, with acts of cruelty and cowardice \\\n                    eclipsing instances of excellence and courage. In either case, \\\n                    the gods of war watch over warriors and reward them for their great \\\n                    deeds. The clerics of such gods excel in battle, inspiring others \\\n                    to fight the good fight or offering acts of violence as prayers. \\\n                    Gods of war include champions of honor and chivalry (such as \\\n                    Torm, Heironeous, and Kiri-Jolith) as well as gods of \\\n                    destruction and pillage (such as Erythnul, the Fury, \\\n                    Gruumsh, and Ares) and gods of conquest and domination \\\n                    (such as Bane, Hextor, and Maglubiyet). Other war gods \\\n                    (such as Tempus, Nike, and Nuada) take a more neutral stance, promoting war\\\n                    in all its manifestations and supporting warriors in any circumstance.'\n            default:\n                return '';\n        }\n    }\n\n    public domainNotes(): Note[] {\n        let ret = [];\n            switch (this.domain) {\n                case ClericDomain.Knowledge:\n                    ret.push(new Note('Knowledge Domain', 'You gain knowledge of 2 additional languages', ''));\n                    if (this.level > 7) {\n                        ret.push(new Note('Potent Spellcasting', 'Add your WIS modifier cantrip spell damage', ''));\n                    }\n                    if (this.level > 16) {\n                        ret.push(new Note('Visions of the Past', '', ''));\n                    }\n                break;\n            }\n        return ret;\n    }\n    public cantripsKnown(): number {\n        if (this.level < 4) {\n            return 3;\n        }\n        if (this.level < 10) {\n            return 4;\n        }\n        return 5;\n    }\n    spellSlots(): number[] {\n        switch (this.level) {\n            case 1:\n                return [2,0,0,0,0,0,0,0,0];\n            case 2:\n                return [3,0,0,0,0,0,0,0,0];\n            case 3:\n                return [4,2,0,0,0,0,0,0,0];\n            case 4:\n                return [4,3,0,0,0,0,0,0,0];\n            case 5:\n                return [4,3,2,0,0,0,0,0,0];\n            case 6:\n                return [4,3,3,0,0,0,0,0,0];\n            case 7:\n                return [4,3,3,1,0,0,0,0,0];\n            case 8:\n                return [4,3,3,2,0,0,0,0,0];\n            case 9:\n                return [4,3,3,3,1,0,0,0,0];\n            case 10:\n                return [4,3,3,3,2,0,0,0,0];\n            case 11:\n            case 12:\n                return [4,3,3,3,2,1,0,0,0];\n            case 13:\n            case 14:\n                return [4,3,3,3,2,1,1,0,0];\n            case 15:\n            case 16:\n                return [4,3,3,3,2,1,1,1,0];\n            case 17:\n                return [4,3,3,3,2,1,1,1,1];\n            case 18:\n                return [4,3,3,3,3,2,1,1,1];\n            case 19:\n                return [4,3,3,3,3,2,2,1,1];\n            case 20:\n\n        }\n    }\n    public static fromJson(json: any): ClericDetails {\n        return new ClericDetails(\n            json.level,\n            json.domain,\n            );\n    }\n}\n\nexport enum ClericDomain {\n    Knowledge ='Knowledge',\n    Life ='Life',\n    Light ='Light',\n    Nature ='Nature',\n    Tempest ='Tempest',\n    Trickery ='Trickery',\n    War ='War'\n}\n\nexport class DruidDetails {\n    constructor(\n        public level: number,\n        public circle: DruidCircle,\n    ) {}\n\n    public notes(): Note[] {\n        let ret = [\n            new Note('Spell Casting', \n                'Your relationship with nature has enable you to wield magic.', \n                `Your relationship with nature has reach a point that allows you to manipulate the world around in extraordinary ways.`)\n        ];\n        if (this.level > 1) {\n            new Note(\n                'Wild Shape',\n                `You can turn into a beast with a challenge rating ${this.maxWildShapeCR()} or less 2 times between rests for up to ${this.maxWildShapeHours()} hours`,\n                `You can turn into a beast with a challenge rating ${this.maxWildShapeCR()} or less 2 times between rests for up to ${this.maxWildShapeHours()} hours.\n                Transforming take an action.\n                ${this.wildShapeRestrictions()}\n                You take on the attributes and abilities of the beast except for the following.\n                - Alignment\n                - Personality\n                - Intelligence\n                - Wisdom\n                - Charisma\n                - You cannot use any legendary or lair actions of this beast.\n                You're are forced to revert if knocked unconscious.\n                While in beast form you cannot cast spells.\n                You can choose between the following three options for the items your are wearing.\n                - They drop where you transformed\n                - They merge into the beast\n                - The beast will be wearing them (note: the DM gets final vote on the practicality of this)`\n            )\n        }\n\n        return ret;\n    }\n\n    public maxWildShapeCR(): number {\n        if (this.level < 4) {\n            return 0.25;\n        }\n        if (this.level < 8) {\n            return 0.5;\n        }\n        return 1;\n    }\n\n    public maxWildShapeHours(): number {\n        return Math.floor(this.level / 2);\n    }\n\n    public wildShapeRestrictions(): string {\n        if (this.level < 4) {\n            return 'The beast cannot have a swim or flying speed';\n        }\n        if (this.level < 8) {\n            return 'The beast cannot have a flying speed'\n        }\n        return 'No additional restrictions on the beast'\n    }\n\n    public static fromJson(json: any): DruidDetails {\n        return new DruidDetails(\n            json.level,\n            json.circle,\n        );\n    }\n}\n\nexport enum DruidCircle {\n    Land = 'Land',\n    Moon = 'Moon',\n}\n\nexport class FighterDetails {\n    constructor(\n        public level: number,\n        public fightingStyle: FighterStyle,\n    ) { }\n\n    public notes(): Note[] {\n        let ret = [];\n\n        return ret;\n    }\n\n    public static fromJson(json: any) {\n        return new FighterDetails(\n            json.level,\n            json.fightingStyle,\n        );\n    }\n}\n\nexport enum FighterStyle {\n    Archery = 'Archery',\n    Defense = 'Defense',\n    Dueling = 'Dueling',\n    GreatWeapon = 'Great Weapon Fighting',\n    Protection = 'Protection',\n    TwoWeapon = 'Two Weapon Fighting',\n}\n\nexport class MonkDetails {\n    constructor(\n        public level: number,\n    ) { }\n\n    public notes(): Note[] {\n        let ret = [];\n\n        return ret;\n    }\n\n    public static fromJson(json: any): MonkDetails {\n        return new MonkDetails(\n            json.level,\n        );\n    }\n}\n\nexport class PaladinDetails {\n    constructor(\n        public level: number,\n        public fightingStyle?: PaladinStyle,\n        public oath?: PaladinOath,\n    ) { }\n\n    public notes(): Note[] {\n        let ret = [];\n\n        return ret;\n    }\n\n    public static fromJson(json: any): PaladinDetails {\n        return new PaladinDetails(\n            json.level,\n            json.fightingStyle,\n            json.oath,\n        );\n    }\n}\n\nexport enum PaladinStyle {\n    Defense = 'Defense',\n    Dueling = 'Dueling',\n    GreatWeapon = 'Great Weapon Fighting',\n    Protection = 'Protection',\n}\n\nexport enum PaladinOath {\n    Ancients = 'Ancients',\n    Devotion = 'Devotion',\n    Vengeance = 'Vengeance',\n}\n\nexport class RangerDetails {\n    constructor(\n        public level: number,\n        public favoredEnemy: RangerEnemy,\n    ) { }\n\n    public notes(): Note[] {\n        let ret = [];\n\n        return ret;\n    }\n\n    public static fromJson(json: any): RangerDetails {\n        return new RangerDetails(\n            json.level,\n            json.favoredEnemy,\n        )\n    }\n}\n\nexport enum RangerEnemy {\n    Aberration = 'Aberration',\n    Beast = 'Beast', \n    Celestial = 'Celestial', \n    Construct = 'Construct', \n    Dragon = 'Dragon',\n    Elemental = 'Elemental', \n    Fey = 'Fey', \n    Fiend = 'Fiend', \n    Giant = 'Giant', \n    Monstrosity = 'Monstrosity', \n    Ooze = 'Ooze', \n    Plant = 'Plant', \n    Undead = 'Undead',\n}\n\nexport class RogueDetails {\n    constructor(\n        public level: number = 1,\n        public archType: RoguishArchType,\n        public expertise: SkillKind[] = [],\n        public bonusAbilityScores: [AbilityKind, number][] = DEFAULT_BONUS_ABILITY_SCORES,\n    ) { }\n\n    notes(): Note[] {\n        let ret = [];\n        ret.push(new Note(`Expertise`, `Double ${this.expertiseNumber()} proficiency bonus`, ''));\n        ret.push(new Note(`Sneak Attack`, `Add ${this.sneakAttackDice()}d6 to DMG rolls with advantage or another aly within 5 feet of enemy`, ''));\n        ret.push(new Note(`Thieves Cant`, `Secret rogue slang language`, ''));\n        if (this.level > 2) {\n            ret.push(new Note(`Cunning Action`, `Bonus action of Dash, Disengage, or Hide on any combat turn`, ''));\n            ret.push(new Note(`Roguish ArchType`, `${this.archTypeDesc()}`, ''));\n            ret.push(...this.archTypeDetails());\n        }\n        if (this.level > 3 && this.level < 8) {\n            ret.push(new Note('Bonus Ability Scores', '2', ''));\n        }\n        if (this.level > 7 && this.level < 12) {\n            ret.push(new Note('Bonus Ability Scores', '4', ''));\n        }\n        if (this.level > 11 && this.level < 16) {\n            ret.push(new Note('Bonus Ability Scores', '6', ''));\n        }\n        if (this.level > 15 && this.level < 19) {\n            ret.push(new Note('Bonus Ability Scores', '8', ''));\n        }\n        if (this.level > 18) {\n            ret.push(new Note('Bonus Ability Scores:', '0', ''));\n        }\n        if (this.level > 4) {\n            ret.push(new Note('Uncanny Dodge', 'you can use your reaction to halve the attack\\'s damage against you (must be able to see attacker)', ''));\n        }\n        if (this.level > 6) {\n            ret.push(new Note('Evasion', 'AOEs that a dex save would halve damage, you take no damage on success and half if failed', ''));\n        }\n        if (this.level > 10) {\n            ret.push(new Note('Reliable Talent', 'On skills that include proficiency bonus any roll 9 or less is counted as 10', ''));\n        }\n        if (this.level > 13) {\n            ret.push(new Note('Blind Sense', 'If you can hear you are aware of any hidden or invisible creature within 10 feet', ''));\n        }\n        if (this.level > 17) {\n            ret.push(new Note('Elusive', 'No attack roll has advantage against you unless incapacitated', ''));\n        }\n        if (this.level > 19) {\n            ret.push(new Note('Stroke of Luck', 'Once a day you can convert any failed skill roll into a 20 or missed attack into a hit', ''));\n        }\n        return ret;\n    }\n\n    private expertiseNumber() {\n        if (this.level < 6) {\n            return 2;\n        }\n        return 4;\n    }\n\n    private archTypeDesc(): string {\n        if (this.archType) {\n            return this.archType\n        } else {\n            return 'Choose between Thief, Assassin, and Arcane Trickster';\n        }\n    }\n\n\n    public archTypeDetails(): string[] {\n        let ret = [];\n        switch (this.archType) {\n            case RoguishArchType.Thief:\n                if (this.level > 2) {\n                    ret.push('- Bonus Cunning Actions: Disarm Trap, Open Lock, Use Object');\n                    ret.push('- Second Story Work: Climb without movement penalty');\n                }\n                if (this.level > 8) {\n                    ret.push('- Supreme Sneak: Advantage on Stealth when moving 1/2 your speed');\n                }\n                if (this.level > 12) {\n                    ret.push('- Use Magic Device: Ignore all Class, Race and Level requirements when using a magic item');\n                }\n                if (this.level > 16) {\n                    ret.push('- Thief\\'s Reflexes: You take 2 turns on the first round of combat (Second turn at Initiative - 10, cannot use when surprised)');\n                }\n            break;\n            case RoguishArchType.Assassin:\n                if (this.level > 2) {\n                    ret.push('- Bonus Proficiencies: Poisoner\\'s and Disguise Kit');\n                    ret.push('- Assassinate: Advantage against enemies who have not taken a turn; surprise always crits');\n                }\n                if (this.level > 8) {\n                    ret.push('- Infiltration Expertise: You can unfailingly create false identities (see PH:97 for details)');\n                }\n                if (this.level > 12) {\n                    ret.push('- Imposter: Unerringly mimic another person\\'s speech, writing, and behavior (see PH:97 for details)');\n                }\n                if (this.level > 16) {\n                    ret.push('- Death Strike: Surprised Attacks must also make a CON save (8 + DEX + Prof), failed saves double damage');\n                }\n            break;\n            case RoguishArchType.ArcaneTrickster:\n                //TODO add this...\n            break;\n        }\n        return ret;\n    }\n\n    public sneakAttackDice(): number {\n        return Math.ceil(this.level / 2);\n    }\n\n    public allowedBonusAbilityScores(): number {\n        if (this.level < 4) {\n            return 0;\n        }\n        if (this.level < 8) {\n            return 2;\n        }\n        if (this.level < 10) {\n            return 4;\n        }\n        if (this.level < 12) {\n            return 6;\n        }\n        if (this.level < 16) {\n            return 8;\n        }\n        if (this.level < 19) {\n            return 10;\n        }\n        return 12;\n    }\n    public static fromJson(json: any): RogueDetails {\n        return new RogueDetails(\n            json.level,\n            json.archType,\n            json.expertise,\n            json.bonusAbilityScores,\n        );\n    }\n}\n\nexport class SorcererDetails {\n    constructor(\n        public level: number,\n        public metaMagic?: MetaMagic,\n        public origins?: SorcererOrigins,\n    ) { }\n\n    public notes(): Note[] {\n        let ret = [];\n\n        return ret;\n    }\n\n    public static fromJson(json: any): SorcererDetails {\n        return new SorcererDetails(\n            json.level,\n            json.metaMagic,\n            json.origins,\n        );\n    }\n}\n\nexport enum MetaMagic {\n    Carful = 'Carful',\n    Distant = 'Distant',\n    Empowered = 'Empowered',\n    Extended = 'Extended',\n    Heightened = 'Heightened',\n    Quickened = 'Quickened',\n    Subtle = 'Subtle',\n    Twinned = 'Twinned',\n}\n\nexport enum SorcererOrigins {\n    DraconicAncestor = 'DraconicAncestor',\n    Wild = 'Wild',\n}\n\nexport class WarlockDetails {\n    constructor(\n        public level: number,\n        public patron: OtherworldlyPatron,\n    ) { }\n\n    public notes(): Note[] {\n        let ret = [];\n\n        return ret;\n    }\n\n    public static fromJson(json: any): WarlockDetails {\n        return new WarlockDetails(\n            json.level,\n            json.patron,\n        );\n    }\n}\n\nexport enum OtherworldlyPatron {\n    ArchFey,\n    Fiend,\n    GreatOldOne\n}\n\nexport class WizardDetails {\n    constructor(\n        public level: number,\n        public arcaneTradition: ArcaneTradition\n    ) { }\n\n    public notes(): Note[] {\n        let ret = [];\n\n        return ret;\n    }\n    public static fromJson(json: any): WizardDetails {\n        return new WizardDetails(\n            json.level,\n            json.arcaneTradition,\n        );\n    }\n}\n\nexport enum ArcaneTradition {\n    Abjuration = 'Abjuration',\n    Conjuration = 'Conjuration',\n    Divination = 'Divination',\n    Enchantment = 'Enchantment',\n    Evocation = 'Evocation',\n    Illusion = 'Illusion',\n    Necromancy = 'Necromancy',\n    Transmutation = 'Transmutation',\n}\n\nexport enum RoguishArchType {\n    Thief = 'Thief',\n    Assassin = 'Assassin',\n    ArcaneTrickster = 'Arcane Trickster',\n}","import { Database } from './data';\nimport { RoguishArchType, RogueDetails } from '../models/classDetails';\nimport { SkillKind, Skills } from '../models/skills';\nimport { ExpendableItem, MagicItem, Wealth, Weapon, Character, Alignment, Height, Armor, LightArmor, ArmorWeight, WeaponType, WeaponKind, WeaponDamageKind, WeaponWeight, WeaponHandedness, NormalLanguage } from '../models/character';\nimport { Range } from '../models/range'\nimport { AbilityScores, AbilityScore, AbilityKind } from '../models/abilityScore';\nimport { RaceKind, Race } from '../models/race';\nimport { ClassKind, Class } from '../models/class';\nimport { Background, BackgroundKind } from '../models/background';\nimport { MiscTools, GamingSet } from '../models/tools';\n\nexport async function seed(db: Database) { \n    let spellBooks = await fetch(window.location.href + 'spellBook.json')\n        .then(res => res.text())\n        .then(text => JSON.parse(text));\n\n    console.log('seeding characters');\n    await db.characters.bulkPut(seedCharacters());\n    console.log('seeding bard spells');\n    await db.clericSpells.bulkPut(spellBooks.bard);\n    console.log('seeding cleric spells');\n    await db.clericSpells.bulkPut(spellBooks.cleric);\n    console.log('seeding druid spells');\n    await db.druidSpells.bulkPut(spellBooks.druid);\n    console.log('seeding paladin spells');\n    await db.paladinSpells.bulkPut(spellBooks.paladin);\n    console.log('seeding ranger spells');\n    await db.rangerSpells.bulkPut(spellBooks.ranger);\n    console.log('seeding rogue spells');\n    await db.rogueSpells.bulkPut(spellBooks.rogue);\n    console.log('seeding sorcerer spells');\n    await db.sorcererSpells.bulkPut(spellBooks.sorcerer);\n    console.log('seeding warlock spells');\n    await db.warlockSpells.bulkPut(spellBooks.warlock);\n    console.log('seeding wizard spells');\n    await db.wizardSpells.bulkPut(spellBooks.wizard);\n    console.log('seeding seeds')\n    await db.seeds.put({when: new Date().toISOString()});\n}\n\nfunction seedCharacters(): Character[] {\n    let d = new Character('Daggers', \n                new AbilityScores([\n                    new AbilityScore(8, AbilityKind.Strength),\n                    new AbilityScore(8+7, AbilityKind.Dexterity),\n                    new AbilityScore(8, AbilityKind.Constitution),\n                    new AbilityScore(8, AbilityKind.Intelligence),\n                    new AbilityScore(8+1, AbilityKind.Wisdom),\n                    new AbilityScore(8+7, AbilityKind.Charisma),\n                ]), \n                new Race(RaceKind.Human), \n                new Class(ClassKind.Rogue, 4, \n                    [\n                    [AbilityKind.Strength, 0],\n                    [AbilityKind.Dexterity, 2],\n                    [AbilityKind.Constitution, 0],\n                    [AbilityKind.Intelligence, 0],\n                    [AbilityKind.Wisdom, 0],\n                    [AbilityKind.Charisma, 0],\n                    ],\n                    [SkillKind.Acrobatics, SkillKind.SleightOfHand, SkillKind.Persuasion, SkillKind.Perception,]\n                ),\n                new Background(BackgroundKind.Criminal,\n                    [SkillKind.Stealth, SkillKind.Deception],\n                    [],\n                    [MiscTools.Thieves, GamingSet.Dragonchess]),\n                Alignment.TrueNeutral(),\n                5116,\n                new Height(5, 8),\n                160,\n                'Blue',\n                0,\n                new Armor(LightArmor.Leather, ArmorWeight.Light, 2),\n                null,\n                new Skills(),\n                [new Weapon('Dagger', \n                            WeaponType.Melee, \n                            WeaponKind.Simple, \n                            WeaponDamageKind.Piercing, \n                            WeaponWeight.Light, \n                            WeaponHandedness.One, \n                            [1, 4], \n                            new Range(5), \n                            1, \n                            new Range(20, 60), \n                            false, \n                            true),\n                new Weapon('Short Bow', \n                            WeaponType.Range, \n                            WeaponKind.Simple, \n                            WeaponDamageKind.Piercing, \n                            WeaponWeight.Light, \n                            WeaponHandedness.Two, \n                            [1,6], \n                            new Range(80, 320), \n                            1, \n                            null, \n                            true, \n                            false),\n                ],\n                new Wealth(0, 0, 0, 3450, 0),\n                [NormalLanguage.Common],\n                [],\n                0,\n                0,\n                [\n                    new MagicItem('Cloak of Elvenkind', 'Hood up: Preception checks to see you have disadvantage, stealth checks have advantage'),\n                    new MagicItem('Goggles of Night', 'Darkvision (60 feet)'),\n                ],\n                [new ExpendableItem(1, 'Health Pot.', 'heal 2d4+2 Damage')],\n    );\n    let details = d.characterClass.classDetails as RogueDetails;\n    details.archType = RoguishArchType.Thief;\n    details.expertise.push(SkillKind.Deception, SkillKind.Stealth);\n    return [d];\n} ","export class Note {\n    constructor(\n        public name: string,\n        public shortDesc: string,\n        public longDesc: string,\n    ) { }\n\n    toString(): string {\n        return `${this.name}: ${this.shortDesc}`;\n    }\n}","import { Range } from \"./range\";\nimport { AbilityKind } from \"./abilityScore\";\n\nexport class Spells {\n    constructor(\n        public spells: Spell[] = [],\n    ) { }\n\n    map<U>(cb: (s: Spell) => U): U[] {\n        return this.spells.map(cb);\n    }\n\n    public static fromJson(json: any): Spells {\n        return new Spells(\n            json.spells.map(Spell.fromJson),\n        );\n    }\n}\nexport enum SpellName {\n    AcidSplash = \"Acid Splash\",\n    BladeWard = \"Blade Ward\",\n    ChillTouch = \"Chill Touch\",\n    DancingLights = \"Dancing Lights\",\n    Druidcraft = \"Druidcraft\",\n    EldritchBlast = \"Eldritch Blast\",\n    FireBolt = \"Fire Bolt\",\n    Friends = \"Friends\",\n    Guidance = \"Guidance\",\n    Light = \"Light\",\n    MageHand = \"Mage Hand\",\n    Mending = \"Mending\",\n    Message = \"Message\",\n    MinorIllusion = \"Minor Illusion\",\n    PoisonSpray = \"Poison Spray\",\n    Prestidigitation = \"Prestidigitation\",\n    ProduceFlame = \"Produce Flame\",\n    RayOfFrost = \"Ray of Frost\",\n    Resistance = \"Resistance\",\n    SacredFlame = \"Sacred Flame\",\n    Shillelagh = \"Shillelagh\",\n    ShockingGrasp = \"Shocking Grasp\",\n    SpareTheDying = \"Spare the Dying\",\n    Thaumaturgy = \"Thaumaturgy\",\n    ThornWhip = \"Thorn Whip\",\n    TrueStrike = \"True Strike\",\n    ViciousMockery = \"Vicious Mockery\",\n    Alarm = \"Alarm\",\n    AnimalFriendship = \"Animal Friendship\",\n    ArmorOfAgathys = \"Armor of Agathys\",\n    ArmsOfHadar = \"Arms of Hadar\",\n    Bane = \"Bane\",\n    Bless = \"Bless\",\n    BurningHands = \"Burning Hands\",\n    CharmPerson = \"Charm Person\",\n    ChromaticOrb = \"Chromatic Orb\",\n    ColorSpray = \"Color Spray\",\n    Command = \"Command\",\n    CompelledDuel = \"Compelled Duel\",\n    ComprehendLanguages = \"Comprehend Languages\",\n    CreateOrDestroyWater = \"Create or Destroy Water\",\n    CureWounds = \"Cure Wounds\",\n    DetectEvilAndGood = \"Detect Evil and Good\",\n    DetectMagic = \"Detect Magic\",\n    DetectPoisonAndDisease = \"Detect Poison and Disease\",\n    DisguiseSelf = \"Disguise Self\",\n    DissonantWhispers = \"Dissonant Whispers\",\n    DivineFavor = \"Divine Favor\",\n    EnsnaringStrike = \"Ensnaring Strike\",\n    Entangle = \"Entangle\",\n    ExpeditiousRetreat = \"Expeditious Retreat\",\n    FaerieFire = \"Faerie Fire\",\n    FalseLife = \"False Life\",\n    FeatherFall = \"Feather Fall\",\n    FindFamiliar = \"Find Familiar\",\n    FogCloud = \"Fog Cloud\",\n    Goodberry = \"Goodberry\",\n    Grease = \"Grease\",\n    GuidingBolt = \"Guiding Bolt\",\n    HailOfThorns = \"Hail of Thorns\",\n    HealingWord = \"Healing Word\",\n    HellishRebuke = \"Hellish Rebuke\",\n    Heroism = \"Heroism\",\n    Hex = \"Hex\",\n    HuntersMark = \"Hunter's Mark\",\n    Identify = \"Identify\",\n    IllusoryScript = \"Illusory Script\",\n    InflictWounds = \"Inflict Wounds\",\n    Jump = \"Jump\",\n    Longstrider = \"Longstrider\",\n    MageArmor = \"Mage Armor\",\n    MagicMissile = \"Magic Missile\",\n    ProtectionFromEvilAndGood = \"Protection from Evil and Good\",\n    PurifyFoodAndDrink = \"Purify Food and Drink\",\n    RayOfSickness = \"Ray of Sickness\",\n    Sanctuary = \"Sanctuary\",\n    SearingSmite = \"Searing Smite\",\n    Shield = \"Shield\",\n    ShieldOfFaith = \"Shield of Faith\",\n    SilentImage = \"Silent Image\",\n    Sleep = \"Sleep\",\n    SpeakWithAnimals = \"Speak with Animals\",\n    TashasHideousLaughter = \"Tasha's Hideous Laughter\",\n    TensersFloatingDisk = \"Tenser's Floating Disk\",\n    ThunderousSmite = \"Thunderous Smite\",\n    Thunderwave = \"Thunderwave\",\n    UnseenServant = \"Unseen Servant\",\n    WitchBolt = \"Witch Bolt\",\n    WrathfulSmite = \"Wrathful Smite\",\n    Aid = \"Aid\",\n    AlterSelf = \"Alter Self\",\n    AnimalMessenger = \"Animal Messenger\",\n    ArcaneLock = \"Arcane Lock\",\n    Augury = \"Augury\",\n    Barkskin = \"Barkskin\",\n    BeastSense = \"Beast Sense\",\n    BlindnessDeafness = \"Blindness/Deafness\",\n    Blur = \"Blur\",\n    BrandingSmite = \"Branding Smite\",\n    CalmEmotions = \"Calm Emotions\",\n    CloudOfDaggers = \"Cloud of Daggers\",\n    ContinualFlame = \"Continual Flame\",\n    CordonOfArrows = \"Cordon of Arrows\",\n    CrownOfMadness = \"Crown of Madness\",\n    Darkness = \"Darkness\",\n    Darkvision = \"Darkvision\",\n    DetectThoughts = \"Detect Thoughts\",\n    EnhanceAbility = \"Enhance Ability\",\n    EnlargeReduce = \"Enlarge/Reduce\",\n    Enthrall = \"Enthrall\",\n    FindSteed = \"Find Steed\",\n    FindTraps = \"Find Traps\",\n    FlameBlade = \"Flame Blade\",\n    FlamingSphere = \"Flaming Sphere\",\n    GentleRepose = \"Gentle Repose\",\n    GustOfWind = \"Gust of Wind\",\n    HeatMetal = \"Heat Metal\",\n    HoldPerson = \"Hold Person\",\n    Invisibility = \"Invisibility\",\n    Knock = \"Knock\",\n    LesserRestoration = \"Lesser Restoration\",\n    Levitate = \"Levitate\",\n    LocateAnimalsOrPlants = \"Locate Animals or Plants\",\n    LocateObject = \"Locate Object\",\n    MagicMouth = \"Magic Mouth\",\n    MagicWeapon = \"Magic Weapon\",\n    MelfsAcidArrow = \"Melf's Acid Arrow\",\n    MirrorImage = \"Mirror Image\",\n    MistyStep = \"Misty Step\",\n    Moonbeam = \"Moonbeam\",\n    NystulsMagicAura = \"Nystul's Magic Aura\",\n    PassWithoutTrace = \"Pass Without Trace\",\n    PhantasmalForce = \"Phantasmal Force\",\n    PrayerOfHealing = \"Prayer of Healing\",\n    ProtectionFromPoison = \"Protection from Poison\",\n    RayOfEnfeeblement = \"Ray of Enfeeblement\",\n    RopeTrick = \"Rope Trick\",\n    ScorchingRay = \"Scorching Ray\",\n    SeeInvisibility = \"See Invisibility\",\n    Shatter = \"Shatter\",\n    Silence = \"Silence\",\n    SpiderClimb = \"Spider Climb\",\n    SpikeGrowth = \"Spike Growth\",\n    SpiritualWeapon = \"Spiritual Weapon\",\n    Suggestion = \"Suggestion\",\n    WardingBond = \"Warding Bond\",\n    Web = \"Web\",\n    ZoneOfTruth = \"Zone of Truth\",\n    AnimateDead = \"Animate Dead\",\n    AuraOfVitality = \"Aura of Vitality\",\n    BeaconOfHope = \"Beacon of Hope\",\n    BestowCurse = \"Bestow Curse\",\n    BlindingSmite = \"Blinding Smite\",\n    Blink = \"Blink\",\n    CallLightning = \"Call Lightning\",\n    Clairvoyance = \"Clairvoyance\",\n    ConjureAnimals = \"Conjure Animals\",\n    ConjureBarrage = \"Conjure Barrage\",\n    Counterspell = \"Counterspell\",\n    CreateFoodAndWater = \"Create Food and Water\",\n    CrusadersMantle = \"Crusader's Mantle\",\n    Daylight = \"Daylight\",\n    DispelMagic = \"Dispel Magic\",\n    ElementalWeapon = \"Elemental Weapon\",\n    Fear = \"Fear\",\n    FeignDeath = \"Feign Death\",\n    Fireball = \"Fireball\",\n    Fly = \"Fly\",\n    GaseousForm = \"Gaseous Form\",\n    GlyphOfWarding = \"Glyph of Warding\",\n    Haste = \"Haste\",\n    HungerOfHadar = \"Hunger of Hadar\",\n    HypnoticPattern = \"Hypnotic Pattern\",\n    LeomundsTinyHut = \"Leomund's Tiny Hut\",\n    LightningArrow = \"Lightning Arrow\",\n    LightningBolt = \"Lightning Bolt\",\n    MagicCircle = \"Magic Circle\",\n    MajorImage = \"Major Image\",\n    MassHealingWord = \"Mass Healing Word\",\n    MeldIntoStone = \"Meld into Stone\",\n    Nondetection = \"Nondetection\",\n    PhantomSteed = \"Phantom Steed\",\n    PlantGrowth = \"Plant Growth\",\n    ProtectionFromEnergy = \"Protection from Energy\",\n    RemoveCurse = \"Remove Curse\",\n    Revivify = \"Revivify\",\n    Sending = \"Sending\",\n    SleetStorm = \"Sleet Storm\",\n    Slow = \"Slow\",\n    SpeakWithDead = \"Speak with Dead\",\n    SpeakWithPlants = \"Speak with Plants\",\n    SpiritGuardians = \"Spirit Guardians\",\n    StinkingCloud = \"Stinking Cloud\",\n    Tongues = \"Tongues\",\n    VampiricTouch = \"Vampiric Touch\",\n    WaterBreathing = \"Water Breathing\",\n    WaterWalk = \"Water Walk\",\n    WindWall = \"Wind Wall\",\n    ArcaneEye = \"Arcane Eye\",\n    AuraOfLife = \"Aura of Life\",\n    AuraOfPurity = \"Aura of Purity\",\n    Banishment = \"Banishment\",\n    Blight = \"Blight\",\n    Compulsion = \"Compulsion\",\n    Confusion = \"Confusion\",\n    ConjureMinorElementals = \"Conjure Minor Elementals\",\n    ConjureWoodlandBeings = \"Conjure Woodland Beings\",\n    ControlWater = \"Control Water\",\n    DeathWard = \"Death Ward\",\n    DimensionDoor = \"Dimension Door\",\n    Divination = \"Divination\",\n    DominateBeast = \"Dominate Beast\",\n    EvardsBlackTentacles = \"Evard's Black Tentacles\",\n    Fabricate = \"Fabricate\",\n    FireShield = \"Fire Shield\",\n    FreedomOfMovement = \"Freedom of Movement\",\n    GiantInsect = \"Giant Insect\",\n    GraspingVine = \"Grasping Vine\",\n    GreaterInvisibility = \"Greater Invisibility\",\n    GuardianOfFaith = \"Guardian of Faith\",\n    HallucinatoryTerrain = \"Hallucinatory Terrain\",\n    IceStorm = \"Ice Storm\",\n    LeomundsSecretChest = \"Leomund's Secret Chest\",\n    LocateCreature = \"Locate Creature\",\n    MordenkainensFaithfulHound = \"Mordenkainen's Faithful Hound\",\n    MordenkainensPrivateSanctum = \"Mordenkainen's Private Sanctum\",\n    OtilukesResilientSphere = \"Otiluke's Resilient Sphere\",\n    PhantasmalKiller = \"Phantasmal Killer\",\n    Polymorph = \"Polymorph\",\n    StaggeringSmite = \"Staggering Smite\",\n    StoneShape = \"Stone Shape\",\n    Stoneskin = \"Stoneskin\",\n    WallOfFire = \"Wall of Fire\",\n    AnimateObjects = \"Animate Objects\",\n    AntilifeShell = \"Antilife Shell\",\n    Awaken = \"Awaken\",\n    BanishingSmite = \"Banishing Smite\",\n    BigbysHand = \"Bigby's Hand\",\n    CircleOfPower = \"Circle of Power\",\n    Cloudkill = \"Cloudkill\",\n    Commune = \"Commune\",\n    CommuneWithNature = \"Commune with Nature\",\n    ConeOfCold = \"Cone of Cold\",\n    ConjureElemental = \"Conjure Elemental\",\n    ConjureVolley = \"Conjure Volley\",\n    ContactOtherPlane = \"Contact Other Plane\",\n    Contagion = \"Contagion\",\n    Creation = \"Creation\",\n    DestructiveWave = \"Destructive Wave\",\n    DispelEvilAndGood = \"Dispel Evil and Good\",\n    DominatePerson = \"Dominate Person\",\n    Dream = \"Dream\",\n    FlameStrike = \"Flame Strike\",\n    Geas = \"Geas\",\n    GreaterRestoration = \"Greater Restoration\",\n    Hallow = \"Hallow\",\n    HoldMonster = \"Hold Monster\",\n    InsectPlague = \"Insect Plague\",\n    LegendLore = \"Legend Lore\",\n    MassCureWounds = \"Mass Cure Wounds\",\n    Mislead = \"Mislead\",\n    ModifyMemory = \"Modify Memory\",\n    Passwall = \"Passwall\",\n    PlanarBinding = \"Planar Binding\",\n    RaiseDead = \"Raise Dead\",\n    RarysTelepathicBond = \"Rary's Telepathic Bond\",\n    Reincarnate = \"Reincarnate\",\n    Scrying = \"Scrying\",\n    Seeming = \"Seeming\",\n    SwiftQuiver = \"Swift Quiver\",\n    Telekinesis = \"Telekinesis\",\n    TeleportationCircle = \"Teleportation Circle\",\n    TreeStride = \"Tree Stride\",\n    WallOfForce = \"Wall of Force\",\n    WallOfStone = \"Wall of Stone\",\n    ArcaneGate = \"Arcane Gate\",\n    BladeBarrier = \"Blade Barrier\",\n    ChainLightning = \"Chain Lightning\",\n    CircleOfDeath = \"Circle of Death\",\n    ConjureFey = \"Conjure Fey\",\n    Contingency = \"Contingency\",\n    CreateUndead = \"Create Undead\",\n    Disintegrate = \"Disintegrate\",\n    DrawmijsInstantSummon = \"Drawmij's Instant Summon\",\n    Eyebite = \"Eyebite\",\n    FindThePath = \"Find the Path\",\n    FleshToStone = \"Flesh to Stone\",\n    Forbiddance = \"Forbiddance\",\n    GlobeOfInvulnerability = \"Globe of Invulnerability\",\n    GuardsAndWards = \"Guards and Wards\",\n    Harm = \"Harm\",\n    Heal = \"Heal\",\n    HeroesFeast = \"Heroes' Feast\",\n    MagicJar = \"Magic Jar\",\n    MassSuggestion = \"Mass Suggestion\",\n    MoveEarth = \"Move Earth\",\n    OtilukesFreezingSphere = \"Otiluke's Freezing Sphere\",\n    OttosIrresistibleDance = \"Otto's Irresistible Dance\",\n    PlanarAlly = \"Planar Ally\",\n    ProgrammedIllusion = \"Programmed Illusion\",\n    Sunbeam = \"Sunbeam\",\n    TransportViaPlants = \"Transport via Plants\",\n    TrueSeeing = \"True Seeing\",\n    WallOfIce = \"Wall of Ice\",\n    WallOfThorns = \"Wall of Thorns\",\n    WindWalk = \"Wind Walk\",\n    WordOfRecall = \"Word of Recall\",\n    ConjureCelestial = \"Conjure Celestial\",\n    DelayedBlastFireball = \"Delayed Blast Fireball\",\n    DivineWord = \"Divine Word\",\n    Etherealness = \"Etherealness\",\n    FingerOfDeath = \"Finger of Death\",\n    FireStorm = \"Fire Storm\",\n    Forcecage = \"Forcecage\",\n    MirageArcane = \"Mirage Arcane\",\n    MordenkainensMagnificentMansion = \"Mordenkainen's Magnificent Mansion\",\n    MordenkainensSword = \"Mordenkainen's Sword\",\n    PlaneShift = \"Plane Shift\",\n    PrismaticSpray = \"Prismatic Spray\",\n    ProjectImage = \"Project Image\",\n    Regenerate = \"Regenerate\",\n    Resurrection = \"Resurrection\",\n    ReverseGravity = \"Reverse Gravity\",\n    Sequester = \"Sequester\",\n    Simulacrum = \"Simulacrum\",\n    Symbol = \"Symbol\",\n    Teleport = \"Teleport\",\n    AnimalShapes = \"Animal Shapes\",\n    AntimagicField = \"Antimagic Field\",\n    AntipathySympathy = \"Antipathy/Sympathy\",\n    Clone = \"Clone\",\n    ControlWeather = \"Control Weather\",\n    Demiplane = \"Demiplane\",\n    DominateMonster = \"Dominate Monster\",\n    Earthquake = \"Earthquake\",\n    Feeblemind = \"Feeblemind\",\n    Glibness = \"Glibness\",\n    HolyAura = \"Holy Aura\",\n    IncendiaryCloud = \"Incendiary Cloud\",\n    Maze = \"Maze\",\n    MindBlank = \"Mind Blank\",\n    PowerWordStun = \"Power Word Stun\",\n    Sunburst = \"Sunburst\",\n    Telepathy = \"Telepathy\",\n    Tsunami = \"Tsunami\",\n    AstralProjection = \"Astral Projection\",\n    Foresight = \"Foresight\",\n    Gate = \"Gate\",\n    Imprisonment = \"Imprisonment\",\n    MassHeal = \"Mass Heal\",\n    MeteorSwarm = \"Meteor Swarm\",\n    PowerWordHeal = \"Power Word Heal\",\n    PowerWordKill = \"Power Word Kill\",\n    PrismaticWall = \"Prismatic Wall\",\n    Shapechange = \"Shapechange\",\n    StormOfVengeance = \"Storm of Vengeance\",\n    TimeStop = \"Time Stop\",\n    TruePolymorph = \"True Polymorph\",\n    TrueResurrection = \"True Resurrection\",\n    Weird = \"Weird\",\n    Wish = \"Wish\",\n}\n\nexport class Spell {\n    public id?: number;\n    constructor(\n        public name: SpellName,\n        public level: number,\n        public verbalRequirement: boolean,\n        public somaticRequirement: boolean,\n        public materialRequirement: string[],\n        public castingTime: string,\n        public desc: string,\n        public duration?: string,\n        public range?: Range,\n        public save?: SpellSave,\n    ) { }\n\n    public static fromJson(json: any): Spell {\n        let ret = new Spell(\n            json.name,\n            json.level,\n            json.verbalRequirement,\n            json.somaticRequirement,\n            json.materialRequirement,\n            json.castingTime,\n            json.desc,\n            json.duration,\n            json.range,\n            SpellSave.fromJson(json.save),\n        );\n        ret.id = json.id;\n        return ret;\n    }\n}\n\nexport class SpellSave {\n    constructor(\n        public ability: AbilityKind,\n        public toBeat: number,\n        public ifBeaten: string,\n        public ifLost: string,\n    ) { }\n\n    public static fromJson(json: any): SpellSave {\n        if (!json) return;\n        return new SpellSave(\n            json.ability,\n            json.toBeat,\n            json.ifBeaten,\n            json.ifLost,\n        )\n    }\n}\n","import * as React from 'react';\ninterface IIconProps {\n    width?: number | string;\n    height?: number | string;\n    fill?: string;\n    background?: string;\n}\n\nexport class Barbarian extends React.Component<IIconProps, {}> {\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={this.props.height || '100%'} width={this.props.width || '100%'}>\n                <path d=\"M0 0h512v512H0z\" fill={this.props.background || 'transparent'} ></path>\n                <g>\n                    <path fill={this.props.fill || 'rgba(0,0,0,0.5)'} d=\"M284.736 29.215c-2.334-.015-4.68.001-7.035.049-32.975.664-67.786 7.496-98.318 21.232-34.895 15.698-64.057 40.163-79.979 74.672-15 32.512-18.36 74.591-2.508 128.285a201.433 201.433 0 0 1 13.502-5.59c-9.866-43.961-5.617-80.245 8.301-109.01 15.464-31.958 42.464-54.15 72.95-68.302 30.484-14.153 64.583-20.494 95.738-20.95 1.947-.028 3.882-.035 5.804-.019 22.847.186 43.814 3.494 60.614 9.836 7.12-3.36 13.61-6.894 18.914-10.852-20.447-11.111-49.38-18.154-81.016-19.212a257.951 257.951 0 0 0-6.967-.14zm8.293 38.373c-1.78-.019-3.574-.015-5.379.012-28.88.421-60.75 6.43-88.421 19.277-27.671 12.847-51.013 32.303-64.327 59.818-11.852 24.495-16.052 55.773-7.242 95.895 12.372-2.904 23.747-3.494 33.565-1.195 9.93 2.325 18.916 9.147 21.732 19.312.306 1.106.52 2.235.701 3.373l102.203-102.203c-11.857-18.99-15.828-34.784-12.218-48.416 4.005-15.125 16.44-24.638 30.048-31.797 7.436-3.912 15.487-7.412 23.547-10.8-10.343-1.974-21.956-3.15-34.209-3.276zm83.057 68.326l-48.508 9.701-34.242 34.242h38.807v38.805l34.242-34.242zm87.348 3.367c-3.956 5.301-7.489 11.788-10.848 18.905 6.876 18.213 10.179 41.335 9.812 66.427-.455 31.155-6.796 65.254-20.949 95.739-14.153 30.485-36.344 57.485-68.303 72.949-28.764 13.918-65.048 18.167-109.01 8.3a201.436 201.436 0 0 1-5.59 13.503c53.695 15.852 95.774 12.492 128.286-2.508 34.51-15.922 58.974-45.084 74.672-79.979 15.698-34.894 22.379-75.376 21.142-112.32-1.058-31.637-8.1-60.569-19.212-81.016zm-22.297 45.48c-3.39 8.06-6.89 16.112-10.801 23.548-7.159 13.608-16.672 26.043-31.797 30.048-13.632 3.61-29.425-.361-48.416-12.218L247.92 328.342c1.138.181 2.267.395 3.373.701 10.165 2.816 16.987 11.802 19.312 21.732 2.3 9.818 1.709 21.193-1.195 33.565 40.122 8.81 71.4 4.61 95.895-7.242 27.515-13.314 46.971-36.656 59.818-64.327 12.847-27.67 18.856-59.542 19.277-88.421.208-14.228-1.004-27.742-3.263-39.588zm-160.528 13.096v33.534h33.534v-33.534zm-18 12.727l-34.244 34.244-9.699 48.506 48.506-9.7 34.244-34.243h-38.807zm-57.19 57.19l-37.034 37.035 38.806 38.806 37.036-37.035-48.508 9.701zm-49.76 49.761l-25.925 25.922 38.809 38.809 25.922-25.924zm-38.651 38.65L16 457.194V496h38.807l101.007-101.008z\" ></path>\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport class Bard extends React.Component<IIconProps, {}> {\n    render() {\n        return (\n            <svg width={this.props.width} height={this.props.height} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n            <path d=\"M0 0h512v512H0z\" fill={this.props.background || 'transparent'} ></path>\n            <g transform=\"translate(0,0)\">\n                <path fill={this.props.fill || 'rgba(0,0,0,0.5)'} d=\"M108.656 35.063c-15.053.138-33.413 5.378-46.97 15.812-10.75 8.276-18.777 19.27-21.186 34.438.21-.126.414-.252.625-.376-.843 2.816-1.313 5.786-1.313 8.876 0 17.087 13.85 30.937 30.938 30.937 14.293 0 26.324-9.705 29.875-22.875.028-.115.067-.23.094-.344.48-2.082.768-4.042.905-5.843.025-.327.017-.65.03-.968.005-.126.03-.25.032-.376.007-.182-.002-.353 0-.53 0-1.526-.098-3.036-.312-4.5-1.367-8.018-6.778-12.156-12.594-13.72-8.527-2.293-19.055.637-23.75 18.156l-.468-.125C62.04 74.12 72.213 63.885 83.94 60.78c2.476-.654 5.053-1.005 7.656-.968 9.072.13 18.445 4.88 24.562 17.126.087.173.165.355.25.53 5.208 15.233 2.11 43.32-3.344 57.626-7.288 18.753-22.376 40.504-47.687 65.5C6.99 258.252 4 329.824 39.97 388.814 75.936 447.8 152.13 493.56 254.437 493.56c102.306 0 178.47-45.76 214.437-104.75 35.882-58.848 32.982-130.225-25-187.812l-.406-.406h-.033c-25.31-24.996-40.367-46.747-47.656-65.5-5.23-16.453-9.09-42.988-2.655-57.625.058-.128.128-.25.188-.376.025-.05.037-.106.062-.156 6.117-12.246 15.49-16.996 24.563-17.126 2.602-.037 5.18.314 7.656.97 11.724 3.102 21.87 13.337 19.344 32.843l-.438.125c-4.694-17.52-15.222-20.45-23.75-18.156-4.41 1.185-8.603 3.85-10.97 8.562-.012.04-.017.085-.03.125-.975 3.007-1.5 6.203-1.5 9.532 0 17.088 13.85 30.938 30.938 30.938 17.087 0 30.937-13.85 30.937-30.938 0-4.355-.907-8.49-2.53-12.25-3.058-13.244-10.598-23.112-20.44-30.687-14.458-11.13-34.39-16.363-49.936-15.78-13.378.5-24.85 4.108-33.22 10.53-3.412 2.617-6.383 5.702-8.844 9.375-69.455 35.508-138.89 38.75-208.344-7.75-.642-.557-1.29-1.105-1.968-1.625-8.37-6.422-19.843-10.03-33.22-10.53-.97-.037-1.964-.042-2.968-.032zm52.78 53.124c6.338 2.648 12.666 4.987 19 7.032v313.06c-30.732-8.258-57.886-22.005-77.374-41.31-17.1-16.94-28.077-38.626-28.906-63.595-.828-24.97 8.274-52.702 28.97-82.625 41.323-59.752 57.163-103.6 58.31-132.563zm186.033 1.407c1.6 28.97 17.593 72.37 58.25 131.156 20.693 29.923 29.796 57.656 28.967 82.625-.828 24.97-11.807 46.654-28.906 63.594-19.023 18.846-45.374 32.4-75.217 40.717V94.844c5.636-1.606 11.27-3.35 16.906-5.25zm-35.595 10v312.53c-8.21 1.63-16.606 2.878-25.125 3.782V104.094c8.376-1.122 16.75-2.63 25.125-4.5zm-112.75.78c8.45 1.97 16.894 3.442 25.344 4.44v311.342c-8.59-.84-17.057-2.05-25.345-3.625V100.376zm68.938 5.564v311.375c-4.54.198-9.088.312-13.657.312-3.76 0-7.506-.053-11.25-.188V106.28c8.293.314 16.614.18 24.906-.343z\" ></path>\n            </g>\n            </svg>\n        );\n    }\n}\n\nexport class Cleric extends React.Component<IIconProps, {}> {\n    render() {\n        return (\n            <svg height={this.props.height} width={this.props.width} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path d=\"M0 0h512v512H0z\" fill={this.props.background || 'transparent'} ></path>\n                <g transform=\"translate(0,0)\">\n                    <path fill={this.props.fill || 'rgba(0,0,0,0.5)'} d=\"M487.666 24.334c-24.62 11.186-45.546 18.608-63.14 21.9l41.24 41.24c3.292-17.594 10.714-38.52 21.9-63.14zm-86.082 24.414c-32.088 11.49-60.035 12.74-84.406 4.617l-9.674-3.222-1.998 9.996c-10.117 50.582-18.887 83.28-36.71 121.694l61.37 61.37c38.413-17.823 71.112-26.593 121.695-36.71l9.997-1.998-3.222-9.674c-8.124-24.37-6.873-52.318 4.617-84.406zm2.025 18.148c-13.847 11.685-29.848 19.95-55.34 19.95h-5.56l-2.487 4.974c-18.768 37.536-37.835 74.907-55.494 98.27 17.45-37.59 26.875-71.046 36.4-117.088 25.205 6.06 52.813 3.84 82.48-6.106zm7.902 16.276L303.65 194.957c17.364-24.354 33.734-57.204 50.276-90.32 24.903-1.193 42.88-10.125 57.586-21.465zm17.316 17.316c-11.34 14.707-20.272 32.683-21.465 57.586-33.116 16.542-65.966 32.912-90.32 50.276zm16.276 7.903c-9.945 29.667-12.166 57.275-6.106 82.48-46.042 9.525-79.5 18.95-117.088 36.4 23.363-17.658 60.734-36.725 98.27-55.493l4.974-2.488v-5.56c0-25.492 8.265-41.493 19.95-55.34zm-192.292 82.915l-12.728 12.728 67.883 67.883 12.728-12.728-7.67-7.67-52.543-52.543zm-6.363 41.718l-43.843 43.842 32.528 32.528 43.842-43.842zm-67.884 45.256l-12.728 12.728 55.154 55.154 12.73-12.728zm-14.142 36.77l-41.012 41.01 32.527 32.528 41.01-41.012zM99.37 357.474l-12.727 12.728 55.154 55.154 12.728-12.728zm-14.14 36.77L18 461.472V494h32.527l67.23-67.23z\" ></path>\n                </g>\n            </svg>\n        );\n    }\n}\n\n\nexport class Druid extends React.Component<IIconProps, {}> {\n    render() {\n        return (\n            <svg height={this.props.height} width={this.props.width} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path d=\"M0 0h512v512H0z\" fill={this.props.background || 'transparent'} ></path>\n                <g transform=\"translate(0,0)\">\n                    <path fill={this.props.fill || 'rgba(0,0,0,0.5)'} d=\"M290.78 9.563l-19.5 72.53 70.033 26.813-39.282 40.813c-15.52 8.456-27.103 8.22-37.31 2.124-.014-.008-.02-.024-.033-.03l-5.093-11.064 41.844-33.5-49.375 17.22-29.875-64.626 14.406-31.375-31.656 22.56V51l-91.344-20.094 90.75 37.844 11.53 24.938-62.25 13.25-33.31-41.626 15.78 45.344-26.156 5.563L50.25 77.843l26.344 30.062-39.906 31.938 52.03-18.125 13.907 15.843 80.563-16.938-3.22 43.75 20.782-47.438 23.656-4.968 23.406 50.624c1.88 9.953 2.716 19.126 2.282 27.125l-45.188-17.657 41.188 35.562c-6.098 12.943-19.27 18.24-41.344 11.594l-75.344-49.97-27.97 18.53-16.405-37.343 3.376 46-9.53 6.313-65.157-49.344 61.5 74.938 54.186-35.938c10.9 7.49 21.867 14.905 32.844 22.28l-12.125 41.72-48.75 20.22 63.97-3.782 13.593-47.03c5.696 3.787 11.38 7.58 17.093 11.342 49.537 75.88 57.073 189.32 1.97 176.688 9.086 38.633-24.273 67.905-54.844 81.062h28.03l-.03-.062c25.217-7.956 40.217-20.772 55.906-45.813.113 17.364-7.4 33.346-20.875 45.876h66c-17.686-16.632-27.36-43.79-15.062-88.53 2.454 40.996 14.77 72.124 53.156 88.5v.03h25.97c-69.106-37.694-84.94-111.418-50.094-182.53l36.28-43.47 62.158 17.25-38.188-24.28 18.156-45.72-32.156 36.813-14.22-9.064-13.842 16.53c-7.277-7.843-9.635-21.475-7.78-38.405 2.074-18.954 9.395-40.43 17.123-56.25l15.938-16.405 41.53 25.97 13.408 57.28 79.75 21.938L401 219.22l-10.438-45.782 26.97-12.594L461.187 209l-26.72-56.063 9.813-4.593 50.47-2.875-34.656-13 19.437-52.19-40.374 49.845-59.406 27.72-36.28-22.72 24.124-24.844 42.437-33.968-52.31 18.22-5.408-2.094L392.75 13.31l-58.063 72.313-43.906-16.938V9.563zm-13.5 224.687c.254 15.565 4.228 30.356 15 40.594l-12.186 14.562c-9.453-13.425-9.047-33.08-2.813-55.156zm-53.78 14.28c26.69 17.688 39.887 60.23 23.75 88.595-3.706-24.886-12.738-58.882-25.688-85.188l1.938-3.406z\" ></path>\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport class Fighter extends React.Component<IIconProps, {}> {\n\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" height={this.props.height} width={this.props.width}>\n                <path d=\"M0 0h512v512H0z\" fill={this.props.background || 'transparent'} ></path>\n                <g transform=\"translate(0,0)\">\n                    <path fill={this.props.fill || 'rgba(0,0,0,0.5)'} d=\"M329.8 235.69l62.83-82.71 42.86 32.56-62.83 82.75zm-12.86-9.53l66.81-88-45-34.15-66.81 88zm-27.48-97.78l-19.3 39.57 57-75-42.51-32.3-36.24 47.71zm-20.74-73.24l-46.64-35.43-42 55.31 53.67 26.17zm107 235.52l-139-102.71-9.92.91 4.56 2 62.16 138.43-16.52 2.25-57.68-128.5-40-17.7-4-30.84 39.41 19.42 36.36-3.33 17-34.83-110.9-54.09-80.68 112.51L177.6 346.67l-22.7 145.62H341V372.62l35.29-48.93L387 275.77z\" ></path>\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport class Monk extends React.Component<IIconProps, {}> {\n    render() {\n        return (\n            <svg height={this.props.height} width={this.props.width}  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path d=\"M0 0h512v512H0z\" fill={this.props.background || 'transparent'} ></path>\n                <g transform=\"translate(0,0)\">\n                    <path fill={this.props.fill || 'rgba(0,0,0,0.5)'} d=\"M473.79 38.21c-1.853-1.85-3.902-3.5-6.066-4.89l-5.703 10.304 2.416-12.152c-5.255-2.56-10.94-3.467-16.103-1.746l-.79.79c.696 7.73 4.943 16.09 11.396 22.544 6.453 6.454 14.814 10.7 22.545 11.396l.79-.79c2.827-8.484-1.415-18.384-8.486-25.455zm-41.087 7.145L277.92 200.14l6.71 6.71 40.306-40.306-31.498 49.112 18.423 18.424L466.645 79.297c-1.877-.724-3.712-1.558-5.5-2.488l-26.51 13.664 18.61-18.613c-2.49-1.847-4.845-3.884-7.032-6.072-5.808-5.807-10.56-12.777-13.51-20.433zm-167.51 167.512l-16.22 16.22 48.656 16.217-32.438-32.437zm20.46 47.42l-50.91-16.97-11.226 11.225 50.912 16.97 11.224-11.225zM260.2 285.743l-17.85-5.95-10.92 34.72 28.77-28.77zm-34.93-11.643l-15.98-5.328-11.88 11.88 19.628 19.63 8.232-26.182zm-6.513 53.13l-7.81-7.583-26.266-26.267L29.725 448.333c-3.395 10.185 3.4 22.4 13.044 29.324l61.006-61.006-53.14 65.167c4.35 1.522 8.86 1.847 13.03.457l155.09-155.044z\" ></path>\n                </g></svg>\n        );\n    }\n}\n\n\nexport class Paladin extends React.Component<IIconProps, {}> {\n    render() {\n        return (\n            <svg width={this.props.width} height={this.props.height} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path d=\"M0 0h512v512H0z\" fill={this.props.background || 'transparent'} ></path>\n                <g transform=\"translate(0,0)\">\n                    <path fill=\"rgba(0,0,0,0.5)\" d=\"M129.75 24.47L21.625 211.655l55.78 32.188L185.532 56.656 129.75 24.47zm55.97 69.25l-75.626 130.874L326.47 349.47l75.592-130.876L185.72 93.72zm83.468.686l-11.22 19.438 84.97 49.03 11.25-19.468-85-49zM434.25 200.22L326.156 387.405l55.78 32.188 108.095-187.188-55.78-32.187zm-270.53 76.905l-11.282 19.53 84.968 49 11.25-19.5-84.937-49.03zm-3.095 45.844L61.312 494.81h67.157l82.28-142.968-50.125-28.875z\" ></path>\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport class Ranger extends React.Component<IIconProps, {}> {\n    render() {\n        return (\n            <svg width={this.props.width} height={this.props.height} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path d=\"M0 0h512v512H0z\" fill={this.props.background || 'transparent'} ></path>\n                <g transform=\"translate(0,0)\">\n                    <path fill={this.props.fill || 'rgba(0,0,0,0.5)'} d=\"M492.656 20.406l-118.594 56.22L413.875 86l-86.97 86.97-305.5 259.374.69.687 104.75-47.467-46.376 105.843.905.906 272.5-319.875 73.22-73.218 9.342 39.81 56.22-118.624zm-473.25.063c-1.347 23.43 5 39.947 16.563 52.218l24.093 302.28 17.562-14.874-21.72-272.438c57.975 31.954 169.096 25.165 216.907 106.72l66.625-56.564 1.22-1.218C292.74 38.666 86.01 99.716 19.406 20.47zm359.531 151.56l-1.156 1.157-57.25 67.188c82.006 47.945 75.587 159.267 107.283 218.03l-272.157-24.5-14.812 17.408 301.562 27.125c12.48 12.283 29.4 19.084 53.688 17.687-79.95-67.2-18.36-275.754-117.156-324.094z\" ></path>\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport class Rogue extends React.Component<IIconProps, {}> {\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width={this.props.width} height={this.props.height}>\n                <path fill={this.props.background || 'transparent'}  d=\"M0 0h512v512H0z\" />\n                <g style={{ touchAction: 'none' }} transform=\"translate(0,0)\">\n                    <path fill={this.props.fill || 'rgba(0,0,0,0.5)'}  d=\"M62.5 17.28c-9.747.288-20.824 5.23-29.844 14.25-15.192 15.193-18.838 36.194-8.125 46.907 7.99 7.988 21.716 8.027 34.47 1.22 16.167 30.05 42.154 57.687 71.438 76.374-18.77 24.156-29.97 54.48-29.97 87.376h18.688c0-28.9 9.828-55.474 26.344-76.53l2.156 39.405C274.5 320.554 402.09 428.196 496.062 494.94c-65.54-95.294-176.99-224.638-288.687-348.407l-38.97-2.124c20.764-15.68 46.638-24.967 74.72-24.97V100.75c-32.2.002-61.945 10.725-85.844 28.78-18.696-29.383-46.39-55.48-76.53-71.686 6.795-12.748 6.796-26.423-1.188-34.407-4.352-4.352-10.393-6.352-17.062-6.156z\" />\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport class Sorcerer extends React.Component<IIconProps, {}> {\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width={this.props.width} height={this.props.height}>\n                <path d=\"M0 0h512v512H0z\" fill={this.props.background || 'transparent'} ></path>\n                <g transform=\"translate(0,0)\">\n                    <path fill={this.props.fill || 'rgba(0,0,0,0.5)'} d=\"M179.813 20.72v81.25L135.78 75.624l17.564 46.938-115.656-20.938 84.718 49.906H20v27.345l110.47 14.875 96.593-29.188c-11.303-11.87-18.594-30.743-18.594-52 0-35.926 20.87-65.062 46.624-65.062 25.753 0 46.625 29.136 46.625 65.063 0 20.847-7.038 39.375-17.97 51.28l99.03 29.907 112.5-15.156V151.53H394.19l84.718-49.905-120.437 21.78 17.874-47.718-48.656 29.126V20.72H179.813zM495.28 223.343l-112.5 22.437-55.405-13.124-28.03 118.313 16.592 145h51.688L329.25 351.22l46.53 27.842-21.31-56.937 124.436 22.5-91.125-53.688h107.5v-67.593zM20 223.75v67.188h108.813l-91.125 53.687L157.31 322.97 136.345 379l38.47-23-28.595 139.97h48.155L207.28 351.56 185.595 232.72l-55.125 13.06L20 223.75z\" ></path>\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport class Warlock extends React.Component<IIconProps, {}> {\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width={this.props.width} height={this.props.height}>\n                <path d=\"M0 0h512v512H0z\" fill={this.props.background || 'transparent'} ></path>\n                <g transform=\"translate(0,0)\">\n                    <path fill={this.props.fill || 'rgba(0,0,0,0.5)'} d=\"M257.617 20.717c-7.083-.011-14.242.448-21.469 1.347-31.2 3.87-59.077 16.346-82.566 39.51-18.59 18.323-30.93 40.783-33.8 68.274-3.409 32.99 6.985 61.16 28.118 84.191 6.792 7.386 9.795 14.582 9.608 25.03-.297 16.428.974 32.882 1.65 50.308 21.027-12.421 41.214-24.384 61.674-36.48 12.176 21.378 24.055 42.27 36.479 63.976 12.148-21.517 23.894-42.3 35.826-63.244 19.753 11.8 39.24 23.46 59.373 35.557.514-16.94 1.733-32.799 1.246-48.6-.353-11.07 1.813-19.676 10.256-26.223 2.677-2.083 4.707-5.356 6.845-8.308 20.568-28.606 27.712-60.348 17.16-95.498-9.77-32.502-30.771-54.695-57.699-70.362-23.066-13.405-47.403-19.44-72.7-19.478zm82.799 105.207c17.942-.134 26.164 11.07 22.404 30.474-4.353 22.379-22.92 38.723-42.674 37.668-21.38-1.139-38.695-18.755-41.025-41.892-.186-1.811.435-4.598 1.6-5.547 10.658-8.605 45.704-20.593 59.695-20.703zm-165.154.03c13.717.865 29.494 7.548 45.084 14.91 2.297 1.107 4.408 2.785 6.763 3.464 5.847 1.651 6.088 6.113 5.25 11.31-3.76 22.217-23.004 39.484-42.785 38.401-22.433-1.218-39.592-19.269-41.162-43.351-1.083-16.59 6.766-24.952 26.85-24.735zm80.615 56.556c7.44 18.214 14.42 35.235 21.646 52.93h-43.187c7.144-17.588 14.152-34.637 21.54-52.93zm-16.172 141.84c-.146.319-.293.633-.42.976-2.894 7.981-6.197 15.856-9.984 23.543-8.334 16.832-17.293 33.365-25.71 50.09-6.63 13.125-10.336 26.845-7.74 41.783 5.71 32.582 36.67 54.827 69.63 49.844 39.886-6.033 59.48-41.103 48.603-74.902-4.357-13.586-11.283-26.469-17.941-39.159-8.46-16.062-16.528-32.279-23.061-49.11-2.348 4.152-4.698 8.311-7.057 12.491l-8.658 15.328-8.742-15.279c-2.993-5.225-5.962-10.422-8.92-15.605zm.053 40.97c3.709.032 3.735 27.583 1.642 40.026-2.166 12.555.13 24.084 10.495 32.69 15.02 12.475 35.426 9.66 46.654-6.386.514-.68.975-1.355 1.49-2.06.404.083.756.164 1.162.219-.89 4.763-1.217 9.633-2.652 14.261-6.33 20.702-25.515 33.068-47.977 31.174-19.404-1.624-35.833-17.753-39.24-37.996-1.841-10.579 1.218-20.05 5.654-29.17 6.602-13.61 14.018-26.817 20.647-40.375.81-1.655 1.518-2.388 2.125-2.383z\" ></path>\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport class Wizard extends React.Component<IIconProps, {}> {\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width={this.props.width} height={this.props.height}>\n                <path d=\"M0 0h512v512H0z\" fill={this.props.background || 'transparent'} ></path>\n                <g transform=\"translate(0,0)\">\n                    <path fill={this.props.fill || 'rgba(0,0,0,0.5)'} d=\"M339.72 55.875c-61.792 0-111.876 50.08-111.876 111.875 0 61.79 50.08 111.875 111.875 111.875 61.79 0 111.905-50.08 111.905-111.875 0-61.79-50.112-111.875-111.906-111.875zm0 18.875c51.36 0 93 41.642 93 93 0 51.362-41.643 93-93 93-51.363 0-92.97-41.642-92.97-93 0-33.034 17.208-62.033 43.156-78.53-4.767 5.728-7.656 13.088-7.656 21.124 0 18.257 14.806 33.062 33.063 33.062 18.256 0 33.062-14.805 33.062-33.062 0-17.464-13.562-31.73-30.72-32.938 7.073-1.72 14.46-2.656 22.064-2.656zm-62.533 65.03c-8.418 0-15.28 6.825-15.28 15.25 0 8.42 6.854 15.25 15.28 15.25 8.42 0 15.25-6.822 15.25-15.25 0-8.418-6.823-15.25-15.25-15.25zm-76.312 72.97c-.846 7.796-2.342 14.92-4.5 21.406l78.5 78.5c6.444-2.173 13.523-3.733 21.25-4.625l-95.25-95.28zm-13.125 39.22c-4.91 7.335-11.078 13.393-18.5 18.218l69.594 69.625c4.842-7.41 10.92-13.58 18.25-18.5L187.75 251.97zm-36.438 26.718c-6.406 2.136-13.398 3.716-20.968 4.687 32.544 31.712 62.545 62.546 95.187 95.188 1.003-7.534 2.595-14.498 4.75-20.875l-78.968-79zm-15.687 36.406L17.187 433.188v21.937l129.25-129.22-10.812-10.81zm24 24L17.187 481.53v13.595h53.72L193.28 372.75l-33.655-33.656z\" ></path>\n                </g>\n            </svg>\n        );\n    }\n}\n\nexport class NewCharacter extends React.Component<IIconProps> {\n    render() {\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" width={this.props.width} height={this.props.height}>\n                <path d=\"M0 0h512v512H0z\" fill={this.props.background || 'transparent'} ></path>\n                <g transform=\"translate(0,0)\">\n                    <path fill={this.props.fill || 'rgba(0,0,0,0.5)'} d=\"M256 21.52l-4.5 2.597L52.934 138.76v234.48L256 490.48l203.066-117.24V138.76L256 21.52zm0 20.783l185.066 106.85v213.695L256 469.698 70.934 362.847V149.152L256 42.302zm0 30.93l-4.5 2.597-153.78 88.785v182.77L256 438.768l158.28-91.383v-182.77L256 73.232zm0 20.783l140.28 80.992v161.984L256 417.984l-140.28-80.992V175.008L256 94.016zm0 30.93l-4.5 2.597-108.998 62.93v131.054L256 387.055l113.498-65.528V190.473L256 124.945zm0 20.783l95.498 55.135v110.27L256 366.27l-95.498-55.135v-110.27L256 145.73zm0 30.928l-4.5 2.598-64.213 37.072v79.344L256 335.342l68.713-39.67v-79.344L256 176.658zm0 20.783l50.713 29.28v58.56L256 314.56l-50.713-29.28v-58.56L256 197.44zm0 30.93l-4.5 2.6-19.428 11.216v27.628L256 283.63l23.928-13.816v-27.628L256 228.37z\" ></path>\n                </g>\n            </svg>\n        );\n    }\n}\n\ninterface ILetterIconProps extends IIconProps {\n    letter: string;\n    id: string;\n}\n\nexport class CircledLetter extends React.Component<ILetterIconProps> {\n    render() {\n        return (\n            <svg id={this.props.id} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width={this.props.width} height={this.props.height}>\n                <defs>\n                    <mask id={`letter-mask-${this.props.id}`}>\n                        <circle\n                            cx=\"50\"\n                            cy=\"50\"\n                            r=\"49\"\n                            fill=\"white\"\n                            style={{\n                                fill: 'white',\n                            }}\n                        />\n                        <text\n                            x=\"50\"\n                            y=\"78\"\n                            style={{fontSize: \"60pt\", color: \"black\", fill: 'black', fontFamily: '--apple-system, Helvetica Neue'}}\n                            fill=\"black\"\n                            textAnchor=\"middle\"\n                        >{this.props.letter}</text>\n                    </mask>\n                </defs>\n                <circle\n                    cx=\"50\"\n                    cy=\"50\"\n                    r=\"46\"\n                    mask={`url(#letter-mask-${this.props.id})`}\n                />\n            </svg>\n        );\n    }\n}","import * as React from 'react';\nimport * as ReactDom from 'react-dom';\nimport { CharacterSheet } from './components/characterSheet';\nimport { CharacterPicker } from './components/characterPicker';\nimport { Character, Wealth, ExpendableItem, MagicItem, Weapon } from './models/character';\nimport { Data } from './services/data';\nimport { CharacterCreator } from './components/newCharacter';\nimport { AbilityScores } from './models/abilityScore';\nimport { TitleBar, Text, Button, Box, ProgressCircle } from 'react-desktop';\nimport { Spell } from './models/spells';\n\ninterface IAppState {\n    currentView: View,\n    characters: Character[];\n    selectedCharacter: number;\n    spellList: Spell[];\n}\n\nexport class App extends React.Component<{}, IAppState> {\n    private data: Data;\n    constructor(props) {\n        super(props);\n        this.data = new Data();\n        this.state = {\n            currentView: View.CharacterPicker,\n            characters: [],\n            selectedCharacter: -1,\n            spellList: [],\n        }\n    }\n\n    componentDidMount() {\n        this.data.getCharacters().then(characters => this.setState({characters}));\n    }\n\n    render() {\n        return (\n            <div className=\"app-container\">\n                <TitleBar \n                    style={{\n                        display: 'flex',\n                        flexFlow: 'row',\n                        alignItems: 'center',\n                    }}\n                    className=\"top-bar\"\n                >\n                    <Button \n                        className=\"back-button\"\n                        onClick={() => this.goBack()}\n                        style={{\n                            display: `${this.state.currentView == View.CharacterPicker ? 'none' : 'block'}`,\n                            textAlign: 'center',\n                        }}\n                    ><i style={{\n                        fontFamily: 'Material Icons',\n                        fontSize: 18,\n                        lineHeight: 2,\n                        \n                    }}>arrow_back_ios</i></Button>\n                    <Text \n                        className=\"top-bar-title\"\n                        style={{\n                            width: 'calc(90% - 50px)',\n                            textAlign: 'center',\n                            fontSize: 36,\n                            marginLeft: this.state.currentView == View.CharacterPicker ? 25 : 0,\n                        }}\n                    >\n                        DnD Character Manager\n                    </Text>\n                </TitleBar>\n                { this.renderView() }\n            </div>\n        );\n    }\n\n    renderView() {\n        switch (this.state.currentView) {\n            case View.CharacterPicker:\n                return (<CharacterPicker \n                    characters={this.state.characters}\n                    characterSelected={i => this.switchView(View.CharacterSheet, i)}\n                    newCharacterClicked={() => {\n                        this.switchView(View.CharacterCreator)\n                    }}\n                />)\n            case View.CharacterSheet:\n                let ch = this.state.characters[this.state.selectedCharacter];\n                return (<CharacterSheet \n                            character={ch} \n                            adjustDamage={newDmg => this.adjustSelectedCharacterDamage(newDmg)}\n                            adjustTempHP={newHp => this.adjustSelectedCharacterTempHP(newHp)}\n                            adjustExp={newExp => this.adjustCharacterExperience(newExp)}\n                            adjustMoney={wealth => this.adjustCharacterWealth(wealth)}\n                            adjustScores={scores => this.adjustCharacterScores(scores)}\n                            adjustExpendables={expends => this.adjustCharacterExpends(expends)}\n                            adjustMagics={magics => this.adjustCharacterMagicItems(magics)}\n                            adjustWeapons={newWeapons => this.adjustCharacterWeapons(newWeapons)}\n                            adjustInspiration={async newValue => await this.adjustCharacterInspiration(newValue)}\n                            spellList={this.state.spellList}\n                        />);\n            case View.CharacterCreator:\n                    return (<CharacterCreator \n                            onSave={ch => this.newCharacter(ch)}\n                        />)\n            case View.Loading:\n                    return (<Box width=\"100%\" height=\"100%\"><ProgressCircle size={100}/></Box>)\n        }\n    }\n\n    switchView(newView: View, meta?: number) {\n        switch (newView) {\n            case View.CharacterPicker:\n                this.setState({currentView: newView, selectedCharacter: -1, spellList: []});\n            break;\n            case View.CharacterSheet:\n                this.setState({currentView: newView, selectedCharacter: meta});\n                this.data.getSpellsForClass(this.state.characters[meta].characterClass.name).then(spells => {\n                    this.setState({currentView: newView, selectedCharacter: meta, spellList: spells});\n                });\n            break;\n            case View.CharacterCreator:\n                this.setState({currentView: newView, selectedCharacter: -1, spellList: []});\n            break;\n        }\n    }\n\n    goBack() {\n        switch (this.state.currentView) {\n            case View.CharacterPicker:\n                return;\n            case View.CharacterSheet:\n            case View.CharacterCreator:\n                this.switchView(View.CharacterPicker);\n            break;\n        }\n    }\n    adjustSelectedCharacterDamage(newDmg: number) {\n        let ch: Character;\n        this.setState((prev, props) => {\n            ch = Character.fromJson(prev.characters[this.state.selectedCharacter]);\n            ch.damage = newDmg;\n            return {characters: prev.characters.map(c => {\n                if (c.id === ch.id) {\n                    return ch;\n                }\n                return c\n            })}\n        }, async () => {\n            await this.data.saveCharacter(ch);\n        });\n    }\n    adjustSelectedCharacterTempHP(newHP: number) {\n        let ch: Character;\n        this.setState((prev, props) => {\n            ch = Character.fromJson(prev.characters[this.state.selectedCharacter]);\n            ch.tempHp = newHP;\n            return {characters: prev.characters.map(c => {\n                if (c.id === ch.id) {\n                    return ch;\n                }\n                return c\n            })}\n        }, async () => {\n            await this.data.saveCharacter(ch);\n        });\n    }\n    adjustCharacterExperience(newExp: number) {\n        let ch: Character;\n        this.setState((prev, props) => {\n            ch = Character.fromJson(prev.characters[this.state.selectedCharacter]);\n            ch.experience = newExp;\n            return {characters: prev.characters.map(c => {\n                if (c.id === ch.id) {\n                    return ch;\n                }\n                return c\n            })}\n        }, async () => {\n            await this.data.saveCharacter(ch);\n        });\n    }\n    adjustCharacterWealth(wealth: Wealth) {\n        let ch: Character;\n        this.setState((prev, props) => {\n            ch = Character.fromJson(prev.characters[this.state.selectedCharacter]);\n            ch.wealth = wealth;\n            return {characters: prev.characters.map(c => {\n                if (c.id === ch.id) {\n                    return ch;\n                }\n                return c\n            })}\n        }, async () => {\n            await this.data.saveCharacter(ch);\n        });\n    }\n    adjustCharacterScores(scores: AbilityScores) {\n        let ch: Character;\n        this.setState((prev, props) => {\n            ch = Character.fromJson(prev.characters[this.state.selectedCharacter]);\n            ch.abilityScores = ch.abilityScores.add(scores);\n            return {characters: prev.characters.map(c => {\n                if (c.id === ch.id) {\n                    return ch;\n                }\n                return c\n            })}\n        }, async () => {\n            await this.data.saveCharacter(ch);\n        });\n    }\n    adjustCharacterExpends(expends: ExpendableItem[]) {\n        let ch: Character;\n        this.setState((prev, props) => {\n            ch = Character.fromJson(prev.characters[this.state.selectedCharacter]);\n            ch.expendables = expends;\n            return {characters: prev.characters.map(c => {\n                if (c.id === ch.id) {\n                    return ch;\n                }\n                return c\n            })}\n        }, async () => {\n            await this.data.saveCharacter(ch);\n        });\n    }\n    adjustCharacterMagicItems(magics: MagicItem[]) {\n        let ch: Character;\n        this.setState((prev, props) => {\n            ch = Character.fromJson(prev.characters[this.state.selectedCharacter]);\n            ch.magicItems = magics;\n            return {characters: prev.characters.map(c => {\n                if (c.id === ch.id) {\n                    return ch;\n                }\n                return c\n            })}\n        }, async () => {\n            await this.data.saveCharacter(ch);\n        });\n    }\n    adjustCharacterWeapons(weapons: Weapon[]) {\n        let ch: Character;\n        this.setState((prev, props) => {\n            ch = Character.fromJson(prev.characters[this.state.selectedCharacter]);\n            ch.weapons = weapons;\n            return {characters: prev.characters.map(c => {\n                if (c.id === ch.id) {\n                    return ch;\n                }\n                return c\n            })}\n        }, async () => {\n            await this.data.saveCharacter(ch);\n        });\n    }\n    adjustCharacterInspiration(inspiration: number) {\n        let ch: Character;\n        this.setState((prev, props) => {\n            ch = Character.fromJson(prev.characters[this.state.selectedCharacter]);\n            ch.inspiration = inspiration;\n            return {characters: prev.characters.map(c => {\n                if (c.id === ch.id) {\n                    return ch;\n                }\n                return c\n            })}\n        }, async () => {\n            await this.data.saveCharacter(ch);\n        });\n    }\n\n    newCharacter(ch: Character) {\n        this.setState((prev, props) => {\n            let newChs = prev.characters.concat([ch]);\n            return {characters: newChs, currentView: View.CharacterPicker};\n        }, async () => {\n            await this.data.addCharacter(ch);\n        });\n    }\n}\n\nenum View {\n    CharacterPicker,\n    CharacterSheet,\n    CharacterCreator,\n    Loading,\n}\n\n(function() {\n    let app = document.getElementById('app');\n    ReactDom.render(<App/>, app);\n})();\n","import * as React from 'react';\nimport {\n    Character, Save, Weapon, Wealth, Alignment, MagicItem, ExpendableItem, \n    WeaponType, WeaponKind, WeaponDamageKind, WeaponWeight, WeaponHandedness,\n} from '../models/character';\nimport { Range } from '../models/range';\nimport { AbilityScores, AbilityScore, AbilityKind } from '../models/abilityScore';\nimport { Box, Text, Button, Label, TextInput, Dialog, Radio, ListView, ListViewSection, ListViewSectionHeader, ListViewRow, Checkbox } from 'react-desktop';\nimport { Class, ClassKind } from '../models/class';\nimport { RogueDetails } from '../models/classDetails';\nimport { Background } from '../models/background';\nimport { SkillKind } from '../models/skills';\nimport { SpellsList } from './spellsList';\nimport { Data, Database } from '../services/data';\nimport { Spell } from '../models/spells';\n\ninterface ICharacterSheetProps {\n    character: Character;\n    adjustDamage: (newValue: number) => void;\n    adjustTempHP: (newValue: number) => void;\n    adjustExp: (newValue: number) => void;\n    adjustMoney: (newValue: Wealth) => void;\n    adjustScores: (newValue: AbilityScores) => void;\n    adjustExpendables: (newExpends: ExpendableItem[]) => void;\n    adjustMagics: (newMagics: MagicItem[]) => void;\n    adjustWeapons: (newWeapons: Weapon[]) => void;\n    adjustInspiration: (newValue: number) => void;\n    spellList: Spell[];\n}\n\ninterface ICharacterSheetState {\n}\n\nexport class CharacterSheet extends React.Component<ICharacterSheetProps, ICharacterSheetState> {\n    constructor(props: ICharacterSheetProps) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"character-sheet\">\n                <CharacterName\n                    name={this.props.character.name}\n                    inspiration={this.props.character.inspiration}\n                    inspirationChanged={newValue => this.props.adjustInspiration(newValue)}\n                />\n                <CharacterDescription\n                    race={this.props.character.race.name}\n                    name={this.props.character.characterClass.name}\n                    level={this.props.character.level}\n                    alignment={this.props.character.alignment}\n                    background={this.props.character.background}\n                    experience={this.props.character.experience}\n                    expToNextLevel={this.props.character.expToNextLevel}\n                    needsLevelUp={this.props.character.needsLevelUp()}\n                    adjustExperience={newExp => this.props.adjustExp(newExp)}\n                />\n                <AbilitiesColumn\n                    scores={this.props.character.modifiedAbilityScores()}\n                    updateScores={scores => this.props.adjustScores(scores)}\n                />\n                <Proficiency\n                    proficiency={this.props.character.proficiency}\n                    languages={this.props.character.languages}\n                />\n                <Saves saves={this.props.character.saves} />\n                <SkillsList skills={this.props.character.rawSkills} />\n                <Defences\n                    armorClass={this.props.character.armorClass()}\n                    initiative={this.props.character.initiative}\n                    hitPoints={this.props.character.currentHealth()}\n                    tempHitPoints={this.props.character.tempHp}\n                    hitDice={this.props.character.characterClass}\n                    speed={this.props.character.speed}\n                    damage={this.props.character.damage}\n                    damageChanged={dmg => this.props.adjustDamage(dmg)}\n                    tempHPChanged={hp => this.props.adjustTempHP(hp)}\n                />\n                <Weapons\n                    weapons={this.props.character.weapons}\n                    adjustWeapons={newWeapons => this.props.adjustWeapons(newWeapons)}\n                />\n                <Money\n                    wealth={this.props.character.wealth}\n                    adjustMoney={wealth => this.props.adjustMoney(wealth)}\n                />\n                <Notes\n                    notes={this.props.character.notes.concat((this.props.character.characterClass.classDetails as RogueDetails).notes().map(n => n.toString()))}\n                />\n                <ItemsList\n                    magicItems={this.props.character.magicItems}\n                    expendables={this.props.character.expendables}\n                    adjustExpendables={newExpendables => this.props.adjustExpendables(newExpendables)}\n                    adjustMagics={newMagics => this.props.adjustMagics(newMagics)}\n                />\n                <SpellsList\n                    title={`${this.props.character.characterClass.name} Spells`}\n                    spells={this.props.spellList}\n                />\n            </div>\n        )\n    }\n}\n\ninterface ICharacterNameProps {\n    name: string\n    inspiration: number;\n    inspirationChanged: (newValue: number) => void;\n}\n\nexport class CharacterName extends React.Component<ICharacterNameProps, {}> {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Box\n                className=\"character-name-container\"\n            >\n                <Text\n                    className=\"character-name-text\"\n                    bold={true}\n                    size={24}\n                >{this.props.name}</Text>\n                <div className=\"inspiration-container\">\n                    <Text\n                        style={{\n                            fontSize: 16,\n                        }}\n                    >{`Inspiration ${this.props.inspiration}`}</Text>\n                    <Button\n                        onClick={() => this.props.inspirationChanged(this.props.inspiration + 1)}\n                        className=\"up\"\n                        padding=\"0px\"\n                    >\n                        <i style={{ fontFamily: 'Material Icons', lineHeight: 1 }}>expand_less</i>\n                    </Button>\n                    <Button padding=\"0px\" onClick={() => this.props.inspirationChanged(this.props.inspiration - 1)} className=\"down\">\n                        <i style={{ fontFamily: 'Material Icons', lineHeight: 1 }}>expand_more</i>\n                    </Button>\n                </div>\n            </Box>\n        );\n    }\n}\n\ninterface ICharacterDescriptionProps {\n    name: ClassKind;\n    level: number;\n    race: string;\n    alignment: Alignment;\n    experience: number;\n    background: Background;\n    needsLevelUp: boolean;\n    expToNextLevel: number;\n    adjustExperience: (newExp: number) => void;\n}\n\ninterface ICharacterDescriptionState {\n    adjustingExperience: boolean;\n}\n\nexport class CharacterDescription extends React.Component<ICharacterDescriptionProps, ICharacterDescriptionState> {\n    constructor(props: ICharacterDescriptionProps) {\n        super(props);\n        this.state = {\n            adjustingExperience: false,\n        };\n    }\n    render() {\n        let ret = [\n            <Box\n                className=\"character-description\"\n                padding={0}\n                key=\"character-desc\"\n            >\n                <div className=\"character-class desc-part\">\n                    <Text \n                        className=\"character-class-value desc-value\"\n                        style={{\n                            paddingTop: 5,\n                            lineHeight: 1,\n                        }}\n                    >{this.props.name}</Text>\n                    <hr className=\"desc-divider\" />\n                    <Label\n                        color=\"rgba(0,0,0,0.5)\"\n                        className=\"character-class-label desc-label\"\n                    >class</Label>\n                </div>\n                <div className=\"class-level desc-part\">\n                    <Text className={`class-level-value desc-value`}\n                    style={{\n                        paddingTop: 5,\n                        lineHeight: 1,\n                    }}>{this.props.level.toString()}</Text>\n                    <hr className=\"desc-divider\" />\n                    <Label\n                        color=\"rgba(0,0,0,0.5)\" className=\"class-level-label desc-label\">level</Label>\n                </div>\n                <div className=\"character-background desc-part\">\n                    <Text className=\"background-value desc-value\"\n                    style={{\n                        paddingTop: 5,\n                        lineHeight: 1,\n                    }}>{this.props.background.kind}</Text>\n                    <hr className=\"desc-divider\" />\n                    <Label\n                        color=\"rgba(0,0,0,0.5)\" className=\"background-label desc-label\">background</Label>\n                </div>\n                <div className=\"character-race desc-part\">\n                    <Text className=\"race-value desc-value\"\n                    style={{\n                        paddingTop: 5,\n                        lineHeight: 1,\n                    }}>{this.props.race}</Text>\n                    <hr className=\"desc-divider\" />\n                    <Label\n                        color=\"rgba(0,0,0,0.5)\" className=\"race-label desc-label\">race</Label>\n                </div>\n                <div className=\"character-alignment desc-part\">\n                    <Text className=\"alignment-value desc-value\"\n                    style={{\n                        paddingTop: 5,\n                        lineHeight: 1,\n                    }}>{this.props.alignment.toString()}</Text>\n                    <hr className=\"desc-divider\" />\n                    <Label\n                        color=\"rgba(0,0,0,0.5)\" className=\"alignment-label desc-label\">alignment</Label>\n                </div>\n                <div className=\"character-experience desc-part\"\n                    onClick={() => this.adjustExperience()}\n                    title={`next level in ${this.props.expToNextLevel} more exp`}\n                >\n                    <Text className=\"experience-value desc-value\"\n                    style={{\n                        paddingTop: 5,\n                        lineHeight: 1,\n                    }}>{this.props.experience.toString()}</Text>\n                    <hr className=\"desc-divider\" />\n                    <Label\n                        color=\"rgba(0,0,0,0.5)\" className=\"experience-label desc-label\">experience</Label>\n                </div>\n            </Box>\n        ];\n        if (this.state.adjustingExperience) {\n            ret.push(<ExperienceAdjuster\n                key=\"experience-adjuster\"\n                onComplete={newExp => this.experienceAdjustmentComplete(newExp)}\n                currentExp={this.props.experience}\n            />)\n        }\n        return ret;\n    }\n    levelDoubleClicked() {\n\n    }\n    adjustExperience() {\n        this.setState({ adjustingExperience: true });\n    }\n    experienceAdjustmentComplete(newValue: number) {\n        this.setState({ adjustingExperience: false });\n        this.props.adjustExperience(newValue);\n    }\n}\n\ninterface IExperienceAdjusterProps {\n    onComplete: (newValue) => void;\n    currentExp: number;\n}\n\ninterface IExperienceAdjusterState {\n    currentExp: number;\n    newExp: number;\n}\n\nexport class ExperienceAdjuster extends React.Component<IExperienceAdjusterProps, IExperienceAdjusterState> {\n    private cachedHandler;\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentExp: this.props.currentExp,\n            newExp: 0,\n        };\n        this.cachedHandler = this.keyHandler.bind(this);\n        window.addEventListener('keyup', this.cachedHandler);\n    }\n    render() {\n        return (\n            <Dialog\n                className=\"experience-adjuster\"\n                horizontalAlignment=\"center\"\n                style={{\n                    zIndex: 100,\n                    position: 'absolute',\n                }}\n            >\n                <Label style={{ textAlign: \"center\" }}>New Experience</Label>\n                <TextInput\n                    focusRing={false}\n                    type=\"number\"\n                    value={this.state.newExp.toString()}\n                    onChange={ev => this.setState({ newExp: parseInt(ev.currentTarget.value), currentExp: this.props.currentExp })}\n                />\n                <Label style={{ textAlign: \"center\" }}>Current Experience</Label>\n                <TextInput\n                    focusRing={false}\n                    type=\"number\"\n                    value={this.state.currentExp.toString()}\n                    onChange={ev => this.setState({ currentExp: parseInt(ev.currentTarget.value), newExp: 0 })}\n                />\n                <div className=\"button-container\">\n                    <Button onClick={() => this.props.onComplete(this.state.currentExp + this.state.newExp)}>Save</Button>\n                    <Button onClick={() => this.props.onComplete(this.props.currentExp)}>Cancel</Button>\n                </div>\n            </Dialog>\n        );\n    }\n    keyHandler(ev: KeyboardEvent) {\n        switch (ev.key) {\n            case \"Escape\":\n                this.props.onComplete(this.props.currentExp);\n                window.removeEventListener('keyup', this.cachedHandler);\n                delete this.cachedHandler\n                break;\n            case \"Enter\":\n                this.props.onComplete(this.state.currentExp + this.state.newExp);\n                window.removeEventListener('keyup', this.cachedHandler);\n                delete this.cachedHandler;\n                break;\n        }\n    }\n}\n\ninterface IAbilitiesColumnProps {\n    scores: AbilityScores;\n    updateScores: (scores: AbilityScores) => void;\n}\ninterface IAbilitiesColumnState {\n    editingScores: boolean;\n}\n\nexport class AbilitiesColumn extends React.Component<IAbilitiesColumnProps, IAbilitiesColumnState> {\n    constructor(props: IAbilitiesColumnProps) {\n        super(props);\n        this.state = {\n            editingScores: false,\n        };\n    }\n\n    render() {\n        return (\n            <Box\n                className=\"ability-scores-column\"\n                padding=\"5px\"\n            >\n                {this.props.scores.map((score) => {\n                    return (\n                        <AbilityScoreContainer\n                            key={`score-${score.kind}`}\n                            score={score}\n                            name={score.kind}\n                        />\n                    )\n                })}\n                <Button\n                    onClick={() => this.editScores()}\n                >edit</Button>\n                {this.state.editingScores\n                    ? (\n                        <AbilityScoreAdjustor\n                            scoresSaved={scores => this.completeEditingScores(scores)}\n                        />\n                    )\n                    : null\n                }\n            </Box>\n        );\n    }\n\n    editScores() {\n        this.setState({ editingScores: true });\n    }\n\n    completeEditingScores(scores: AbilityScores) {\n        this.setState({ editingScores: false }, () => {\n            if (!scores) return;\n            this.props.updateScores(scores);\n        });\n    }\n}\n\ninterface IAbilityScoreAdjustorProps {\n    scoresSaved: (scores: AbilityScores) => void;\n}\n\ninterface IAbilityScoreAdjustorState {\n    abilityScores: AbilityScores;\n}\n\nexport class AbilityScoreAdjustor extends React.Component<IAbilityScoreAdjustorProps, IAbilityScoreAdjustorState> {\n    private cachedHandler;\n    constructor(props: IAbilityScoreAdjustorProps) {\n        super(props);\n        this.state = {\n            abilityScores: AbilityScores.Empty(),\n        };\n        this.cachedHandler = this.keyHandler.bind(this);\n        window.addEventListener('keyup', this.cachedHandler);\n    }\n    render() {\n        return (\n            <Dialog\n                className=\"ability-score-adjustor\"\n                style={{\n                    position: 'absolute',\n                    zIndex: 100,\n                }}\n                horizontalAlignment=\"center\"\n            >\n                <Box className=\"scores-list\">\n                    {this.state.abilityScores.map(score => {\n                        return (\n                            <Box key={`adjusting-score-${score.kind}`} className={`input-group ${score.kind.toLowerCase()}`}>\n                                <Label style={{ textAlign: \"center\" }}>{score.kind}</Label>\n                                <TextInput\n                                    focusRing={false}\n                                    value={score.value.toString()}\n                                    type=\"number\"\n                                    onChange={ev => this.updateAbilities(score.kind, ev.currentTarget.valueAsNumber)}\n                                />\n                            </Box>\n                        );\n                    })\n                    }\n                </Box>\n                <div>\n                    <Button\n                        onClick={() => this.props.scoresSaved(this.state.abilityScores)}\n                    >Save</Button>\n                    <Button\n                        onClick={() => this.props.scoresSaved(null)}\n                    >Cancel</Button>\n                </div>\n            </Dialog>\n        );\n    }\n\n    updateAbilities(kind: AbilityKind, newValue: number) {\n        this.setState((prev, props) => {\n            prev.abilityScores.set(kind, newValue);\n            return {\n                abilityScores: prev.abilityScores\n            };\n        });\n    }\n\n    keyHandler(ev: KeyboardEvent) {\n        switch (ev.key) {\n            case \"Escape\":\n                window.removeEventListener('keyup', this.cachedHandler);\n                this.props.scoresSaved(null)\n                delete this.cachedHandler;\n                break;\n            case \"Enter\":\n                window.removeEventListener('keyup', this.cachedHandler);\n                this.props.scoresSaved(this.state.abilityScores)\n                delete this.cachedHandler;\n                break;\n        }\n    }\n}\n\ninterface IAbilityScoreContainerProps {\n    name: string;\n    score: AbilityScore;\n}\ninterface IAbilityScoreContainerState {\n\n}\n\nexport class AbilityScoreContainer extends React.Component<IAbilityScoreContainerProps, IAbilityScoreContainerState> {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <Box\n                className=\"ability-score-container\"\n                padding={5}\n            >\n                <Label bold={true} className=\"ability-score-name\">{this.props.name.substr(0, 3).toUpperCase()}</Label>\n                <Text className=\"ability-score-value\">{this.props.score.value}</Text>\n                <Text className=\"ability-modifier-value\">{this.props.score.modifier}</Text>\n            </Box>\n        )\n    }\n}\n\ninterface ISavesProps {\n    saves: Save[];\n}\n\nexport class Saves extends React.Component<ISavesProps, {}> {\n    render() {\n        return (\n            <Box className=\"saves-list\"\n                padding=\"0\"\n            >\n                {this.props.saves.map(save => {\n                    return (\n                        <SkillContainer key={save.kind} name={save.kind} score={save.value} enabled={save.enabled} />\n                    )\n                })}\n            </Box>\n        )\n    }\n}\n\ninterface ISkillsListProps {\n    skills: [SkillKind, number, boolean][];\n}\n\nexport class SkillsList extends React.Component<ISkillsListProps, {}> {\n    render() {\n        return (\n            <Box className=\"skills-list\"\n                padding=\"0\"\n            >\n                {this.props.skills.map(skill => {\n                    return (<SkillContainer key={`skill-${skill[0]}`} name={skill[0]} score={skill[1]} enabled={skill[2]} />)\n                })}\n            </Box>\n        )\n    }\n}\n\ninterface ISkillContainerProps {\n    name: string;\n    score: number;\n    enabled: boolean\n}\n\nexport class SkillContainer extends React.Component<ISkillContainerProps, {}> {\n    render() {\n        return (\n            <div className=\"skill-container\">\n                <Radio className=\"skill-flag\"\n                    defaultChecked={this.props.enabled}\n                    disabled\n                />\n                <Text className=\"skill-value\">{this.props.score}</Text>\n                <Text className=\"skill-name\">{this.props.name}</Text>\n            </div>\n        )\n    }\n}\n\ninterface IPassiveWisdomProps {\n    value: number;\n}\n\ninterface IPassiveWisdomState {\n\n}\n\nexport class PassiveWisdom extends React.Component<IPassiveWisdomProps, IPassiveWisdomState> {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <Box\n                height={20}\n                padding=\"1px\"\n                className=\"passive-wisdom\"\n            >\n                <Text>{this.props.value}</Text><Text>passive perception</Text>\n            </Box>\n        );\n    }\n}\n\ninterface IDefencesProps {\n    armorClass: number;\n    initiative: number;\n    speed: number;\n    hitPoints: number;\n    damage: number;\n    tempHitPoints: number;\n    hitDice: Class;\n    damageChanged: (newDmg: number) => void;\n    tempHPChanged: (newTemp: number) => void;\n}\n\ninterface IDefencesState {\n\n}\n\nexport class Defences extends React.Component<IDefencesProps, IDefencesState> {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <Box\n                className=\"defences\"\n                padding=\"8px 0\"\n            >\n                <DefenceContainer name=\"Armor Class\" value={this.props.armorClass} />\n                <DefenceContainer name=\"Initiative\" value={this.props.initiative} />\n                <DefenceContainer name=\"Speed\" value={this.props.speed} />\n                <DefenceContainer name=\"Hit Points\" value={this.props.hitPoints} />\n                <DefenceContainer\n                    name=\"Temp Hit Points\"\n                    value={this.props.tempHitPoints}\n                    valueChanged={newTemp => this.props.tempHPChanged(newTemp)}\n                />\n                <DefenceContainer\n                    name=\"Damage\"\n                    value={this.props.damage}\n                    valueChanged={newValue => this.props.damageChanged(newValue)}\n                />\n                <HitDieDefenceContainer characterClass={this.props.hitDice} />\n            </Box>\n        );\n    }\n}\n\ninterface IDefenceContainerProps {\n    name: string;\n    value: number;\n    valueChanged?: (newValue: number) => void;\n}\n\ninterface IDefenceContainerState {\n\n}\n\nexport class DefenceContainer extends React.Component<IDefenceContainerProps, IDefenceContainerState> {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        let cls = formatClass(this.props.name);\n        return (\n            <Box\n                className={`defence-container ${cls}`}\n                padding=\"8px\"\n            >\n                <Label className={`defence-name ${cls}`}>{this.props.name}</Label>\n                {this.props.valueChanged ?\n                    <div className=\"adjustable-inner\">\n                        <Text className={`defence-value ${cls}`}>{this.props.value}</Text>\n                        <Button\n                            className=\"adjust-up\"\n                            onClick={() => this.props.valueChanged(this.props.value + 1)}\n                            padding=\"0px\"\n                            style={{\n                                fontFamily: 'Material Icons',\n                                lineHeight: 1,\n                            }}\n                        >expand_less</Button>\n                        <Button\n                            className=\"adjust-down\"\n                            onClick={() => this.props.valueChanged(this.props.value - 1)}\n                            style={{\n                                fontFamily: 'Material Icons',\n                                lineHeight: 1,\n                            }}\n                            padding=\"0px\"\n                        >expand_more</Button>\n                    </div>\n                    : <Text className={`defence-value ${cls}`}>{this.props.value}</Text>}\n            </Box>\n        );\n    }\n}\n\ninterface IHidDieDefenceContainerProps {\n    characterClass: Class\n}\n\ninterface IHidDieDefenceContainerState {\n\n}\n\nexport class HitDieDefenceContainer extends React.Component<IHidDieDefenceContainerProps, IHidDieDefenceContainerState> {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        let c = this.props.characterClass;\n        return (\n            <Box\n                className=\"defence-container hit-die\"\n                padding=\"0px\"\n            >\n                <Label className=\"defence-name\">Hit Dice</Label>\n                <div className=\"defence-value\" key={`hit-die-${c.name}-${c.level}`}>\n                    <Text>{`d${c.hitDie}`}:</Text><Text>{c.level}</Text>\n                </div>\n            </Box>\n        );\n    }\n}\n\ninterface IWeaponsProps {\n    weapons: Weapon[];\n    adjustWeapons: (newWeapons: Weapon[]) => void;\n}\n\ninterface IWeaponsState {\n    addingWeapon: boolean;\n}\n\nexport class Weapons extends React.Component<IWeaponsProps, IWeaponsState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addingWeapon: false,\n        };\n    }\n    render() {\n        let ret =\n            [<Box\n                key=\"weapons\"\n                className=\"weapons\"\n                padding=\"8px 0\"\n            >\n                {this.props.weapons.map((w, i) => (<WeaponContainer\n                    key={`weapon-${i}`}\n                    weapon={w}\n                    onDeleteClicked={() => this.removeWeapon(i)}\n                />))}\n                <Button\n                    onClick={() => this.setState({ addingWeapon: true })}\n                >add</Button>\n\n            </Box>,\n            ];\n        if (this.state.addingWeapon) {\n            ret.push(<NewWeapon\n                key=\"new-weapon\"\n                onComplete={newWeapon => this.addWeapon(newWeapon)}\n            />)\n\n        }\n        return ret;\n    }\n    addWeapon(newWeapon: Weapon) {\n        this.setState({ addingWeapon: false }, () => {\n            if (newWeapon === null) return;\n            let newWeapons = this.props.weapons.map(w => w).concat([newWeapon]);\n            this.props.adjustWeapons(newWeapons);\n        });\n    }\n    removeWeapon(idx) {\n        let newWeapons = this.props.weapons.filter((w, i) => i != idx);\n        this.props.adjustWeapons(newWeapons);\n    }\n}\n\ninterface IWeaponContainerProps {\n    weapon: Weapon;\n    onDeleteClicked: () => void;\n}\n\ninterface IWeaponContainerState {\n\n}\n\nexport class WeaponContainer extends React.Component<IWeaponContainerProps, IWeaponContainerState> {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <Box className=\"weapon-container\"\n                padding=\"0px\"\n                height={20}\n            >\n                <Text className=\"weapon-name\">{this.props.weapon.name}</Text>\n                <Text className=\"weapon-dmg\">{`${this.props.weapon.hitDie[0]}d${this.props.weapon.hitDie[1]}`}</Text>\n                <Text className=\"weapon-misc\">{this.props.weapon.miscString()}</Text>\n                <Button\n                    onClick={() => this.props.onDeleteClicked()}\n                    padding=\"0px\"\n                    style={{\n                        height: 19,\n                        width: 19,\n                    }}\n                >\n                    <i style={{ fontFamily: 'Material Icons' }}>delete</i>\n                </Button>\n            </Box>\n        );\n    }\n}\n\ninterface INewWeaponProps {\n    onComplete: (weapon: Weapon) => void;\n}\n\ninterface INewWeaponState {\n    weapon: Weapon;\n}\n\nexport class NewWeapon extends React.Component<INewWeaponProps, INewWeaponState> {\n    private cachedHandler;\n    constructor(props: INewWeaponProps) {\n        super(props);\n        this.state = {\n            weapon: new Weapon('Dagger', WeaponType.Melee, WeaponKind.Simple, WeaponDamageKind.Piercing, WeaponWeight.Light, WeaponHandedness.One, [1, 4], new Range(5), 1, new Range(60), false, true, ''),\n        }\n        this.cachedHandler = this.keyHandler.bind(this);\n        window.addEventListener('keyup', this.cachedHandler)\n    }\n    render() {\n        return (\n            <Dialog\n                className=\"new-weapon\"\n                padding=\"5px\"\n                style={{\n                    position: 'absolute',\n                    zIndex: 200,\n                }}\n                horizontalAlignment=\"center\"\n            >\n                <div>\n                    <Label style={{ textAlign: \"center\" }}>Name</Label>\n                    <TextInput\n                        focusRing={false}\n                        value={this.state.weapon.name}\n                        onChange={ev => this.updateState('name', ev.currentTarget.value)}\n                    />\n                </div>\n                <div>\n                    <Label style={{ textAlign: \"center\" }}>Type</Label>\n                    <select className=\"weapon-type\"\n                        value={this.state.weapon.weaponType}\n                        onChange={ev => this.updateState('weaponType', ev.currentTarget.value)}\n                    >\n                        <option value={WeaponType.Melee}>{WeaponType.Melee}</option>\n                        <option value={WeaponType.Range}>{WeaponType.Range}</option>\n                    </select>\n                </div>\n                <div>\n                    <Label style={{ textAlign: \"center\" }}>Kind</Label>\n                    <select\n                        className=\"weapon-kind\"\n                        value={this.state.weapon.kind}\n                        onChange={ev => this.updateState('kind', ev.currentTarget.value)}\n                    >\n                        <option value={WeaponKind.Simple}>{WeaponKind.Simple}</option>\n                        <option value={WeaponKind.Simple}>{WeaponKind.Martial}</option>\n                        <option value={WeaponKind.Simple}>{WeaponKind.Natural}</option>\n                    </select>\n                </div>\n                <div>\n                    <Label style={{ textAlign: \"center\" }}>Damage Kind</Label>\n                    <select\n                        className=\"weapon-damage\"\n                        value={this.state.weapon.damageKind}\n                        onChange={ev => this.updateState('damageKind', ev.currentTarget.value)}\n                    >\n                        <option value={WeaponDamageKind.Acid}>{WeaponDamageKind.Acid}</option>\n                        <option value={WeaponDamageKind.Bludgeoning}>{WeaponDamageKind.Bludgeoning}</option>\n                        <option value={WeaponDamageKind.Cold}>{WeaponDamageKind.Cold}</option>\n                        <option value={WeaponDamageKind.Fire}>{WeaponDamageKind.Fire}</option>\n                        <option value={WeaponDamageKind.Lightening}>{WeaponDamageKind.Lightening}</option>\n                        <option value={WeaponDamageKind.Piercing}>{WeaponDamageKind.Piercing}</option>\n                        <option value={WeaponDamageKind.Poison}>{WeaponDamageKind.Poison}</option>\n                        <option value={WeaponDamageKind.Slashing}>{WeaponDamageKind.Slashing}</option>\n                    </select>\n                </div>\n                <div>\n                    <Label style={{ textAlign: \"center\" }}>Weight</Label>\n                    <select\n                        className=\"weapon-weight\"\n                        value={this.state.weapon.weight}\n                        onChange={ev => this.updateState('weight', ev.currentTarget.value)}\n                    >\n                        <option value={WeaponWeight.Light}>{WeaponWeight.Light}</option>\n                        <option value={WeaponWeight.Light}>{WeaponWeight.Heavy}</option>\n                    </select>\n                </div>\n                <div>\n                    <Label style={{ textAlign: \"center\" }}>Handedness</Label>\n                    <select\n                        className=\"weapon-handedness\"\n                        value={this.state.weapon.handedness}\n                        onChange={ev => this.updateState('handedness', ev.currentTarget.value)}\n                    >\n                        <option value={WeaponHandedness.One}>{WeaponHandedness.One}</option>\n                        <option value={WeaponHandedness.Two}>{WeaponHandedness.Two}</option>\n                        <option value={WeaponHandedness.Versatile}>{WeaponHandedness.Versatile}</option>\n                    </select>\n                </div>\n                <div>\n                    <Label style={{ textAlign: \"center\" }}>Damage</Label>\n                    <div className=\"hit-die\">\n                        <input\n                            type=\"number\"\n                            value={this.state.weapon.hitDie[0]}\n                            onChange={ev => this.updateState(\"hitDie\", [ev.currentTarget.valueAsNumber, this.state.weapon.hitDie[1]])}\n                        />\n                        <input\n                            type=\"number\"\n                            value={this.state.weapon.hitDie[1]}\n                            onChange={ev => this.updateState(\"hitDie\", [this.state.weapon.hitDie[0], ev.currentTarget.valueAsNumber])}\n                        />\n                    </div>\n                </div>\n                <div>\n                    <Label style={{ textAlign: \"center\" }}>Range</Label>\n                    <div>\n                        <input\n                            type=\"number\"\n                            value={this.state.weapon.range.first}\n                            onChange={ev => this.updateState('range', new Range(ev.currentTarget.valueAsNumber, this.state.weapon.range.second))}\n                        />\n                        {this.state.weapon.weaponType == WeaponType.Range\n                            ? <input\n                                type=\"number\"\n                                value={this.state.weapon.range.second || 0}\n                                onChange={ev => this.updateState('range', new Range(this.state.weapon.range.first, ev.currentTarget.valueAsNumber))}\n                            />\n                            : null}\n                    </div>\n                </div>\n                <div>\n                    <Label style={{ textAlign: \"center\" }}>Carry Weight (lbs)</Label>\n                    <input\n                        className=\"carry-weight\"\n                        value={this.state.weapon.carryWeight}\n                        type=\"number\"\n                        onChange={ev => this.updateState('carryWeight', ev.currentTarget.valueAsNumber)}\n                    />\n                </div>\n                <div>\n                    <Label style={{ textAlign: \"center\" }}>Finesse</Label>\n                    <Checkbox\n                        defaultChecked={this.state.weapon.isFinesse}\n                        onChange={ev => this.updateState('isFinesse', ev.currentTarget.checked)}\n                    />\n                </div>\n                <div>\n                    <Button\n                        onClick={() => this.props.onComplete(this.state.weapon)}\n                    >Save</Button>\n                    <Button\n                        onClick={() => this.props.onComplete(null)}\n                    >Cancel</Button>\n                </div>\n            </Dialog>\n        );\n    }\n\n    updateState(key: string, value: any) {\n        this.setState((prev, props) => {\n            prev.weapon[key] = value;\n            return { weapon: prev.weapon }\n        });\n    }\n\n    keyHandler(ev: KeyboardEvent) {\n        switch (ev.key) {\n            case 'Escape':\n                this.props.onComplete(null);\n                window.removeEventListener('keyup', this.cachedHandler);\n                delete this.cachedHandler;\n                break;\n            case 'Enter':\n                this.props.onComplete(this.state.weapon);\n                window.removeEventListener('keyup', this.cachedHandler);\n                delete this.cachedHandler;\n                break;\n        }\n    }\n}\n\ninterface IMoneyProps {\n    wealth: Wealth;\n    adjustMoney: (wealth: Wealth) => void;\n}\n\ninterface IMoneyState {\n    updatingMoney: boolean;\n}\n\nexport class Money extends React.Component<IMoneyProps, IMoneyState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            updatingMoney: false,\n        };\n    }\n    render() {\n        let ret = [\n            <Box className=\"money\"\n                key=\"money\">\n                <Box\n                    className=\"money-unit\"\n                    padding={2}\n                >\n                    <Label className=\"unit-value\">{this.props.wealth.copper}</Label>\n                    <Label className=\"unit-unit\">copper</Label>\n                </Box>\n                <Box className=\"money-unit\"\n                    padding={2}\n                >\n                    <Label className=\"unit-value\">{this.props.wealth.silver}</Label>\n                    <Label className=\"unit-unit\">silver</Label>\n                </Box>\n                <Box className=\"money-unit\"\n                    padding={2}\n                >\n                    <Label className=\"unit-value\">{this.props.wealth.electrum}</Label>\n                    <Label className=\"unit-unit\">electrum</Label>\n                </Box>\n                <Box className=\"money-unit\"\n                    padding={2}\n                >\n                    <Label className=\"unit-value\">{this.props.wealth.gold}</Label>\n                    <Label className=\"unit-unit\">gold</Label>\n                </Box>\n                <Box className=\"money-unit\"\n                    padding={2}\n                >\n                    <Label className=\"unit-value\">{this.props.wealth.platinum}</Label>\n                    <Label className=\"unit-unit\">platinum</Label>\n                </Box>\n                <Button\n                    onClick={() => this.updateMoney()}\n                >edit\n                </Button>\n            </Box>];\n        if (this.state.updatingMoney) {\n            ret.push(<MoneyAdjuster\n                key=\"money-adjuster\"\n                currentWealth={this.props.wealth}\n                onComplete={wealth => this.finishUpdatingMoney(wealth)}\n            />)\n        }\n        return ret;\n    }\n    updateMoney() {\n        this.setState({ updatingMoney: true })\n    }\n\n    finishUpdatingMoney(newValue: Wealth) {\n        this.setState((prev, props) => {\n            return { updatingMoney: false }\n        }, () => {\n            this.props.adjustMoney(newValue)\n        });\n    }\n}\n\ninterface IMoneyAdjusterProps {\n    currentWealth: Wealth;\n    onComplete: (wealth: Wealth) => void;\n}\n\ninterface IMoneyAdjusterState {\n    currentWealth: Wealth;\n    updatedWealth: Wealth;\n    updatedWealthMul: number;\n}\n\nexport class MoneyAdjuster extends React.Component<IMoneyAdjusterProps, IMoneyAdjusterState> {\n    private cachedHandler;\n    constructor(props: IMoneyAdjusterProps) {\n        super(props);\n        this.state = {\n            currentWealth: props.currentWealth,\n            updatedWealth: new Wealth(0, 0, 0, 0, 0),\n            updatedWealthMul: 1,\n        };\n        this.cachedHandler = this.keyHandler.bind(this);\n        window.addEventListener('keyup', this.cachedHandler);\n    }\n    render() {\n        return (\n            <Dialog className=\"money-adjuster\"\n                padding=\"5px\"\n                style={{\n                    position: 'absolute',\n                    zIndex: 100,\n                }}\n            >\n                <Box className=\"current-wealth inputs\"\n                    padding=\"0px\"\n                    style={{\n                        display: 'flex',\n                        flexFlow: 'column',\n                        marginBottom: 0,\n                    }}\n                    margin=\"0px\"\n                >\n                    <Label>Update Money</Label>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexFlow: 'row'\n                        }}\n                    >\n                        <div className=\"input-pair\">\n                            <Label>Copper</Label>\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.currentWealth.copper}\n                                onChange={ev => this.updateCurrentWealth('copper', parseInt(ev.currentTarget.value))}\n                                type=\"number\"\n                            />\n                        </div>\n                        <div className=\"input-pair\">\n                            <Label>Silver</Label>\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.currentWealth.silver}\n                                onChange={ev => this.updateCurrentWealth('silver', parseInt(ev.currentTarget.value))}\n                                type=\"number\"\n                            />\n                        </div>\n                        <div className=\"input-pair\">\n                            <Label>Electrum</Label>\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.currentWealth.electrum}\n                                onChange={ev => this.updateCurrentWealth('electrum', parseInt(ev.currentTarget.value))}\n                                type=\"number\"\n                            />\n                        </div>\n                        <div className=\"input-pair\">\n                            <Label>Gold</Label>\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.currentWealth.gold}\n                                onChange={ev => this.updateCurrentWealth('gold', parseInt(ev.currentTarget.value))}\n                                type=\"number\"\n                            />\n                        </div>\n                        <div className=\"input-pair\">\n                            <Label>Platinum</Label>\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.currentWealth.platinum}\n                                onChange={ev => this.updateCurrentWealth('platinum', parseInt(ev.currentTarget.value))}\n                                type=\"number\"\n                            />\n                        </div>\n                    </div>\n                </Box>\n                <Box className=\"updated-wealth inputs\" padding=\"0px\" margin=\"0px\">\n                    <Label>Add Money</Label>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexFlow: 'row'\n\n                        }}\n                    >\n                        <div className=\"input-pair\">\n                            <Label>Copper</Label>\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.updatedWealth.copper}\n                                onChange={ev => this.updateCurrentWealth('copper', parseInt(ev.currentTarget.value))}\n                                type=\"number\"\n                            />\n                        </div>\n                        <div className=\"input-pair\">\n                            <Label>Silver</Label>\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.updatedWealth.silver}\n                                onChange={ev => this.updateCurrentWealth('silver', parseInt(ev.currentTarget.value))}\n                                type=\"number\"\n                            />\n                        </div>\n                        <div className=\"input-pair\">\n                            <Label>Electrum</Label>\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.updatedWealth.electrum}\n                                onChange={ev => this.updateCurrentWealth('electrum', parseInt(ev.currentTarget.value))}\n                                type=\"number\"\n                            />\n                        </div>\n                        <div className=\"input-pair\">\n                            <Label>Gold</Label>\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.updatedWealth.gold}\n                                onChange={ev => this.updateCurrentWealth('gold', parseInt(ev.currentTarget.value))}\n                                type=\"number\"\n                            />\n                        </div>\n                        <div className=\"input-pair\">\n                            <Label>Platinum</Label>\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.updatedWealth.platinum}\n                                onChange={ev => this.updateCurrentWealth('platinum', parseInt(ev.currentTarget.value))}\n                                type=\"number\"\n                            />\n                        </div>\n                        <div className=\"input-pair\">\n                            <Label>Multiplier</Label>\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.updatedWealthMul}\n                                onChange={ev => this.setState({ updatedWealthMul: ev.currentTarget.valueAsNumber })}\n                                type=\"number\"\n                            />\n                        </div>\n                    </div>\n                </Box>\n                <div className=\"buttons\">\n                    <button\n                        onClick={() => this.props.onComplete(this.state.currentWealth.add(this.state.updatedWealth.mul(this.state.updatedWealthMul)))}\n                    >Save</button>\n                    <button\n                        onClick={() => this.props.onComplete(this.props.currentWealth)}\n                    >Cancel</button>\n                </div>\n            </Dialog>\n        );\n    }\n\n    updateCurrentWealth(unit: string, value: number) {\n        this.setState((prev, props) => {\n            prev.currentWealth[unit] = value;\n            prev.currentWealth.balance();\n            return {\n                currentWealth: prev.currentWealth,\n                updatedWealth: new Wealth(0, 0, 0, 0, 0),\n            };\n        });\n    }\n    updateUpdatedWealth(unit: string, value: number) {\n        this.setState((prev, props) => {\n            prev.updatedWealth[unit] = value;\n            return {\n                currentWealth: props.currentWealth,\n                updatedWealth: prev.updatedWealth,\n            };\n        });\n    }\n\n    keyHandler(ev: KeyboardEvent) {\n        switch (ev.key) {\n            case \"Escape\":\n                window.removeEventListener('keyup', this.cachedHandler);\n                this.props.onComplete(this.props.currentWealth);\n                delete this.cachedHandler;\n                break;\n            case \"Enter\":\n                window.removeEventListener('keyup', this.cachedHandler);\n                this.props.onComplete(this.state.currentWealth.add(this.state.updatedWealth.mul(this.state.updatedWealthMul)))\n                delete this.cachedHandler;\n                break;\n        }\n    }\n}\n\ninterface IProficiencyProps {\n    proficiency: string[];\n    languages: string[];\n}\n\ninterface IProficiencyState {\n\n}\n\nexport class Proficiency extends React.Component<IProficiencyProps, IProficiencyState> {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <Box className=\"proficiency\" padding=\"0px\">\n                <ListView>\n                    <ListViewSection\n                        header={<ListViewSectionHeader>\n                            <Label bold>Proficiency</Label>\n                        </ListViewSectionHeader>}\n\n                    >\n                        {this.props.proficiency.map((s, i) => {\n                            return (\n                                <ListViewRow key={`prof-${i}`} padding=\"0px\"><Text className=\"prof-value\" >{s}</Text></ListViewRow>\n                            )\n                        })}\n                    </ListViewSection>\n                    <ListViewSection\n                        header={<ListViewSectionHeader>\n                            <Label bold>Languages</Label>\n                        </ListViewSectionHeader>}\n                    >\n                        {this.props.languages.map((l, i) => (<ListViewRow padding=\"0px\" key={`lang-${i}`}><Text>{l}</Text></ListViewRow>))\n                        }\n                    </ListViewSection>\n                </ListView>\n            </Box>\n        );\n    }\n}\n\ninterface INotesProps {\n    notes: string[];\n}\n\ninterface INotesState {\n\n}\n\nexport class Notes extends React.Component<INotesProps, INotesState> {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <Box className=\"notes\">\n                <Label className=\"notes-header\">Notes</Label>\n                {this.props.notes.map((n, i) => {\n                    return (\n                        <Text className=\"note-value\" key={`note-${i}`}>{n}</Text>\n                    );\n                })}\n            </Box>\n        );\n    }\n}\n\ninterface IItemsListProps {\n    magicItems: MagicItem[];\n    expendables: ExpendableItem[];\n    adjustExpendables: (newExpendables: ExpendableItem[]) => void;\n    adjustMagics: (newMagics: MagicItem[]) => void;\n}\n\ninterface IItemsListState {\n    addingItem: boolean;\n}\n\nexport class ItemsList extends React.Component<IItemsListProps, IItemsListState> {\n    constructor(props: IItemsListProps) {\n        super(props);\n        this.state = {\n            addingItem: false,\n        };\n    }\n    render() {\n        let ret = [<Box className=\"items-list\"\n            key=\"items-list\">\n            <ListView>\n                    <ListViewSection className=\"magic-list item-list\">\n                        <ListViewSectionHeader>\n                            <Label bold>Magic Items</Label>\n                        </ListViewSectionHeader>\n                        {this.props.magicItems.map((item, i) => {\n                            return <ListViewRow padding={0} key={`magic-item-${i}`} className=\"magic-list-item\">\n                                <Text><span style={{ fontWeight: 'bold' }}>{`${item.name}`}</span>{` - ${item.buf}`}</Text>\n                                <Button\n                                    onClick={() => this.removeItem(i, true)}\n                                    padding=\"0px\"\n                                    width={19}\n                                    height={19}\n                                    style={{\n                                        lineHeight: '14px',\n                                        color: 'red',\n                                    }}\n                                >\n                                    <i style={{ fontFamily: 'Material Icons' }}>delete</i>\n                                </Button>\n                            </ListViewRow>\n                        })}\n                    </ListViewSection>\n                <ListViewSection className=\"expendable-list item-list\">\n                        <ListViewSectionHeader>\n                            <Label bold>Expendable Items</Label>\n                        </ListViewSectionHeader>\n                        {this.props.expendables.map((item, i) => {\n                            return <ListViewRow padding={0} key={`expendable-item-${i}`} className=\"magic-list-item\">\n                                <Text padding=\"0px\">{`${item.quantity}x`}<span style={{ fontWeight: 'bold' }}>{`${item.name}`}</span>{` - ${item.desc}`}</Text>\n                                <Button\n                                    onClick={() => this.adjustExpendables(i, item.quantity + 1)}\n                                    padding=\"0px\"\n                                    width={19}\n                                    height={19}\n                                    style={{\n                                        lineHeight: '14px'\n                                    }}\n                                >+</Button>\n                                <Button\n                                    onClick={() => this.adjustExpendables(i, item.quantity - 1)}\n                                    padding=\"0px\"\n                                    width={19}\n                                    height={19}\n                                    style={{\n                                        lineHeight: '14px'\n                                    }}\n                                >-</Button>\n                                <Button\n                                    onClick={() => this.removeItem(i, false)}\n                                    padding=\"0px\"\n                                    width={19}\n                                    height={19}\n                                    style={{\n                                        lineHeight: '14px',\n                                        color: 'red',\n                                    }}\n                                >\n                                    <i style={{ fontFamily: 'Material Icons' }}>delete</i>\n                                </Button>\n                            </ListViewRow>\n                        })}\n                    </ListViewSection>\n            </ListView>\n            <Button\n                onClick={() => this.setState({ addingItem: true })}\n            >add</Button>\n        </Box>];\n        if (this.state.addingItem) {\n            ret.push(<NewItem\n                key=\"new-item\"\n                newItemComplete={(newItem, magic) => this.addNewItem(newItem, magic)}\n            />);\n        }\n        return ret;\n    }\n\n    adjustExpendables(idx: number, newQty: number) {\n        let newExpendables = this.props.expendables.map((e, i) => {\n            if (i == idx) {\n                return new ExpendableItem(\n                    newQty,\n                    e.name,\n                    e.desc\n                )\n            }\n            return e;\n        });\n        this.props.adjustExpendables(newExpendables);\n    }\n    addNewItem(item: MagicItem | ExpendableItem, magic: boolean) {\n        this.setState({ addingItem: false }, () => {\n            if (!item) return;\n            if (magic) {\n                let newMagics = this.props.magicItems.map(m => m);\n                newMagics.push(item as MagicItem);\n                this.props.adjustMagics(newMagics);\n            } else {\n                let newExpendables = this.props.expendables.map(e => e)\n                newExpendables.push(item as ExpendableItem);\n                this.props.adjustExpendables(newExpendables);\n            }\n        });\n    }\n    removeItem(idx: number, magic: boolean) {\n        if (magic) {\n            let newMagics = this.props.magicItems.map(m => m);\n            newMagics.splice(idx, 1);\n            this.props.adjustMagics(newMagics);\n        } else {\n            let newExps = this.props.expendables.map(e => e);\n            newExps.splice(idx, 1);\n            this.props.adjustExpendables(newExps);\n        }\n    }\n}\n\ninterface INewItemProps {\n    newItemComplete: (item: MagicItem | ExpendableItem, isMagic?: boolean) => void;\n}\n\ninterface INewItemState {\n    magic: boolean;\n    pendingQty: number;\n    pendingName: string;\n    pendingDesc: string;\n}\n\nexport class NewItem extends React.Component<INewItemProps, INewItemState> {\n    private cachedHandler;\n    constructor(props: INewItemProps) {\n        super(props);\n        this.state = {\n            magic: false,\n            pendingDesc: '',\n            pendingName: '',\n            pendingQty: 1,\n        };\n        this.cachedHandler = this.keyHandler.bind(this);\n        window.addEventListener('keyup', this.cachedHandler);\n    }\n    render() {\n        return (\n            <Dialog className=\"new-item\"\n                style={{\n                    position: 'absolute',\n                }}\n            >\n                <select\n                    value={this.state.magic ? \"1\" : \"0\"}\n                    onChange={ev => this.setState({ magic: ev.currentTarget.value == \"1\" })}\n                >\n                    <option value=\"0\">Expendable</option>\n                    <option value=\"1\">Magic</option>\n                </select>\n                {\n                    this.state.magic\n                        ? <div className=\"input-set\">\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.pendingName}\n                                onChange={ev => this.setState({ pendingName: ev.currentTarget.value })}\n                                placeholder=\"Name\"\n                                title=\"Description\"\n                            />\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.pendingDesc}\n                                onChange={ev => this.setState({ pendingDesc: ev.currentTarget.value })}\n                                placeholder=\"Description\"\n                                title=\"Description\"\n                            />\n                        </div>\n                        : <div className=\"input-set\">\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.pendingQty.toString()}\n                                onChange={ev => this.setState({ pendingQty: ev.currentTarget.valueAsNumber })}\n                                type=\"number\"\n                                title=\"quantity\"\n                            />\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.pendingName}\n                                onChange={ev => this.setState({ pendingName: ev.currentTarget.value })}\n                                placeholder=\"Name\"\n                                title=\"Name\"\n                            />\n                            <TextInput\n                                focusRing={false}\n                                value={this.state.pendingDesc}\n                                onChange={ev => this.setState({ pendingDesc: ev.currentTarget.value })}\n                                placeholder=\"Description\"\n                                title=\"Description\"\n                            />\n                        </div>\n                }\n                <Button\n                    onClick={() => this.save()}\n                >Save</Button>\n                <Button\n                    onClick={() => this.props.newItemComplete(null)}\n                >Cancel</Button>\n            </Dialog>\n        );\n    }\n\n    save() {\n        if (this.state.magic) {\n            return this.props.newItemComplete(new MagicItem(this.state.pendingName, this.state.pendingDesc), true);\n        }\n        this.props.newItemComplete(new ExpendableItem(this.state.pendingQty, this.state.pendingName, this.state.pendingDesc), false);\n    }\n    keyHandler(ev: KeyboardEvent) {\n        switch (ev.key) {\n            case \"Escape\":\n                this.props.newItemComplete(null)\n                window.removeEventListener('keyup', this.cachedHandler);\n                delete this.cachedHandler;\n                break;\n            case \"Enter\":\n                this.save();\n                window.removeEventListener('keyup', this.cachedHandler);\n                delete this.cachedHandler;\n                break;\n        }\n    }\n}\n\nexport function formatClass(name: string): string {\n    return name.split(' ').map(w => w.toLowerCase()).join('-')\n}"],"sourceRoot":""}